<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Google Test学习总结]]></title>
    <url>%2F2020%2F03%2F04%2FGoogle-Test%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[CMake学习总结]]></title>
    <url>%2F2020%2F03%2F04%2FCMake%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[图神经网络资料汇总]]></title>
    <url>%2F2020%2F03%2F01%2F%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[由浅入深集成模型]]></title>
    <url>%2F2020%2F03%2F01%2F%E7%94%B1%E6%B5%85%E5%85%A5%E6%B7%B1%E9%9B%86%E6%88%90%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[传染病相关论文汇总]]></title>
    <url>%2F2020%2F03%2F01%2F%E4%BC%A0%E6%9F%93%E7%97%85%E7%9B%B8%E5%85%B3%E8%AE%BA%E6%96%87%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[传染病相关论文汇总为什么要做这个研究？研究的进展如何？当前研究存在什么问题？（基于什么假设？融入了何种先验知识？实验是否足以支持论文的观点？研究对于现实的指导意义在哪儿？） 基于复杂网络理论的传染病动力学建模与研究清华大学航天航空学院倪顺江 12]]></content>
  </entry>
  <entry>
    <title><![CDATA[各类有用书签资源汇总]]></title>
    <url>%2F2019%2F04%2F20%2F%E5%90%84%E7%B1%BB%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E4%B9%A6%E7%AD%BE%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[编程||软件开发论坛 stackoverflow：https://stackoverflow.com 练习平台 Code Jam：https://codingcompetitions.withgoogle.com/codejam tutsplus：https://code.tutsplus.com/ sitepoint：https://www.sitepoint.com/ 工具 tortoisegit：https://tortoisegit.org/ 数据字典工具：https://dbmstools.com/data-dictionary-tools DBeaver Mock data generator：https://github.com/dbeaver/dbeaver/wiki/Mock-Data-Generation-in-DBeaver 问卷调研 问卷星：https://www.wjx.cn/newwjx/manage/myquestionnaires.aspx 需求分析 Mindmaps：https://www.mindmapping.com/ mindmaps：https://www.mindmaps.app/Github开源，基于HTML5，Js，Css。项目地址：https://github.com/drichard/mindmaps Mindmap：chrome扩展 Coggle:实时协作 FreeMind：https://sourceforge.net/projects/freemind/files/latest/download免费思维导图软件，由Java编写 XMinds:https://www.xminds.com/ 架构设计 Visio：https://products.office.com/zh-cn/visio/flowchart-software plantuml：http://plantuml.com/zh/class-diagram Edraw：https://www.edrawsoft.cn/ Rational Rose： 协作工具 Github：https://github.com/共同开发，分布式版本控制 SVN：https://tortoisesvn.net/ OneNote：http://www.onenote.com/download/ Teamviewer：https://www.teamviewer.com/cn/多人会议 集成开发环境||编辑器 Atom：https://atom.io/Github推出的跨平台文本编辑器 Netbeans：https://netbeans.org/开源Java IDE。可扩展于PHP、C++等语言开发 Pycharm：https://www.jetbrains.com/pycharm/JetBrains推出的Python开发环境 IntelliJ IDEA：https://www.jetbrains.com/idea/JetBrains推出的Java开发环境 Eclipse：https://download.eclipse.org/基于Java的可扩展开发平台，通过插件组件构建开发环境 Code::Blocks：https://www.codeblocks.org/开源全功能C++开发环境，使用wxWidgets图形界面库，由C++语言开发完成 Aptana Studio 3：https://www.aptana.com/开源Ajax开发环境 CLion：https://www.jetbrains.com/clionJetbrains推出的C++开发环境 CodeLite:https://codelite.org开源，C/C++编程语言的跨平台IDE Komodo:https://www.activestate.com/products/komodo-ide/ Xcode:https://developer.apple.com/xcode/ Visual Studio： Sublime：http://www.sublimetext.com/ 模拟 夜神模拟器：https://www.yeshen.com/ Easy-Mock：https://easy-mock.com/ 库 ms4w：https://ms4w.com/MapServer for Windows angular：https://angularjs.org/ JQuery：http://jquery.com/ React：https://reactjs.org/js构建用户界面 jQuery插件：http://plugins.jquery.com/ wxwidgets：https://www.wxwidgets.org/轻量级C++ GUI库 学习资源 Javascript：https://github.com/jobbole/awesome-python-books 云平台 LeanCloud：https://leancloud.cn/ Google Earth Engine：https://earthengine.google.com/ 设计原型设计 ProcessOn：https://www.processon.com/diagrams团队协作、流图绘制 Mockingbird：https://gomockingbird.com/home在线原型设计平台 Gliffy：https://www.gliffy.com/ Drawanywhere：http://www.drawanywhere.com/ Sketch：http://www.sketchcn.com/Mac用草图软件 图标生成&amp;&amp;下载 Easyicon：https://www.easyicon.net/ iconbench：http://iconbench.com/ Fontello：http://fontello.com/ icondeposit：https://www.icondeposit.com/ iconarchive：http://www.iconarchive.com/ Flaticon：https://www.flaticon.com/ Logo设计 logospire：http://logospire.com/ 壁纸 wallpaperscraft：https://wallpaperscraft.com/ 可视化 processing：https://processing.org/ Dionysus：https://www.mrzv.org/software/dionysus/ apophysis：http://www.apophysis.org/downloads.html guihi：http://gudhi.gforge.inria.fr/python/latest/ d3.js：https://d3js.org pyechart：https://pyecharts.org/#/zh-cn/global_options?id=legendopts：图例配置项 信息安全C&amp;C网络流量whonix：https://www.whonix.org/ 其他电脑工具下载工具 IDM：http://www.internetdownloadmanager.com/ 数学 MIT Gibert-Strang：http://www-math.mit.edu/~gs/ GIS二次开发Python pywin32：https://github.com/mhammond/pywin32 GithubTools Summary 伯乐在线整理：https://github.com/jobbole/ 论文论文查重 http://www.cnkicheck.info/ 学习资源 Git分支：https://learngitbranching.js.org/ 图解Git：https://marklodato.github.io/visual-git-guide/index-zh-cn.html GoogleBlog：https://ai.googleblog.com/ Wavelab_850：http://statweb.stanford.edu/~wavelab/Wavelab_850/download.html]]></content>
      <tags>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Question For 2019-04]]></title>
    <url>%2F2019%2F04%2F05%2FQuestion-For-2019-04%2F</url>
    <content type="text"><![CDATA[对抗网络POT12345678910installing library code to build\bdist.win-amd64\eggrunning install_librunning build_pyrunning build_extbuilding 'ot.lp.emd_wrap' extensionC:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.14.26428\bin\HostX86\x64\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Iot/lp -IE:\Anaconda\lib\site-packages\numpy\core\include -IC:\Users\CoolCats\Desktop\TDA\POT\ot/lp -IE:\Anaconda\include -IE:\Anaconda\include "-IC:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.14.26428\ATLMFC\include" "-IC:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.14.26428\include" /EHsc /Tpot/lp/emd_wrap.cpp /Fobuild\temp.win-amd64-3.7\Release\ot/lp/emd_wrap.obj -O3cl: 命令行 warning D9002 :忽略未知选项“-O3”emd_wrap.cppe:\anaconda\include\pyconfig.h(59): fatal error C1083: 无法打开包括文件: “io.h”: No such file or directoryerror: command 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\bin\\HostX86\\x64\\cl.exe' failed with exit status 2 最优传输的前景最优传输在可否降低计算量？最优传输对于遥感影像融合有何帮助？refer：https://hal.archives-ouvertes.fr/hal-01377234/document 数据融合处理多种数据源的整合。最优传输方法在寻找多种数据间的最优耦合，最优性与传输代价相关。 目标是匹配两种与同一物体相关联的概率分布 什么是域适应？Conceptual Wavelets in Disital Signal Processingtime and frequency. How to Eat an elephant? Chapter 1什么是小波？与正弦曲线周期性无限的扩展不同，小波有起始和终止。正弦曲线平滑且可预测，对于描述固定频率来说有较好的表现，小波非周期性、并且具有一定的持续时间，且常常非对称的，在描述异常现象，脉冲和信号生存期的起始和终止方面具有优势。 什么是小波滤波？与小波有什么不同？变换的价值短时变换能同时提供时间和频率的信息的一个可能的思路即将整个时间区间分成多个短时区间，然后对每个区间进行FFT，此即短时傅里叶变换。 快速傅里叶变换的例子连续小波变换的例子UDWTDWTChapter 2：The Continuous Wavelet Transform（CWT） Step by StepOpenGLglad.c]]></content>
  </entry>
  <entry>
    <title><![CDATA[Javascript notes]]></title>
    <url>%2F2019%2F03%2F23%2FJavascripts-notes%2F</url>
    <content type="text"><![CDATA[Javascript简要总结Web前端基础HTML：结构层，CSS：表现层，Javascript：行为层。 js特点脚本编程语言，其解释器内置到Web浏览器中 动画、交互、动态视觉效果增强HTML的功能 提供即时反馈的功能（PHP等服务端语言则依赖于客户端和服务端的通信，延迟较强） js库流行库 Jquery“Write less, do more!”。解决浏览器兼容问题。Jquery UI插件可轻易创建复杂的用户界面元素。Jquery使用统计：https://trends.builtwith.com/javascript/jQuery Mootools面向流畅的动画和视觉效果https://mootools.net/ Angular.js Backbone.js Dojo Toolkit raphaeljs.com ml5.jshttps://ml5js.org/ tensorflow.jshttps://www.tensorflow.org/js 非流行库 kind editorhttps://github.com/kindsoft/kindeditor jQuery用户界面库 Kendo UIhttps://demos.telerik.com/kendo-ui/ Wijmo UIhttps://www.grapecity.com/en/wijmo jQWidgetshttps://www.jqwidgets.com/ 学习资料 书本HTML和CSS：《Head First HTML with CSS and XHTML》CSS技巧：《CSS3:The Missing Manual》HTML5智能表单：《HTML5 Forms》javascript与jQuery实战：《The Missing Manual》 网站The Missing Manual团队：http://www.missingmanuals.com/HTML Dog CSS：https://www.htmldog.com/CSS selector：http://css.maxdesign.com.au/selectutorial/CSS position：http://www.elated.com/articles/css-positioningCSS transition：http://www.css3files.com/transition/https://frontendmasters.com/books/front-end-handbook/2018/learning/https://github.com/sawmac/js3e 基本语法示例变量声明 varvar定义的变量可修改，不初始化会输出undefined，不报错 let块级作用域，函数内部使用let定义对函数外部无影响 constconst定义的变量不可以修改且必须初始化 示例：请求消息变量如何相应用户？prompt()函数可用于收集用户信息并根据输入改变页面。该函数会产生与alert()类似的对话框，然而它不仅可显示消息，还可获取答案123&lt;script&gt;var name = prompt("Who are you?","default value");&lt;/script&gt; 示例：数组操作在数组末尾添加项push()函数，允许向数组末尾添加多个项 在数组开头添加项unshift()函数，允许在数组开头添加多项 从数组删除元素pop()从末尾删除一项，shift()从开头删除一项，并返回该项 这种数组操作可实现队列效果FIFO，应用在如音乐播放器的顺序播放等具体场景， DOM对象Windowlocation跳转到新的Web页面 document特性事件捕获冒泡允许多个操作被集中处理（把事件处理器添加到一个父级元素上，避免把事件处理器添加到多个子级元素上），在对象层的不同级别捕获事件 捕获面向对象程序设计原型模式Ajax响应函数onSuccessonErrorDebug status codehttps://stackoverflow.com/questions/2000609/jquery-ajax-status-code-0 readyStatehttps://stackoverflow.com/questions/38498408/random-jquery-ajax-error-readystate-0?rq=1 jQuery基础如何获取jQuery？ 使用CDN（Content Distribution Network，内容分发网络） 节省Web服务器时间访问者可能在访问量谷歌微软或其他Web站点的时候已经缓存了jQuery文件，再次访问你的服务器就可直接使用缓存 不适合离线工作站点因需要访问互联网方能工作 下载jQuery文件到自己的计算机并添加到Web站点中 如何对页面元素进行选择？基本选择器 ID选择器 元素选择器 类选择器 高级选择器 派生选择器 孩子选择器&gt; 相邻兄弟选择器+ 属性选择器[] jQuery过滤器根据特定的特征进行过滤选择even过滤器选择元素集合里的所有偶数元素，odd选择奇数元素。first选择第一个，last选择最后一个元素。has找到包含其他选择器的元素。 如何添加或删除页面内容？jQuery提供了操作页面元素及内容的函数，包括替换HTML、精确找到与选择元素相关的HTML，删除标签、内容等功能。 html()从选择的元素处获取HTML文本，但要注意，如果有多个元素则只能获取文本中的第一个元素。如果该函数接收参数，则会替换元素中的html text()append()把HTML作为选择元素的最后一个孩子元素添加1$('#example').prepend('&lt;p&gt;Add to the last.&lt;/p&gt;') prepend()在选择的开始标签之后直接添加HTML1$('#example').prepend('&lt;p&gt;Add to the first.&lt;/p&gt;') remove()删除元素 replaceWith()以新内容替换选择的元素 clone()复制一个选择的元素 如何设置和读取标签属性？addClass()为元素添加一个特定的类 removeClass()从元素删除特定的类 css()允许为元素设置css属性。可传递json格式的列表一次性改变多个css属性 attr()返回HTML中设置的属性值 removeAttr()从标签删除一个属性 如何操纵选中的每个元素通常来说这类任务通过for循环遍历完成，但jQuery提供了独特功能。each() 匿名函数this和$(this)自动提取引用如何让页面通过事件动起来？事件 单击事件click 双击事件dblclivk mousedownclick事件的前一半 mouseup mouseover mouseover mousemove 文档事件和窗口事件浏览器窗口本身会理解一些事件，包括载入窗口时和访问者离开窗口时所触发的事件 load当Web浏览器完成下载Web页面文件的全部内容后，load事件触发 resize单击最大化按钮或则拖动调整大小的指针来改变浏览器窗口大小时，就触发了resize事件。 scroll拖动滚动条或鼠标滚轮滚动时触发scroll unload当用户单击了链接到其他页面的链接、关闭一个浏览器标签页或者关闭浏览器窗口时，触发unload事件。可用于警告访问者已经填写了一个表单但还没有提交等情况。 表单事件 submit reset change focus blur 键盘事件 keypress keyup keydown 按jQuery风格处理事件通常来说，jQuery处理事件的风格可按以下三个步骤走 使用选择器选择一个或多个元素 分配一个事件如为id为menu的元素添加点击事件 1$('#menu').click(); 向事件传递一个函数，定义当事件触发时会发生些什么可以传递之前定义过的函数名字，也可传递一个匿名函数 示例：事件双击12345678&lt;script&gt; $(document).ready(function () &#123; $('html').dblclick(function () &#123; var da = new Date(); alert('you had double click!' + da.toDateString()); &#125;) &#125;)&lt;/script&gt; 更多jQuery事件概念jQuery包括了一些特殊专用函数，贯彻write less, do more的理念。 等待HTML载入onload事件要等到页面完全下载后才执行，而jQuery的ready()函数知道HTML载入浏览器就允许页面脚本，无需等待图像或视频的载入。1234//ready()的简写方式$(function()&#123; //你的代码&#125;); 鼠标悬浮和移开 hover() 事件对象当Web浏览器触发事件时，有关事件的信息被记录下来并存储与事件对象中，jQuery中时间对象可以给指定处理事件的函数使用。如下一段代码123456789//在浏览器窗口的任何地方单击，单击对象被存储到evt对象中//pageX和pageY分别返回光标水平和垂直位置$(document).click(function (evt) &#123; var x = evt.pageX; var y = evt.pageY; $('.main').append('&lt;p&gt;('+x+','+y+')&lt;/p&gt;'); &#125;) //需注意，evt只是一个变量，而非javascript关键字，可用任何想用的 //名字，如event或e等等 事件属性 说明 pageX 浏览器窗口左边界到鼠标距离 pageY 浏览器窗口上边界到鼠标距离 screenX 屏幕左边界到鼠标的距离 screenY 屏幕上边界到鼠标的距离 which 用于确定按下的键的数值代码 得到的只是数值代码，如果想要键盘上实际字母、符号、数值，可用String.fromCharCode(evt.which)完成 target 作为事件的“目标”对象 data 把数据传递给事件处理函数 阻止事件的常规行为一些HTML元素对事件有预先编程的响应。例如，单击一个链接时通常会载入一个新的页面，单击表单的提交按钮会把表单数据发送给Web服务器。如果不希望Web浏览器进行常规行为i，可使用preventDefault()来阻止常规响应。应用场景如：用户没填写完一个表单即点击了提交按钮，此时不太希望将不完整的数据发送给服务器端。 删除事件有时需要删除之前已经分配给一个标签的事件，off()函数可以做到这一点。 阻止一个事件的传播stopPropagation()可组织事件传递到一个祖先标签上 高级事件管理on()函数允许指定一个事件以及响应该事件的一个函数，而且允许传递供事件处理函数使用的额外数据。on()函数的基本调用格式如下：1$('#selector').on('click',selector,data,functionName); 如果只想用on函数来附加一个事件和函数，则格式如下：1$('#selector').on('click',functionName); 示例：一页的FAQ12345678910111213141516171819&lt;script&gt; $(document).ready(function () &#123; $('.answer').hide(); $('.main h2').on('click',function () &#123; //to judge the status of the answer var $answer = $(this).next('.answer'); if($answer.is(':hidden'))&#123; // $answer.show(); $answer.slideDown();//slideDown以滑动的方式隐藏元素 $(this).addClass('close'); &#125;else&#123; // $answer.hide(); // $answer.fadeOut(); $answer.slideUp(); $(this).removeClass('close'); &#125; &#125;); &#125;); // end ready &lt;/script&gt; ####有趣的东西：http://letteringjs.com/ 动画和效果要制作出令人惊艳的动画和视觉效果，需要了解jQuery的一些内置效果和动画函数，以及如何将CSS3动画和jQuery工具融合实现流畅的动画效果。 jQuery效果诸如下拉式导航菜单、弹出式工具提示和自动幻灯片播放等让页面元素出现和小时的任务都依赖于按照意愿显示和隐藏元素的能力。jQuery提供了一些函数来实现隐藏和显示元素的目的。要使用这些效果，可将其应用到jQuery的一个选择。每个效果函数都接受一个可选的速度设置参数和回调函数，速度表示该效果完成所需要的时间，回调则表示该效果完成后所要执行的函数。如：1234$('selector').fadeOut('slow');//600ms$('selector').fadeOut('fas');//200ms$('selector').fadeOut('normal');//400ms$('selector').fadeOut(10000);//十秒淡出 注意，当使用一种效果使得元素消失时，浏览器并没有删除该元素，元素仍然存在于DOM中，代码存在于内存，只是其display属性设置成了none。总结效果有 基本显示和隐藏 show() hide() toggle() 淡入淡出元素 fadeIn() fadeOut() fadeToggle()组合了淡入淡出效果 fadeTo()把图像淡化到一定透明度，需提供一个速度参数和目标透明度参数。 滑动元素 slideDown() slideUp() slideToggle()如果当前元素是隐藏的，应用slideUp()函数，如果当前元素可见应用slideDown()函数。常与之搭档的还有toggleClass()函数，如果有特定的类则移除，无特定的类则添加。 css的绝对定位https://www.elated.com/articles/css-positioning/ 示例：登录滑块通过单击鼠标实现滑入或滑出视线的一个面板。123456789&lt;script&gt; $(document).ready(function () &#123; $('#open').on('click', function (evt) &#123; evt.preventDefault(); $('#login form').slideToggle(300); $(this).toggleClass('close') &#125;) &#125;); // end ready&lt;/script&gt; 动画jQuery提供了一个animate()函数，允许对任何css属性进行连续变化，接受像素、em和百分比值的数值。可对文本大小、页面上元素的位置、对象的透明度或者边框的宽度设计动画。 在效果完成后执行一个操作示例：动画仪盘表 选择一个标签 添加一个hover事件hover事件是jQuery的一个特殊函数，当访问者将鼠标悬停在该元素时，允许执行一组操作，当访问者将鼠标从元素上移走时会执行另一组操作。实际上就是mouseEnter和mouseLeave的组合。 为mouseEnter事件添加animate函数 为mouseLeave事件添加animate函数 1234567891011121314151617181920212223242526&lt;script&gt; $(document).ready(function () &#123; $('#dashboard').hover( function () &#123; console.log('Mouse enter'); $(this).stop().animate(&#123; 'left': '0', 'backgroundColor': 'rgb(27,45,94)' &#125;, 500, ); &#125;, function () &#123; console.log('Mouse leave'); $(this).stop().animate(&#123; 'left': '-100px', 'backgroundColor': 'rgb(255,253,2)' &#125;, 500, ) &#125; ); &#125;) ; // end ready&lt;/script&gt; jQuery与CSS3的过渡和动画CSS不具有事件。hover伪类可在mouseEnter上使用一种样式，mouseLeave时返回先前的样式。active伪类可以模拟一个点击。但对于双击、滚动、键盘制表等没有类似的CSS。 jQUery和CSS的转换CSS过渡可激发CSS特性变化。如为元素添加新样式并触发改变 jQuery和CSS动画CSS动画提供更多的控制而不是简单的转换 常见jQuery任务增强图片、链接、导航栏的功能 交换图像最常见的一种就是图像翻滚 改变图像的src属性注意：当使用js改变图像的src属性时，图片的位置是相对于页面的位置而非相对于js文件的位置。通过更高图像了响应事件，幻灯片效果是不是就是这一做的呢？ 使用jQuery交换图像除了更改src属性，还可通过replaceWith函数替换html达到更改图像的效果。replaceWith函数返回被替代的图像，所以，如果希望之后还要继续操作就图像，可以用一个变量来对其进行存储。 预载入图像预载入图像强迫浏览器在我们计划显示该图像之前下载它，当图像下载完时它存放在Web浏览器的缓存中，这样后续对该文件的访问请求由访问者的硬盘驱动器提供而非由Web服务器提供，即减少了等待时间。 翻滚图像翻滚图像是通过鼠标移动到图像上来触发的一种图像交换，即给mouseover事件分配一个图像交换 示例：添加翻滚图像jQuery插件jQuery维护的插件：http://plugins.jquery.com/jPanel插件： 创建响应式导航栏下拉式菜单隐藏链接，直到人们要求这些链接出现；可使用jQuery插件完成多种效果，如：https://www.smartmenus.org/。 smartmenus文档https://www.smartmenus.org/doc/ jQUery导航插件https://speckyboy.com/responsive-navigation-jquery-plugins/面板样式菜单：http://jpanelmenu.com/Multi-level Push Menu插件：http://multi-level-push-menu.make.rs/ 扩展Web表单表单主要用于收集信息，如完成一次在线销售的配送信息、接收访问者反馈、信息录入等。所以要考虑如何使得Web表单尽可能容易使用。 表单form、标签用于构建表单，input、textarea、select通常是表单的组成元素。 聚焦字段隐藏表单字段表单验证HTML5包含了许多可用于表单验证且可以跳过js的内置函数。也有不少jQuery验证插件，如Validation：http://jqueryvalidation.org/。它可以检查一个表单以确保所有必须字段都已填充完毕，并检查确保访问者的输入符合特定要求 验证手机号码https://stackoverflow.com/questions/280759/jquery-validate-how-to-add-a-rule-for-regular-expression-validation 123456// 手机号码验证$.validator.addMethod("isMobile", function(value, element) &#123; var length = value.length; var mobile = /^(13[0-9]&#123;9&#125;)|(18[0-9]&#123;9&#125;)|(14[0-9]&#123;9&#125;)|(17[0-9]&#123;9&#125;)|(15[0-9]&#123;9&#125;)$/; return this.optional(element) || (length == 11 &amp;&amp; mobile.test(value));&#125;, "请输入有效的手机号码!!"); 扩展验证 12345678910111213141516171819$.extend($.validator.messages, &#123; required: "这是必填字段", remote: "请修正此字段", email: "请输入有效的电子邮件地址", url: "请输入有效的网址", date: "请输入有效的日期", dateISO: "请输入有效的日期 (YYYY-MM-DD)", number: "请输入有效的数字", digits: "只能输入数字", creditcard: "请输入有效的信用卡号码", equalTo: "你的输入不相同", extension: "请输入有效的后缀", maxlength: $.validator.format("最多可以输入 &#123;0&#125; 个字符"), minlength: $.validator.format("最少要输入 &#123;0&#125; 个字符"), rangelength: $.validator.format("请输入长度在 &#123;0&#125; 到 &#123;1&#125; 之间的字符串"), range: $.validator.format("请输入范围在 &#123;0&#125; 到 &#123;1&#125; 之间的数值"), max: $.validator.format("请输入不大于 &#123;0&#125; 的数值"), min: $.validator.format("请输入不小于 &#123;0&#125; 的数值")&#125;); jquery validation异步方式验证用户名 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152$('#register').validate(&#123; rules: &#123; username: &#123; required: true, maxlength: 10, remote: &#123; url: 'checkuser.php', type: "post", data: &#123; //要传递的数据 username: function () &#123; return $("#username").val(); &#125; &#125;, &#125; &#125;, email: &#123; required: true, email: true &#125;, password: &#123; required: true, rangelength: [6, 18] &#125;, confirm_password: &#123;equalTo: '#password'&#125;, &#125;, messages: &#123; username: &#123; required: "请给一个账户名", maxlength: "请输入不超过10个字符", remote: "此账户名已存在" &#125;, email: &#123; required: "请提供您的邮箱地址", email: "此邮箱地址无效" &#125;, password: &#123; required: '请设置账号密码', rangelength: '密码长度应该是6-18位哦' &#125;, confirm_password: &#123; equalTo: '两次密码不匹配！' &#125; &#125;, errorPlacement: function (error, element) &#123; error.appendTo(element.parent()); &#125;&#125;) 错误提示位置errorPlacement用于控制错误信息提示的位置 确保验证不通过时不允许提交 添加自定义方法进行表单验证 jQuery UI使用以上一点jQuery已经可以快乐地写一段时间的程序了，增强表单、图像、链接都相当简单。但如果要创建更复杂的用户界面元素并保持快乐，jQuery UI可以帮助做到这一点。jQuery UI：http://jqueryui.com/ 简介jQuery UI提供了大量效果、用户交互和界面元素，简化了构建交互式网络应用的过程。 组件（Widget） 交互（Interaction） 效果（Effect） 创建对话框定制jQuery UI外观http://jqueryui.com/themeroller/ 高级jQueryAjax（Asynchronous Javascript and XML）Ajax最初产生于2005年，用来描述Google maps、Gmail等新一代Web站点所具备的基本特征。它表示Javascript、Web浏览器和Web服务器技术的混合交互。 特点Ajax允许一个Web页面向Web服务器提出请求并接收来自Web服务器的响应，然后无需载入新的Web页面即可更新数据，这样的站点给人更具响应性的感觉。如使用在线地图时，所有响应都无需载入新的Web页面。 用武之地 显示新的HTML内容而不用载入页面 提交一个表单并且立即显示结果 登录而不用离开页面 星级评定组件一个插件：http://www.wbotelhos.com/raty 遍历数据库信息 和Web服务器通信Ajax程序的核心是XMLHttpRequest对象，有时简称XHR，是构建到当前Web浏览器中的一种功能，允许Javascript像Web服务器发送信息并反过来从Web服务器接收信息 状态码定义：https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html Ajax的jQuery方式XML是计算机交换数据的一种常用格式。和HTML一样，XML允许使用标签来区别信息。 https://www.wikihow.com/Create-a-Secure-Session-Management-System-in-PHP-and-MySQL JSON发送来自服务器的另一种常用格式叫做JSON，即JavaScript Object Notation。 JSON.stringify(value[, replacer[, space]])用于将javascript转换为JSON字符串 JSON.parse()用于解析JSON字符串 任务列表应用安全前端校验防用户非法输入 jquery validate添加方法，使用正则表达式检查用户输入，使其只能为大小写字母、数字、下划线1234$.validator.addMethod("isValid", function(value, element) &#123; var valid = /^[a-zA-Z0-9_]&#123;1,10&#125;$/; return this.optional(element) || (valid.test(value));&#125;, "请输入有效的用户名!!"); 技巧利用开发者工具取css样式避免id号重复 Debug现象 异步Ajax有时无反应 Console一闪而过 Error NS_ERROR_XPC_SECURITY_MANAGER_VETO: Ajax请求返回{“readyState”:0,”status”:0,”statusText”:”error”}readyState代表ajax未初始化可能原因及解决：button的type为submit时会默认提交表单，而点击事件又绑定了ajax，如此会取消ajax。阻止默认提交表单即可，更改button的type为button Code简单表单验证完整示例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt; &lt;title&gt;Valite&lt;/title&gt; &lt;script src="../external/js/jquery-3.3.1.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" href="../external/css/bootstrap.css"&gt; &lt;script src="../external/js/jquery.validate.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;style&gt; .error &#123; color: #F00 &#125;&lt;/style&gt;&lt;script&gt; $(document).ready(function () &#123; $(':text:first').focus(); // 手机号码验证 $.validator.addMethod("isMobile", function(value, element) &#123; var length = value.length; var mobile = /^(13[0-9]&#123;9&#125;)|(18[0-9]&#123;9&#125;)|(14[0-9]&#123;9&#125;)|(17[0-9]&#123;9&#125;)|(15[0-9]&#123;9&#125;)$/; return this.optional(element) || (length == 11 &amp;&amp; mobile.test(value)); &#125;, "请输入有效的手机号码!!"); $('#register').validate(&#123; rules: &#123; username: &#123; required: true, maxlength: 10, remote: &#123; url: 'checkuser.php', type: "post", data: &#123; //要传递的数据 username: function () &#123; // let uname = $("#username").val(); return $("#username").val(); &#125; &#125;, &#125; &#125;, realname: &#123; required: true, &#125;, email: &#123; required: true, email: true &#125;, password: &#123; required: true, rangelength: [6, 18] &#125;, confirm_password: &#123;equalTo: '#password'&#125;, mobile: &#123; required: true, digits: true, isMobile:true &#125; &#125;, messages: &#123; username: &#123; required: "请给一个账户名", maxlength: "请输入不超过10个字符", remote: "此账户名已存在" &#125;, realname: &#123; required: "请输入您的真实姓名", &#125;, email: &#123; required: "请提供您的邮箱地址", email: "此邮箱地址无效" &#125;, password: &#123; required: '请设置账号密码', rangelength: '密码长度应该是6-18位哦' &#125;, confirm_password: &#123; equalTo: '两次密码不匹配！' &#125;, mobile: &#123; required: '请输入您的手机号码', digits: '请输入有效的手机号码', isMobile:'请输入有效的手机号码!' &#125; &#125;, errorPlacement: function (error, element) &#123; error.appendTo(element.parent()); &#125;, &#125;) $('#registerbtn').on('click', function (evt) &#123; evt.preventDefault(); let is_valid = $('#register').valid(); if (is_valid) &#123; $(this).prop('disabled', 'disabled'); onRegister(); &#125;else&#123; alert('请认真填写表单'); &#125; &#125;); function onRegister() &#123; let $username = $('#username').val(); let $password = $('#password').val(); let $realname = $('#realname').val(); let $email = $('#email').val(); let $mobile = $('#mobile').val(); let registerStr = &#123; "username": $username, "password": $password, "realname": $realname, "email": $email, "mobile": $mobile, &#125; $.ajax( &#123; url: "register.php", data: registerStr, async: true, cache: false, dataType: "json", success: onSuccess, error: onError &#125;); function onSuccess(response) &#123; let res = JSON.parse(JSON.stringify(response)); if(res["success"]==true)&#123; alert('注册成功！'); $(window.location).attr('href','login.html'); &#125; &#125; function onError(msg) &#123; alert('错误'); &#125; &#125; &#125;)&lt;/script&gt;&lt;body&gt;&lt;div class="wrapper"&gt; &lt;header&gt; &lt;/header&gt; &lt;div class="content row"&gt; &lt;div class="col-lg-8 col-md-8 col-sm-12 right"&gt; &lt;h3 class="col-sm-offset-9 col-sm-4 "&gt;注册&lt;/h3&gt; &lt;form id="register" class="form-horizontal" role="form" onsubmit="register.php"&gt; &lt;div class="form-group"&gt; &lt;label for="username" class="col-sm-6 control-label"&gt;用户名：&lt;/label&gt;&lt;input class="col-sm-6" id="username" type="text" name="username" placeholder="请输入账户名"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="password" class="col-sm-6 control-label"&gt;密码：&lt;/label&gt;&lt;input class="col-sm-6 " id="password" name="password" type="password" placeholder="请输入密码"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="confirm_password" class="col-sm-6 control-label"&gt;确认密码：&lt;/label&gt;&lt;input name="confirm_password" id="confirm_password" type="password" class="col-sm-6 " placeholder="请确认密码"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="realname" class="col-sm-6 control-label"&gt;真实姓名：&lt;/label&gt;&lt;input class="col-sm-6 " id="realname" type="text" name="realname" placeholder="请输入真实姓名"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="email" class="col-sm-6 control-label"&gt;邮箱：&lt;/label&gt;&lt;input class="col-sm-6 " name="email" id="email" type="email" placeholder="请输入邮箱"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="mobile" class="col-sm-6 control-label"&gt;电话号码：&lt;/label&gt;&lt;input class="col-sm-6 " name="mobile" id="mobile" type="tel" placeholder="请输入您的电话号码"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;div class="col-sm-offset-11 col-sm-2"&gt; &lt;button name="registerbtn" id="registerbtn" type="button" class="btn btn-default"&gt;注册&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 优秀开源项目Mockjs：https://github.com/nuysoft/MockEasy-Mock：https://github.com/easy-mock/easy-mock]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
        <tag>Web</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP notes]]></title>
    <url>%2F2019%2F03%2F20%2FPHP-notes%2F</url>
    <content type="text"><![CDATA[世界上最好的语言开发工具——PhpStorm创建文件模板 json_encodejson_decode1234567891011121314//get the parameter//connect to db server//construct a sql statement//send the statement to db server //select count(1)//to judge the value,intval()//pg_freeresult()//pg_close() JSON.stringifyJSON.parse PHP操作数据库连接postgres数据库1234567891011121314151617181920//接收客户端发送的数据$user= $_REQUEST["username"];$passwd = $_REQUEST["password"];$dbstr = "host=localhost port=5432 dbname=testweb user=testweb password=123456";// 连接postgres数据库$conn = pg_connect($dbstr);//判断连接状态if(!$conn)&#123; echo json_encode(array( "username"=&gt;$user, "Status"=&gt;false, "Code"=&gt;100 ));&#125;else&#123; echo json_encode(array( "username"=&gt;$user, "Status"=&gt;true, "Code"=&gt;200 ));&#125; 问题 Ubuntu配置apache2解析php在Ubuntu下安装apache和php，默认情况下可能服务器并不能解析php 1sudo apt install libapache2-mod-php 然后重启apache1service apache2 restart 远程调试服务器脚本 1ini_set("display_errors", "On"); 需要使用某个数据库时，记得在php.ini中开启对应数据库扩展. PHP7，本地机器（Win10）成功运行，在Ubuntu18上找不到pg_connect()函数，已确定开启pgsql extension解决办法，安装php-pgsql 123sudo apt search pgsqlsudo apt-get install php-pgsqlsudo service apache2 restart https://stackoverflow.com/questions/7438059/fatal-error-call-to-undefined-function-pg-connect 查询数据提交查询语句 pg_query()返回查询结果资源号，若查询失败或者提供的连接号无效则返回false，若连接号有效，则可用pg_last_error()函数提取详细错误信息。https://secure.php.net/manual/zh/function.pg-query.php pg_query_params()向服务器提交SQL命令并等待结果，并将参数与SQL命令分离https://secure.php.net/manual/zh/function.pg-query-params.php 1234567// 构造一个SQL查询语句$sql = "select count(1) from todo_user where 'user'=$1 and passwd=$2";$result = pg_query_params($dbconn, $sql, array($user,$passwd));if(!$result)&#123; echo "数据库查询失败"; exit(1);&#125; 函数若执行失败会向控制台打印错误信息，可加‘@’符号 从查询结果中提取数据 pg_fetch_row()根据指定的result资源提取一行数据作为数组返回，每个得到的列依次存放在数组中，从偏移量0开始 pg_fetch_array() 12345678910111213$row = (pg_fetch_row($result));if(intval($row[0])==0)&#123;//没有查到记录 echo json_encode(array( "username"=&gt;$user, "Status"=&gt;false, "Code"=&gt;100 ));&#125;else&#123;//存在此用户，登录成功 echo json_encode(array( "username"=&gt;$user, "Status"=&gt;200, ));&#125; 释放查询结果所释放的内存pg_free_result()函数仅在当你担心脚本执行时占用了过多内存时调用。脚本执行完毕后所有的查询结果占用的内存都会被自动释放。不过如果你确认在脚本中不会再用到查询结果了，你可以用 result 作为参数调用 pg_free_result() 来释放有关的内存。成功时返回 TRUE， 或者在失败时返回 FALSE。12pg_freeresult($result);pg_close($conn); 问题 Warning: A non-numeric value encountered类型问题，可能是采用了+作为连接符，使解释器误解，改用.更规范。或者使用如intval()之类的函数确保数据类型严格 ‘Debugging connection was closed. Reason: Render process gone.’ while trying to upload big/multiple files using FileReader Fatal error: Cannot use object of type stdClass as arrayjson_decode默认返回的参数是对象，其第二个参数可决定返回的类型是stdClass还是array，若第二个参数为true，则返回arrayhttps://www.php.net/manual/zh/function.json-decode.php类似地，注意PHP函数返回的数据类型 pg_affected_rows(): supplied resource is not a valid PostgreSQL result resource注意，函数接收的资源参数是有类型的，如pg_affected_rows函数只处理由insert、select、update所影响的行数https://www.php.net/manual/en/function.pg-affected-rows.php 无效的整数类型输入语法传入的数据类型不对，如要求整型数据却传递了字符串，可能造成解释器混淆。 插入数据PHP面向对象采用PDO连接数据库 PHP会话控制用户身份认证HTTP是无状态的，来自同一个人的连续请求之间并没有自动的连接或关联关系，在页与页之间传递数据需要自行处理。一种糟糕的想法是每浏览一页便将用户名跟密码发送一遍以达到认证身份的目的，这样将敏感信息重复发送的方式给攻击者创造了很大的机会。更好的办法是采用HTTP基本认证和会话控制。HTTP内置身份认证功能，我们自己也可实现自定义的身份认证。 会话控制会话控制的思想是在Web站点的单个会话中跟踪用户，可以支持用户登陆后根据其身份验证级别或个人选项显示相应内容，还可以记录用户行为实现类似购物车等功能。PHP提供了大量原声会话控制函数以及$_SESSION超级全局变量 基本会话功能 cookie多个事务之间保持状态问题的不同解决方案 通过PHP设置cookiesetcookie()函数可在PHP中手工设置cookie，如 12setcookie('my_cookie','cookie_value');//调用setcookie函数并设置过期时间可以删除一个cookie$_COOKIE['my_cookie'];//读取保存在cookie中的数据 https://secure.php.net/manual/zh/function.setcookie.php 会话中使用cookie cookie规范：https://tools.ietf.org/html/rfc6265 保存会话ID默认情况下，PHP会话使用cookie在客户端保存会话ID，PHP页提供了并内置方法将会话ID添加到URL中。若激活php.ini文件的session.use_trans_sid指令，会将会话ID自动添加到URL中。该指令默认为0（禁用） http://php.net/session.use-trans-sid 实现简单会话使用会话的基本步骤： 启动一个会话启动一个调用了session_start()函数的脚本123//检查当前是否有一个活跃会话，如果没有则创建会话并可通过超级全局数组$_SESSION访问。//如果会话已经存在，session_start()函数将载入注册的会话变量session_start(); 启动会话的另外一个方法是，配置PHP使得有人访问站点时会话自动启动. 注册会话变量设置$_SESSION数组的元素，记录会话变量，直到会话结束或者手工取消会话。会话过期时间根据php.ini文件的session.gc_maxlifetime设置。 使用会话变量通过isset()或empty()等方法检查会话变量是否已注册 123if(isset($SESSION['mysession']))&#123; //代码&#125; 取消变量注册及销毁会话 1unset($+SESSION['mysession']);//销毁变量 要一次性销毁所有会话变量，可进行如下操作1$_SESSION = array(); 完成会话使用后，需要销毁所有变量，并调用session_destroy()函数清楚会话ID Javascript与PHP集成简易登录注册示例数据库操作新建数据表12345678910CREATE TABLE todo_user ( "id" serial primary key, "user" varchar(30) unique, "passwd" varchar(30) NOT NULL);insert into todo_user("user",passwd) values ('hhhh','987654');insert into todo_user("user",passwd) values('test','123456');select * from todo_user; 更改数据表123ALTER TABLE public.todo_user ADD email varchar(64) NOT NULL;ALTER TABLE public.todo_user ADD phonenum numeric NOT NULL;ALTER TABLE public.todo_user ADD realname varchar(32) NOT NULL; 删除数据记录123insert into todo_user("user",passwd) values ('hhhh','987654');insert into todo_user("user",passwd) values('test','123456');delete from todo_user where "user"=''; 重建数据表1234567891011drop table if exists todo_user;create table if not exists todo_user( id serial primary key, "user" varchar(32) not null unique, "passwd" varchar(32) not null, "realname" varchar(18) not null, "email" varchar(64) not null, "mobile" varchar(11) not null); 12insert into todo_user("user",passwd,realname,email,mobile) values ('ge8','987654','乐乐','2781909@qq.com','74125896321');insert into todo_user("user",passwd,realname,email,mobile) values ('test','123456','傻傻','118190@qq.com','13224741258'); 批量插入测试数据生成一个大文件 注意点postgres的SQL方言与MySQL、SQLserver等有较大不同，表名、字段名的规范写法都要用双引号引起（单引号不行！）。对字段名用双引号引起可防止可能存在的关键字冲突，PHP构造SQL语句时如果不对表名如果不采用双引号引起，可能会发生很多不开心的事！ 连接数据库封装12345678910111213&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/22 * File: dbconn.php */define('HOST','127.0.0.1');define('PORT','5432');define('DB_NAME','dbdb');define('DB_USER','testuser');define('DB_PASSWD','testpwd'); 登录功能实现123456789101112131415161718192021222324252627282930313233343536373839404142&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/22 * File: login.php */$user= $_REQUEST["username"];$passwd = $_REQUEST["password"];include('dbconn.php');$dbstr = "host=".HOST." port=".PORT." dbname=".DB_NAME." user=".DB_USER;$dbconn = pg_connect($dbstr);//@pg_connectif(!$dbconn)&#123; die("请稍后再试");&#125;// 构造一个SQL查询语句$sql = "select count(1) from "."todo_user"." where ".'"user"'.'=$1 and passwd=$2';//实际开发中，应该保存密码的哈希值而非明文密码$result = pg_query_params($dbconn, $sql, array($user,$passwd)); //网站上线时改成@pg_query_params，防信息泄露if(!$result)&#123; echo json_encode(array( "username"=&gt;$user, "Status"=&gt;"Error", )); exit(1);&#125;else&#123; $row = (pg_fetch_row($result)); if(intval($row[0])==0)&#123;//没有查到记录 echo json_encode(array( "username"=&gt;$user, "Status"=&gt;false, "Code"=&gt;100 )); &#125;else&#123;//存在此用户，登录成功 echo json_encode(array( "username"=&gt;$user, "Status"=&gt;200, )); &#125; pg_freeresult($result); pg_close($dbconn);&#125; 异步方式检查账户名是否重复——后端123456789101112131415161718192021222324252627282930&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/22 * File: checkuser.php */$user = $_REQUEST["username"];include('dbconn.php');$dbstr = "host=".HOST." port=".PORT." dbname=".DB_NAME." user=".DB_USER;$dbconn = pg_connect($dbstr);//@pg_connectif (!$dbconn) &#123; die("请稍后再试");&#125;// 构造一个SQL查询语句检查用户名是否存在$sql = 'select count(1) from todo_user where "user"=$1';$result = pg_query_params($dbconn, $sql, array($user));//@pg_query_paramsif (!$result) &#123; exit(1);&#125; else &#123; $row = pg_fetch_all($result); $row = $row[0]["count"]; if ($row == 0) &#123;//没有查到记录 echo false; &#125; else &#123;//存在此用户，提示用户换一个账号名 echo true; &#125; pg_freeresult($result); pg_close($dbconn);&#125; 简单注册功能实现123456789101112131415161718192021222324252627282930313233343536373839404142&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/22 * File: register.php */include('dbconn.php');$dbstr = "host=".HOST." port=".PORT." dbname=".DB_NAME." user=".DB_USER;$dbconn = pg_connect($dbstr);$user = $_REQUEST["username"];$passwd = $_REQUEST["password"];$realname = $_REQUEST["realname"];$email= $_REQUEST["email"];$mobile = $_REQUEST["mobile"];if(!$dbconn)&#123;//数据库连接错误 //处理错误信息&#125; else&#123;//数据库连接成功 if($user=="")&#123;//除此以外，应该对用户数据做更多过滤 exit(1); &#125; $sql = "insert into todo_user"." ".'("user",passwd,realname,email,mobile) '." values($1,$2,$3,$4,$5)";//需要注意postgresql里面的SQL语句风格 $data = array( $user, $passwd, $realname, $email, $mobile ); $result = pg_query_params($dbconn, $sql,$data ); if(!$result)&#123; echo json_encode(array( "success"=&gt;false, "message"=&gt;pg_last_error(), )); &#125;else&#123; echo json_encode(array( "success"=&gt;true, "message"=&gt;"insert success!" )); &#125;&#125; 成功登录页面123456789101112131415161718192021222324252627282930&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/22 * File: index.php */session_start();//启动一个会话?&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;我的主页&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;欢迎!&lt;/h1&gt;&lt;?php//检查会话变量if(isset($_SESSION['user']))&#123;//检查$_SESSION变量是否设置，及当前会话是否包含一个已注册用户 echo '&lt;p&gt;你好, '.$_SESSION['user'].'&lt;/p&gt;'; echo '&lt;p&gt;&lt;a href="logout.php"&gt;退出登录&lt;/a&gt;&lt;/p&gt;';&#125; else&#123;//用户未登录，提示其登录 echo '&lt;p&gt;请先登录！&lt;/p&gt;'; echo '&lt;p&gt;&lt;a href="login.html"&gt;登录&lt;/a&gt;&lt;/p&gt;';&#125;?&gt;&lt;/body&gt;&lt;/html&gt; 退出登录功能实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/23 * File: logout.php */session_start();if(isset($_SESSION['user']))&#123; $old_user = $_SESSION['user']; unset($_SESSION['user']);&#125;session_destroy();?&gt;&lt;?php/** * Created by PhpStorm. * User: CoolCats * Date: 2019/3/23 * File: logout.php */session_start();if (isset($_SESSION['user'])) &#123; $old_user = $_SESSION['user']; unset($_SESSION['user']);&#125;session_destroy();?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;登出&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;登出页&lt;/h1&gt;&lt;?phpif (!empty($old_user)) &#123; //用户退出登录的情况 echo '&lt;p&gt;你已经退出登录&lt;/p&gt;';&#125; else &#123; //用户还没登录的情况 echo '&lt;p&gt;你还没有登录&lt;/p&gt;';&#125;?&gt;&lt;p&gt;&lt;a href="login.html"&gt;登录&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; PHP安全函数 htmlspecialchars()与htmlspecialchars_decode()对部分特殊字符进行转义 htmlentities()与html_entity_decode()转义所有的HTML字符 WebQQ Demo功能设计通知推送通知具有类型，如好友管理的通知（好友添加请求、好友删除通知）；群聊通知（成为管理员、群转让、群升级）； 好友管理 好友列表 添加好友用户1按照用户名查找用户2是否存在，并向其发送添加好友的通知；用户2接收到通知，决策是否要添加好友。 删除好友激活好友管理模块，在好友列表中增加checkbox，勾选要删除的好友#### 数据库12345678910-- user.sql-- uuid：https://www.uuidgenerator.net/-- epoch：https://www.epochconverter.com/-- qq_user 用户账户信息--还应加上权限create table qq_user( id serial primary key, username varchar(32) unique not null, "password" varchar(128) not null, -- createtime timestamp default now() -- 账号创建时间); 123456789101112drop table if exists user_detail;create table user_detail( id serial primary key, -- realname varchar(32) not null, -- 真实姓名 gender varchar(5) check (gender in ('男','女')) , -- 性别 email varchar(64) not null, -- 邮箱 mobile varchar(11) not null, -- 手机号码 industry varchar(32) not null, -- 行业 profession varchar(32), -- 职业 signature varchar(32), -- 个性签名 img varchar(32) -- 个人头像); 12345678-- relation.sql-- qq_friendships 关系create table qq_friendships( id serial primary key, user1 varchar(32) not null, -- 用户1 user2 varchar(32) not null, -- 用户2 buildtime timestamp default now() -- 成为好友的时间); UI设计123456789/***Connector.js**/Connector = function(opts)&#123; var me = this; me._opts = $.extends(&#123; &#125;)&#125;; uuid.js1234567891011121314151617181920212223242526272829303132333435363738394041424344/**DlgLogin.js**/var me = this;me._optsme._userIDme._pwdIDme._dlgConnector = function (opts) &#123; var me = this; me._opts = $.extend(&#123; url: "php/WebQQServer.php" &#125;, opts) $.ajax(&#123;//send the post request to the server url: me._opts.url, method: "POST", data: &#123; request: JSON.stringify(me._opts.data) &#125;, success: function (data) &#123; var json = JSON.parse(data); if (json.success) &#123; if (me._opts.success) &#123; me._opts.success(json); //处理登录成功逻辑 &#125; else &#123; alert(json.message); &#125; &#125; else &#123; if (me._opts.failure) &#123; me._opts.failure(json); &#125; else &#123; alert(json.message); &#125; &#125; &#125;, error: function (data) &#123; alert("网络异常"); &#125; &#125;);&#125;; myQQ.css Server.php123456class Server&#123; //requests //response //successTips()&#125; UserServer extends Server open1234567// set the request// open the connection// run the server// 用户简介12345678//个人头像//真实姓名：//性别//邮箱//手机号码//行业//职业//个性签名 好友列表返回1234567891011-- 目标，返回好友的id、用户名select * from qq_user A, qq_friendships B, qq_user Cwhere A.id = B.user1 and A.username = 'test'and B.user2 = C.id; showLoginDialog(){ logonSuccess:function(json){ } } 123456//登陆成功后后端记下session//DlgFriendsList//USER_GET_FRIEND_LIST_getFriendsList = function PHP安全开发防信息泄露防止“用户”浏览web服务器目录 法一在目录底下添加索引文件如index.html或index.php,使用户进入改目录自动被导向索引文件。（当然可以配置，不一定叫index）https://payloads.online/archivers/2018-04-27/1 防SQL注入防请求头绕过防任意代码执行]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《She walks in beauty》]]></title>
    <url>%2F2019%2F03%2F16%2F%E3%80%8AShe-walks-in-beauty%E3%80%8B%2F</url>
    <content type="text"><![CDATA[She Walks in Beauty– by George Gordon Byron She walks in beauty, like the nightOf cloudless climes and starry skies;And all that\’s best of dark and brightMeet in her aspect and her eyes;Thus mellowed to that tender lightWhich heaven to gaudy day denies. One shade the more, one ray the less,Had half impaired the nameless graceWhich waves in every raven tress,Or softly lightens o\’er her face;Where thoughts serenely sweet express, How pure, how dear their dwelling-place. And on that cheek, and o\’er that brow,So soft, so calm, yet eloquent,The smiles that win, the tints that glow,But tell of days in goodness spent,A mind at peace with all below,A heart whose love is innocent!]]></content>
      <categories>
        <category>Poetry</category>
      </categories>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostGIS notes]]></title>
    <url>%2F2019%2F03%2F15%2Fpostgis-notes%2F</url>
    <content type="text"><![CDATA[Basic Usage查看数据库信息 查看数据库版本 12345covid=# select version(); version ----------------------------------------------------------------------------------------- PostgreSQL 12.1 on x86_64-apple-darwin19.0.0, compiled by Apple clang version 11.0.0 (clang-1100.0.33.12), 64-bit(1 row) 查看当前数据库服务器的配置文件 12345678covid=# select name, setting from pg_settings where category=&apos;File Locations&apos;; name | setting -------------------+-------------------------------------------------------- config_file | /usr/local/Cellar/postgresql/12.1/data/postgresql.conf data_directory | /usr/local/Cellar/postgresql/12.1/data external_pid_file | hba_file | /usr/local/Cellar/postgresql/12.1/data/pg_hba.conf ident_file | /usr/local/Cellar/postgresql/12.1/data/pg_ident.conf 查看已经安装的扩展 1\dx 查看postgis版本 1select postgis_full_version(); 创建数据库从shell中指定postgis模板数据库创建1createdb -T template_postgis my_spatial_db 采用SQL语句创建数据库，并指定模板1postgres=# CREATE DATABASE my_spatial_db TEMPLATE=template_postgis FAQs从哪里可以找到PostGIS的教程？Introduction to PostGIS: https://learn.boundlessgeo.com/intro-to-postgis/214488更针对Windows用户的教程：http://www.bostongis.com/PrinterFriendly.aspx?content_name=postgis_tut01 针对大型的数据表如何加速空间查询？建立空间索引，以空间换时间1CREATE INDEX [indexname] ON [tablename] USING GIST ([geometrycolumn]) USING GIST即采用通用搜索树（Generalized Search Tree）索引 查询在某物一定半径之内的所有对象的最佳方式是？ST_DWithin(geometry,geometry,distance)是一种便捷的索引距离搜索方法:http://postgis.net/docs/ST_DWithin.html12SELECT * FROM geotableWHERE ST_DWithin(geocolumn, &apos;POINT(112 28)&apos;, 100.0); 如何执行坐标的二次投影？要进行二次投影，则源坐标系统和目标坐标系统的信息都需要提供。 Data management and QueryGIS对象PostGIS所支持的GIS对象是由OpenGIS Consortium（OGC）定义的简单要素的超集。 OpenGIS WKB和WKTEWKB、EWKT和Canonical FormsSpatial Query Demo查询京广线经过的省份省份表：铁路表：rail_4m 采用普通SQL查询查询京广线和省份1select name,geo from rail_4m where name like &apos;%京广%&apos;; 1select name,geo from county_poly; 使用ST_Union将京广线和省份的记录聚合ST_Union是PostGIS中用于联合的函数。将分散的京广线路联合，并创建成一个新的表1create table jingguang_l as select name as name,ST_Union(geo) as geo from rail_4m where name like &apos;%京广%&apos; group by name; 1select name,ST_Union(geo) from county_poly group by name; 使用ST_Intersects1234567select name, geofrom county_polywhere ST_Intersects(county_poly.geo,(select geo from jingguang_l)) 使用ST_Crosses1234567select name, geofrom county_polywhere ST_Crosses(county_poly.geo,(select geo from jingguang_l)) 思考与上者的区别？别想了，看文档吧 使用&amp;&amp;1234567select name, geofrom county_polywhere county_poly.geo &amp;&amp; (select geo from jingguang_l); 为什么会有内蒙古？ boolean &amp;&amp;( geometry A , geometry B ); 查询长江流经的省、市、自治区长江流经的省1234567select name, geofrom county_polywhere ST_Intersects(county_poly.geo,(select ST_Union(geo) from lake_line where name=&apos;长江&apos; group by name)) 长江流经的市1234567select name99, geofrom bou4_4polywhere ST_Crosses(bou4_4poly.geo,(select ST_Union(geo) from lake_line where name=&apos;长江&apos; group by name)) 随机生成100万个范围在(-180,-90),(180,90)之间的点1234567891011121314151617create table mytests( id serial, --the serial of point generated by system geo Geometry(POINT,4326) not null -- point data with cordnate 4326 which means WGS84); create some points and store them into the tableinsert into mytests(geo) select st_setsrid( st_makepoint( -180+360*random(), -90+180*random() ), 4326 ) from generate_series(1,1000000); 查询离(10,10)最近的点，建立空间索引后再进行相同查询，比较两次查询之间的时间差查询离(10,10)最近的点1select ST_Distance(geo,&apos;SRID=4326;POINT(10 10)&apos;::geometry) as distance,0,st_astext(geo) from mytests order by distance limit 10; 使用通用搜索树建立空间索引123456create index mytests_idxon mytestsusing gist(geo) 对建立空间索引的表查询离(10,10)最近的点1select ST_Distance(geo,&apos;SRID=4326;POINT(10 10)&apos;::geometry) as distance,0,st_astext(geo) from mytests order by distance limit 10; Database Management数据恢复从sql文件恢复或者从备份文件恢复 123456$ psql -U postgres -p 5432 -d covid -f code_county.sql$ psql -U postgres -p 5432 -d covid -f county.sql$ psql -U postgres -p 5432 -d covid -f code_city.sql$ psql -U postgres -p 5432 -d covid -f city.sql$ psql -U postgres -p 5432 -d covid -f code_province.sql$ psql -U postgres -p 5432 -d covid -f province.sql 问题：这样子恢复的数据库能保留数据表之间的关系吗？会，如果sql文件中包含了所依赖的表的信息，而该表不存在，会报错。 让人头痛的情况Postgres和PostGIS版本匹配问题及搜索路径配置问题不小心在mac系统中用brew升级了postgres（从11.2到12.0），然后发现使用空间查询模块时报错。postgis的版本没跟上，关键是使用brew升级postgis（到3.0）之后原来的postgis2.5目录被删了，导致进入11.2的服务器找不到空间查询相关的依赖库。 Postgres的配置文件在哪？作用是什么？postgresql.conf文件包含一些通用设置：内存分配、新建数据库的默认存储位置、PostgreSQL服务器的ip地址、日志位置 pg_hba.conf访问控制：管理客户端对Postgres的访问权限 pg_ident.conf 下面查找配置文件来一探究竟 关于查找也有两种方法，其一：采用SQL语句查找当前服务器的配置文件，如下，适合精准定位 12345678910covid=# select name, setting from pg_settings where category=&apos;File Locations&apos;; name | setting -------------------+-------------------------------------------------------- config_file | /usr/local/Cellar/postgresql/12.1/data/postgresql.conf data_directory | /usr/local/Cellar/postgresql/12.1/data external_pid_file | hba_file | /usr/local/Cellar/postgresql/12.1/data/pg_hba.conf ident_file | /usr/local/Cellar/postgresql/12.1/data/pg_ident.conf(5 rows) 其二：使用find、mdfind等命令找出电脑中所有权限可达的postgres配置文件（因为有时候你可能想看看电脑实际上安装了多少个postgres服务器？），如下： 12345678910111213141516171819202122(base) ➜ ~ git:(master) ✗ find / postgresql.conf | grep postgresql.conf/usr/local/var/postgres.old/postgresql.conf/usr/local/var/postgres/postgresql.conf/usr/local/var/postgresql@10/postgresql.conf/usr/local/Cellar/postgresql/12.1/data/postgresql.conf/usr/local/Cellar/postgresql/12.1/share/postgresql/postgresql.conf.sample/usr/local/Cellar/postgresql@10/10.11/share/postgresql@10/postgresql.conf.sample/usr/local/share/postgresql/postgresql.conf.sample(base) ➜ postgres git:(master) ✗ find / psql |grep psql/usr/local/bin/psql/usr/local/Cellar/postgresql/12.1/bin/psql(base) ➜ postgres git:(master) ✗ mdfind -name &quot;postgres&quot; | grep -G &quot;postgres$&quot;/usr/local/var/postgres/usr/local/Cellar/postgresql@10/10.11/bin/postgres/usr/local/Cellar/postgresql/12.1/bin/postgres/Users/zhuge/anaconda3/bin/postgres/Users/zhuge/anaconda3/pkgs/postgresql-11.5-h25afefd_1/bin/postgres 另外，还有一个命令pg_config也可以查看关于postgres的一些配置信息，参见：https://www.yiibai.com/manual/postgresql/app-pgconfig.html 好了，看重点吧…… postgis.control文件有何作用？123/usr/local/Cellar/postgis/3.0.0/share/postgresql/extension/postgis.control/usr/local/share/postgresql/extension/postgis.control 为什么在终端中可以成功执行空间查询？而在DBeaver中中却报错？通常我们采用类似如下的语句来验证是否PostGIS插件安装成功，如果安装成功，则能够链接到PostGIS相关的依赖库（里面包含了各种空间查询的方法），因此才能使用诸如ST_Point()等方法。 1SELECT ST_SetSRID(ST_Point(-87.71,43.741),4326),ST_GeomFromText('POINT(-87.71 43.741)',4326) 下图说明了终端中已经激活了postgis插件并且成功执行了空间查询语句 而在DBeaver中却报错了 SQL 错误 [42883]: ERROR: function st_point(numeric, numeric) does not exist 建议：No function matches the given name and argument types. You might need to add explicit type casts. 单纯看该错误而言就是PostGIS扩展未激活的原因，实际上在DBeaver的数据库栏目中也确实看到其扩展不包括postgis 新建扩展postgis后空间查询语句在DBeaver中也能work了 但是问题在于：为何终端中明明激活了扩展却没有在DBeaver中及时相应？（这个问题先留着） 如何在一台机器上让多个版本Postgres、PostGIS和谐共存通过brew将postgres升级到了12（太后悔了）PostGIS也升级到了2.5，但是以前的数据还是很宝贵啊，如何让我能正常访问以前postgresql11.2的数据库？让postgresql11和12共存，postgis2.5和postgis3.0共存？这个问题本质上应该是环境变量/搜索路径/服务端口的管理问题。 所以问题在于：我如何再安装一个postgis2.5，然后更改我postgres11的服务器，让他链接到postgis2.5的库，如果要两个版本的postgres同时用，那每个服务器占一个端口就行了。 psql=/usr/local/opt/postgres/bin/psql 想要让终端环境默认使用哪个版本，就把该版本的执行文件路径写入环境变量，如默认想通过brew安装的12.1，则按如下命令执行 12$ echo 'export PATH="/usr/local/Cellar/postgresql/12.1/bin:$PATH"' &gt;&gt; ~/.bash_profile$ source ~/.bash_profile 使用旧版本postgres创建的数据库，其数据文件和配置文件尚存，可否通过新版本的postgres启动之？12345678910111259 #listen_addresses = &apos;localhost&apos; # what IP address(es) to listen on;60 # comma-separated list of addresses;61 # defaults to &apos;localhost&apos;; use &apos;*&apos; for all62 # (change requires restart)63 port = 5433 # (change requires restart)64 max_connections = 100 # (change requires restart)65 #superuser_reserved_connections = 3 # (change requires restart)66 #unix_socket_directories = &apos;/tmp&apos; # comma-separated list of directories67 # (change requires restart)68 #unix_socket_group = &apos;&apos; # (change requires restart)69 #unix_socket_permissions = 0777 # begin with 0 to use octal notation70 # (change requires restart) 把2.5的扩展换成3 123456789101112131415(base) ➜ postgis-2.5.2 git:(master) ✗ psql -p 5433 postgrespsql (12.1, server 11.5)Type &quot;help&quot; for help.postgres=# \lpostgres=# \c ourmuseumpsql (12.1, server 11.5)You are now connected to database &quot;ourmuseum&quot; as user &quot;zhuge&quot;.ourmuseum=# \lourmuseum=# \dourmuseum=# SELECT ST_SetSRID(ST_Point(-87.71,43.741),4326),ST_GeomFromText(&apos;POINT(-87.71 43.741)&apos;,4326);ERROR: could not access file &quot;$libdir/postgis-2.5&quot;: No such file or directoryourmuseum=# create extension postgis;ERROR: extension &quot;postgis&quot; already existsourmuseum=# 如何删除原来的扩展？ https://www.runoob.com/manual/PostgreSQL/sql-dropextension.html 如有原来有对象依赖于他则不能删除,那能否更新扩展？ 先查看原来扩展的信息 1234567ourmuseum=# \dx List of installed extensions Name | Version | Schema | Description---------+---------+------------+--------------------------------------------------------------------- plpgsql | 1.0 | pg_catalog | PL/pgSQL procedural language postgis | 2.5.2 | public | PostGIS geometry, geography, and raster spatial types and functions(2 rows) 12 PostgreSQL升级官方建议：如果要升级PostgreSQL，采用pg_upgrade进行数据迁移，此时要保证postgis版本一致 https://postgis.net/workshops/postgis-intro/upgrades.html 如果要升级postgis，分两种情况：大版本升级和小版本升级 #####PostGIS小版本升级 执行如下的命令（实际上应该还有别的要求，比如.control文件，我还没试过，暂时留下这个问题） 1ALTER EXTENSION postgis UPDATE TO &apos;2.1.2&apos;; PostGIS大版本升级大版本升级会涉及到数据格式、集合对象存储上的改变，因此数据表需要重写，目前唯一方法是使用dump和restore完成 使用pg_dump按模式（schema）把数据导出 123456pg_dump --port=5433 --type=compressed --file=yourschema.backup --schema=public databasename 1sudo -u postgres pg_dump gisdb --port=5433 --file=/Volumes/Untitled\0001/数据集/postgis版本升级数据迁移/yourschema.backup --schema=public --username=postgres 安装新版本postgis 创建新的数据库，启用PostGIS扩展 采用pg_restore恢复数据库 12 问题：能否通过psql导出数据，然后迁移到新版本postgis中使用？1psql -p 5433 -d gisdb -U postgres -f /Volumes/Untitled\0001/数据集/postgis版本升级数据迁移/yourschema.sql 参考postgresql alter extension：https://www.postgresql.org/docs/9.1/sql-alterextension.html postgis support mattrix：https://trac.osgeo.org/postgis/wiki/UsersWikiPostgreSQLPostGIS postgis2.5 docs：https://download.osgeo.org/postgis/docs/postgis-2.5.0.pdf PostGIS create extension failed: https://stackoverflow.com/questions/23307518/postgis-create-extension-failed Postgresql学习笔记（二）配置文件: https://blog.51cto.com/corasql/1910485 Postgresql – 尝试将PostGIS与Postgres一起使用：“错误：无法打开扩展控制文件”：http://www.voidcn.com/article/p-xmjfbpjh-bun.html DebugError 08003:this connection has been closed 发送请求获取地图将缓存好的内容返回 pg_dump: error: query was: LOCK TABLE public.county IN ACCESS SHARE MODE]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GIS工程与应用notes]]></title>
    <url>%2F2019%2F03%2F13%2FGIS%E5%B7%A5%E7%A8%8B%E4%B8%8E%E5%BA%94%E7%94%A8notes%2F</url>
    <content type="text"><![CDATA[GIS工程文档编写工程文档分类 开发文档 需求说明书 数据要求说明书 总体说明书 可行性研究报告 项目开发计划 管理文档 项目开发计划 测试计划 测试报告 开发进度月报 项目开发总结 用户文档 产品用户手册 可行性研究报告 引言 系统简介 参考资料 对现行系统的分析 组织结构 业务流程 工作负荷 费用 人员 设备 计算机应用情况 问题和要求 拟建系统的候选规模及方案 拟建系统目标 建设规模和初步设计方案 系统建设的实施计划 投资方案 补充方案 可行性研究 技术可行性 经济可行性 运行可行性 比较研究 建设性结论 工程调研现有关于校友平台的系统北京大学校友网：http://www.pku.org.cn/清华大学校友总会：http://www.tsinghua.org.cn/publish/alumni/index.html武汉大学校友总会：http://alumni.whu.edu.cn/浙江大学校友网：http://zuaa.zju.edu.cn/上海交大校友网：http://www.sjtu.org/newalu/复旦大学校友网：http://www.fudan.org.cn/site/fddxxyw/xyh/index/四川大学校友总会：http://scuaa.scu.edu.cn/电子科技大学校友总会：http://www.alumni.uestc.edu.cn/index/alumniorg华中科技大学校友总会：http://xyh.hust.edu.cn/中南财经政法大学校友总会：http://alumni.zuel.edu.cn/北京师范大学校友网：http://xyh.bnu.edu.cn/北京邮电大学校友会：https://xyh.bupt.edu.cn/天津大学校友会：http://www.tju.edu.cn/xyh/同济大学校友网：http://www.tongjiren.org/南京大学校友网：http://www.nju.org.cn/………………………………………………………….斯坦福大学：https://alumni.stanford.edu/get/page/home?pgnPageCode=370&amp;indexredir=r哈佛大学：https://alumni.harvard.edu/牛津大学：https://www.alumni.ox.ac.uk/耶鲁大学：https://alumni.yale.edu/剑桥大学：http://www.cambridgealumni.com/麻省理工学院：奥尔巴尼大学：https://www.albany.edu/伊利诺伊大学厄巴纳-香槟分校：https://illinois.edu/alumni/index.html···································································校友通？（已挂）雨课堂？（没用过）超级课程表？（无潜力）易班？（花样太多，体验不好）Summer？（活力少，适合年轻人）学信网：https://www.chsi.com.cn/？（信息多，可扩展？） 外部实体 校友联络员 校友https://www.merriam-webster.com/dictionary/alumni 志愿者（校友等经过培训的人） 校方管理人员 毕业校友 在校学生 有哪些业务 校友聚会 校友捐赠 专属校友卡（*） 教学资源和图书馆开放（*）yale for life：http://yaleforlife.org/https://ivy.yale.edu/yet/participants/newhttps://guides.library.yale.edu/borrow/alumni 校友企业采访 校友线下联络（*） 毕业校友信息收集业务？ 校友会活动？ 出国证明材料申请 职业网络career networkhttps://ocs.yale.edu/get-connectedhttps://ocs.yale.edu/video/networkinghttps://ocs.yale.edu/get-hired/professional-experiences-internships了解职业路线、寻找合作者；职业经历 业务流向数据存储 校友基本信息姓名、学院、学位、出生日期、籍贯、身份证/护照/驾照信息 联系信息电话、通信地址、邮政编码、邮箱 校友现状信息工作单位、职位、现居国家及城市、配偶 类别数据学历学位类别：http://www.cdgdc.edu.cn/xwyyjsjyxx/xwbl/xwzd/xwlx/中国标准在线服务网：http://www.spc.org.cn/standardonline 数据字典 用户账户信息(user_account) 用户详细信息(user_details)（职业信息、工作地点等） 用户关系(user_relation) 招聘信息(job_opptunity)(企业名、行业、岗位、要求、工作地点等等) 简历信息(resume)() 统计表() 校友反馈（反馈内容、回复、反馈时间等） #### 提供高校信息的网站http://cuaa.net/cur/2010xyjz/ 问卷设计主要目标调查对象 在校学生 毕业校友 有择校需求的家长、在读高中生等 调查目的 了解人们对于当前校友信息收录工作的反映 了解人们对于校友信息统计工作的期望 了解人们最大限度愿意在校友社交平台公开的信息选项应涵盖工作经历、工作地点、求学经历、专业方向、性别、年龄、婚姻状况、 采访采访对象 校友会 高校毕业生联络员 需求分析一个包含校友信息的平台。（就业信息：就业地、就业单位、） 潜在用户 普通群众 在读学生 毕业生 潜在应用场景 可供促进已毕业校友之间的认识、交流 为在校人员择业提供信息参考 对于校外人员（择校高中生、家长、普通群众等），为其提供了解本校校友发展状况、流向等统计信息 等等等等等等等等等等 问题具体问题 校友信息收集整理工作重要吗？现在已经做到什么程度了？现在还存在什么问题？ 如何能收集到校友的信息？ 如何让校友自愿提供信息？ 我自己是否愿意为平台提供信息？ 我愿意为何种平台提供到什么程度的信息？ 当一个平台提供什么服务的时候我才愿意为其提供个人详细/不详细信息？ 抽象问题 谁负责提供、使用或删除信息？（校友、管理员） 谁将使用某功能？（吸引校友使用某功能） 谁对某个特定功能感兴趣?（让校友对某个功能感兴趣） 在组织中的什么地方使用系统？ 谁负责支持和维护系统？（校内校友部门） 系统有哪些外部资源？ 其他还有哪些系统将要与该系统进行交互？（学生数据库） 数据流程图数据流图图例 外部实体 数据处理过程比如订单处理、注册信息处理 数据流数据流反映做什么，不反映如何做。通常数据流名称只是名词或者名词短语 数据存储 基本绘制原则 数据流程图上所有图形符号必须是前面所述的四种基本元素 数据流程图的主图必须含有前面所述的四种基本元素，缺一不可 处理过程至少有一个输入数据流和一个输出数据流 数据流程图上的每个元素都必须有名字，名字应该反映该成分的实际含义 数据字典层次图（H图）HIPO图总体设计系统总体设计说明书至少包含以下内容： 系统建设目标 系统体系结构 系统软硬件环境 系统功能模块结构 系统安全设计 实验步骤 进一步明确系统建设目标 确定系统体系结构和系统软硬件环境 设计系统功能模块结构 归纳、编写总体设计说明书 数据库设计概念设计学校数据企业数据校友个人图形数据类别数据发布数据 逻辑设计（Convert Entity-Relationship diagrams into relational tables） 数据库逻辑设计要决定如何将一定应用环境下的实体属性安置到数据库中，如关系数据库的表设计。数据库逻辑设计的目标是创建设计良好的数据表，使其很好地反映应用场景。设计的追求是无冗余地创建数据实体，并且适当设计外键使得实体间的关系得到充分体现 描述数据标准化过程 执行数据标准化 物理设计更改逻辑数据库设计以提高数据库性能 发展现状任务概述标准化设计系统总体架构 实名制-&gt;扩展功能教育经历-&gt;约束 系统安全设计工程实施工程实施阶段的任务 准备工作 软硬件准备 人员准备 数据准备 制定实施计划 程序的编写与测试 程序编制 系统实施的主要内容与核心工作。一般要求： 尽量使用已有编程资源 注意系统配置要求 良好的程序设计风格 程序容错性强 采用版本控制管理程序编码 编程语言的选择 项目特征 历史沿革 个人习惯 系统的安装与培训 工程验收 UML参与者 与业务工人的关系 与涉众的关系 与用户的关系 与角色的关系 参与者对系统的要求，对系统的标数完全决定系统的功能性 用例要描述一个系统的功能性需求，就要找到对这个系统有愿望的人，让他们来说明他们会在这个系统里做什么事，想要什么结果。用例就是与参与者交互的，并且给参与者提供可观测的有意义结果的一系列活动的几何。当全部参与者的所有愿望都能通过用例来达到，这个系统就被确定下来了。可以说用例的作用就是捕获功能性需求。 举例校友-&gt;获得永久访问学校图书馆资源的权限校友-&gt;选修学校的优质在线课程校友-&gt;参与学校组织的教学旅游-&gt;与其他校友交流校友-&gt;参与校友聚会-&gt;与其他校友交流校友-&gt;加入职业网络-&gt;寻找职业机会、寻找合作机会 社交网络分析算法http://mockjs.com/examples.html#String 用例的特征 用例的执行结果对参与者来说是可观测的和有意义的如后台进程监控在需求阶段不应该作为用例出现，因为它对参与者来说不可观测。它属于系统需求而非用户需求。登陆系统是一个有效的用例而输入密码则不是。 不存在没有参与者的用例，用例应该由参与者发起而不应该自动启动，也不应该主动启动另一个用例 一个用例就是一个需求单元、分析单元、设计单元、开发单元、测试单元，甚至部署单元 用例的粒度每个用例说明一件完整的事情。 概念建模阶段描述一个完整的事件流 系统建模阶段用例视角针对计算机，要能描述计算机的一次完整交互 如何获得用例捕捉参与者对于系统的期望。引导业务代表回答以下问题： 对系统有何期望？ 打算在系统中做什么？ 做这件事的目的是？ 做完这件事希望有何结果？ 描述事物 结构性观点这个东西是什么？ 功能性观点这个东西能做什么？ 使用者观点人们能用它做什么？要想不偏离用户预期，需求收集人员应从使用者观点出发来描述系统]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MapServer Summary]]></title>
    <url>%2F2019%2F03%2F05%2FMapServer-Summary%2F</url>
    <content type="text"><![CDATA[0x00 IntroductionMapServer for Windows：https://ms4w.com/UbuntuGIS：https://wiki.ubuntu.com/UbuntuGIS Overview support for display and querying of hundreds of raster, vector, and database formats ability to run on various operating systems support for popular scripting languages and development environments on-the-fly projections high quality rendering fully customizable application output Windows Setup Step(…Loading…) Ubuntu Setup stepinstall LAMP1sudo apt install lamp-server By default,apache server will be installed on directory /etc/apache2，and the configure file of php is located in directory:/etc/php.ini，‘www/‘ directory is located on /var. to check the status of apache1systemctl | grep apache2 Check the status of Mapservercheck the version of mapserver. If the software hadn’t installed, you would get some tips.1mapserv -v Install the mapserver on ubuntu1sudo apt install mapserver-bin mapserver-cgi mapserver-doc To test the installationinstall the lynx12apt-get install lynxlynx http://127.0.0.1/cgi-bin/mapserv or1curl http://127.0.0.1/cgi-bin/mapserv if fails, maybe you didn’t enable the cgi module for apache server, see https://code-maven.com/set-up-cgi-with-apache and set-up the cgi, the unhappyness will go. 0x01 Install postgis on UbuntuUbuntuGIS project has PostGIS and other OSGeo projecct offerings.see https://wiki.ubuntu.com/UbuntuGIS. check and operate the postgres123sudo /etc/init.d/postgresql statussudo /etc/init.d/postgresql startsudo /etc/init.d/postgresql stop install postgis extension1sudo apt install postgresql-10-postgis-2.5 Basic usage on ubuntu\password USERset the password for specified user. \?check the usable psql command \llist all the databases \dlist all relations on databases \c DATABASEconnect to specified database \dulist all the users \conninfolist the current database and info about connection. Democreate a database on postgres.(Notice, don’t ommited the ‘;’)1CREATE DATABASE webgisdb; connect to webgisdb1\c webgisdb create a schema with “CREATE SCHEMA postgis;” command.12CREATE SCHEMA postgis;ALTER DATABASE gisdb SET search_path=public, postgis, contrib; enable the postgis extension1CREATE EXTENSION postgis SCHEMA postgis; reconnect the webgisdb and check the postgis version1SELECT postgis_version(); DebugIf you encounter the error like this:’add-apt-repository command not found’, simply run the following command will fix that error1sudo apt-get install software-properties-common For more detail, see https://itsfoss.com/add-apt-repository-command-not-found/ 0x02 Hello, mapserver DemoAbout .map file.map file is the basic confiduration for data access and styling for MapServer. SHAPEPATHSHAPEPATH is the path to your data layers. The absolute paths or paths relative to mapfile’s location could be used. A map with a single layer1http://127.0.0.1:8099/cgi-bin/mapserv.exe?map=F:\WebGIS\mapserver-tutorial\ms4w\apps\tutorial\htdocs\example1-1.map&amp;layer=states&amp;mode=map A map with two layers1http://127.0.0.1:8099/cgi-bin/mapserv.exe?map=F:\WebGIS\mapserver-tutorial\ms4w\apps\tutorial\htdocs\example1-2.map&amp;layer=states_line&amp;layer=states_poly&amp;mode=map Using classes to make a useful map1http://127.0.0.1:8099/cgi-bin/mapserv.exe?map=F:\WebGIS\mapserver-tutorial\ms4w\apps\tutorial\htdocs\example1-3.map&amp;layer=states_line&amp;mode=map Labeling layers and label layers1http://127.0.0.1:8099/cgi-bin/mapserv.exe?map=F:\WebGIS\mapserver-tutorial\ms4w\apps\tutorial\htdocs\example1-4.map&amp;layer=states_line&amp;layer=states_poly&amp;mode=map 0x03 Hello, postgis DemoHello, postgiscreate usercreate a user named ‘test’12sudo -u postgres createuser -s -e testusersudo -u postgres createdb -E UTF8 -O testdb test configure the password12sudo -u postgres psql#alter user test with password &apos;your_password&apos;; enable postgis extension1#create extension postgis; then you can see the effectivenessOf course, there is not the only way! configure postgres to allow remote connectionIf you want to remote connect the postgres, you need to check the process first12ps -ef | grep postgrescat &amp;PATH_TO_POSTGRES%/postgresql.conf | grep listen Then make sure the iptables allow remote connect via specified port like 5432(can chect that on the postgresql.conf file). Add security rule if you use AlibabaCloud server. change the listen address from localhost to *1234sudo vi /etc/postgresql/10/main/postgresql.conf:/listen_address# make change:wq edit the pg_hba.conf to allow all/specified ip connection.1sudo vi /etc/postgresql/10/main/pg_hba.conf Then restart postgres1sudo /etc/init.d/postgresql restart Then you can probably connect postgres with remote terminal or other tools. [Complement] trustanyone who can connect to the server is authorized to access the database peeruse client’s operating system user name as database user name to access it. md5password-base authentication basic concept ::cast. Often ::geometry st_setsrid st_makepoint st_within create table with geo object123456789101112131415161718192021-- create a table called mypoints to store the points datacreate table mypoints( id serial, --the serial of point generated by system geo Geometry(POINT,4326) not null -- point data with cordnate 4326 which means WGS84);-- create some points and store them into the tableinsert into mypoints(geo) select st_setsrid( st_makepoint( -180+360*random(), -90+180*random() ), 4326 ) from generate_series(1,1000000); -- check the data insertedselect st_astext(geo) from mypoints; create spatial index12345create index mypoints_idxon mypointsusing gist(geo); Select the projection info of zone 19.1select srid,srtext from spatial_ref_sys where srtext like &apos;%Beijing%&apos; and srtext like &apos;%zone 19%&apos; connect postgis on QGIS Shape Tools in QGISUse shp2pgsqlPostGIS provide shp2pgsql for tansforming shpfile to .sql file. It is implemented with open source library shapelib. Import single .shp filefor example, generate a .sql file from .shp12shp2pgsql -g geo -s 4326 -W gbk res1_4m.shp city &gt; /home/testgis/city.sqlpsql -d webgisdb -f /home/testgis/city.sql Import multiple .shp fileUse pgsql2shpExport single .sql file to .shpExport multiple .sql file to .shp0x04 Seems like good thingsTutorialsInstalling MapServer on a LAMP server : http://www.onegeology.org/wmscookbook/4_4_2.htmlLAMP Stack:https://www.linode.com/docs/web-servers/lamp/install-lamp-stack-on-ubuntu-18-04/Hello_postgresql:https://blog.wenzhixin.net.cn/2014/01/12/hello_postgresql/Setup postgres_postgis:https://kitcharoenp.github.io/postgresql/postgis/2018/05/28/set_up_postgreSQL_postgis.htmlToo many security failures:https://help.realvnc.com/hc/en-us/articles/360003563111-Too-many-security-failuresIntroduction to mapserver:https://www.mapserver.org/introduction.htmlmapserver demo: http://demo.mapserver.org/tutorial/ Helperopenoffice: http://www.openoffice.org/ ReadingDB-Rank：https://db-engines.com/en/rankingthe yesterday, today and tomorrow of postgres：https://my.oschina.net/javacy/blog/1861009]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>GIS</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Question-For-2019-03]]></title>
    <url>%2F2019%2F03%2F01%2FQuestion-For-2019-03%2F</url>
    <content type="text"><![CDATA[TDA学习资源outlacehttp://outlace.com/TDApart1.htmlhttp://outlace.com/TDApart2.htmlhttp://outlace.com/TDApart3.htmlhttp://outlace.com/TDApart4.htmlhttp://outlace.com/TDApart5.html 拓扑空间拓扑最基本的出发点是？连通比距离更重要。 什么是拓扑空间？拓扑空间具有什么性质？什么是度量空间？其与拓扑空间的关系为?如何可视化拓扑空间？拓扑数据分析拓扑数据分析的目的是？从高维、不完整、含有噪声的数据集中提取信息；对特定的度量指标不敏感；对噪声鲁棒 拓扑数据分析提供了什么？ 对一个数据集的有损压缩的数学表示 对噪声和缺失的数据不敏感 不变性方向、大小不会彻底改变数据 数据探索工具能得到有意思的东西 探索数据形的方法论 Mapper什么是Mapper？从数据中构造单纯复形的方法，揭示数据的部分拓扑特征 KeplerMapper投影后生成的图只有结点没有边，可如何解决？持续同调持续同调的基本观点是？持续同调目前的应用有？研究复杂结构，高维数据 软件工程软件危机指的是？可以如何解决/缓解软件危机？什么是UML？为什么需要UML？什么是RUP？WebGIS为什么需要空间索引？https://www.cnblogs.com/mafeng/p/7909426.html 有什么空间索引？空间索引的工作机制是？ 减少磁盘IO MBR B树索引变种 Z形 Geohash的思想是？https://www.cnblogs.com/LBSer/p/3310455.html 有什么(空间)数据库？https://db-engines.com/en/ranking 遥感影像分析遥感影像分割谱聚类进行影像分割相似性度量：颜色空间的距离函数]]></content>
      <tags>
        <tag>Question</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Question-For-2019-02]]></title>
    <url>%2F2019%2F02%2F28%2FQuestion-For-2019-02%2F</url>
    <content type="text"><![CDATA[耶鲁大学谱图理论Professor Dan: http://www.cs.yale.edu/homes/spielman/ 介绍章Course link：http://www.cs.yale.edu/homes/spielman/561/lect01-15.pdf 证明瑞利熵的范围在于L1和Ln之间是否多余？为什么以特征向量绘制谱图时要舍掉最小特征值？柏拉图哲学意义上的实体指的是？图的代数连通度指？https://link.springer.com/article/10.1007/s00373-012-1206-7 拉普拉斯矩阵Course link：http://www.cs.yale.edu/homes/spielman/561/2015/lect02-15.pdfhttps://www.simonsfoundation.org/2012/04/24/network-solutions/ UCL强化学习http://www0.cs.ucl.ac.uk/staff/d.silver/web/Teaching.html 介绍章马尔可夫决策过程Bellman方程在强化学习中扮演着怎样的角色？]]></content>
      <tags>
        <tag>Question</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python Debug Methods Summary]]></title>
    <url>%2F2019%2F02%2F25%2FPython-Debug-Methods-Summary%2F</url>
    <content type="text"><![CDATA[Toolspdb python org：https://docs.python.org/3/library/pdb.htmlpdb IBM developworks：https://www.ibm.com/developerworks/cn/linux/l-cn-pythondebugger/index.html]]></content>
      <tags>
        <tag>Summary</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Traci API Summary]]></title>
    <url>%2F2019%2F02%2F22%2FTraci-API%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 trafficlight123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281# -*- coding: utf-8 -*-# Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo# Copyright (C) 2011-2018 German Aerospace Center (DLR) and others.# This program and the accompanying materials# are made available under the terms of the Eclipse Public License v2.0# which accompanies this distribution, and is available at# http://www.eclipse.org/legal/epl-v20.html# SPDX-License-Identifier: EPL-2.0# @file _trafficlight.py# @author Michael Behrisch# @date 2011-03-16# @version $Id$from __future__ import absolute_importimport structfrom .domain import Domainfrom .storage import Storagefrom . import constants as tcfrom .exceptions import TraCIExceptionclass Phase: def __init__(self, duration, state, minDur=-1, maxDur=-1, next=-1): self.duration = duration self.state = state self.minDur = minDur # minimum duration (only for actuated tls) self.maxDur = maxDur # maximum duration (only for actuated tls) self.next = next def __repr__(self): return ("Phase(duration=%s, state='%s', minDur=%s, maxDur=%s, next=%s)" % (self.duration, self.state, self.minDur, self.maxDur, self.next))class Logic: def __init__(self, programID, type, currentPhaseIndex, phases=None, subParameter=None): self.programID = programID self.type = type self.currentPhaseIndex = currentPhaseIndex self.phases = phases if phases is not None else [] self.subParameter = subParameter if subParameter is not None else &#123;&#125; def getPhases(self): return self.phases def getSubID(self): return self.programID def getType(self): return self.type def getParameters(self): return self.subParameter def getParameter(self, key, default=None): return self.subParameter.get(key, default) def __repr__(self): return ("Logic(programID='%s', type=%s, currentPhaseIndex=%s, phases=%s, subParameter=%s)" % (self.programID, self.type, self.currentPhaseIndex, self.phases, self.subParameter))def _readLogics(result): numLogics = result.readInt() logics = [] for _ in range(numLogics): result.readCompound(5) programID = result.readTypedString() type = result.readTypedInt() currentPhaseIndex = result.readTypedInt() logic = Logic(programID, type, currentPhaseIndex) numPhases = result.readCompound() for __ in range(numPhases): result.readCompound(5) duration = result.readTypedDouble() state = result.readTypedString() minDur = result.readTypedDouble() maxDur = result.readTypedDouble() next = result.readTypedInt() logic.phases.append(Phase(duration, state, minDur, maxDur, next)) numParams = result.readCompound() for __ in range(numParams): key, value = result.readTypedStringList() logic.subParameter[key] = value logics.append(logic) return logicsdef _readLinks(result): result.readLength() numSignals = result.readInt() # Length signals = [] for _ in range(numSignals): # Type of Number of Controlled Links result.read("!B") # Number of Controlled Links nbControlledLinks = result.read("!i")[0] controlledLinks = [] for __ in range(nbControlledLinks): result.read("!B") # Type of Link j link = result.readStringList() # Link j controlledLinks.append(link) signals.append(controlledLinks) return signals_RETURN_VALUE_FUNC = &#123;tc.TL_RED_YELLOW_GREEN_STATE: Storage.readString, tc.TL_COMPLETE_DEFINITION_RYG: _readLogics, tc.TL_CONTROLLED_LANES: Storage.readStringList, tc.TL_CONTROLLED_LINKS: _readLinks, tc.TL_CURRENT_PROGRAM: Storage.readString, tc.TL_CURRENT_PHASE: Storage.readInt, tc.TL_NEXT_SWITCH: Storage.readDouble, tc.TL_PHASE_DURATION: Storage.readDouble&#125;class TrafficLightDomain(Domain): Phase = Phase Logic = Logic def __init__(self, name="trafficlight", deprecatedFor=None): Domain.__init__(self, name, tc.CMD_GET_TL_VARIABLE, tc.CMD_SET_TL_VARIABLE, tc.CMD_SUBSCRIBE_TL_VARIABLE, tc.RESPONSE_SUBSCRIBE_TL_VARIABLE, tc.CMD_SUBSCRIBE_TL_CONTEXT, tc.RESPONSE_SUBSCRIBE_TL_CONTEXT, _RETURN_VALUE_FUNC, deprecatedFor) def getRedYellowGreenState(self, tlsID): """getRedYellowGreenState(string) -&gt; string Returns the named tl's state as a tuple of light definitions from rugGyYoO, for red, yed-yellow, green, yellow, off, where lower case letters mean that the stream has to decelerate. """ return self._getUniversal(tc.TL_RED_YELLOW_GREEN_STATE, tlsID) def getCompleteRedYellowGreenDefinition(self, tlsID): """getCompleteRedYellowGreenDefinition(string) -&gt; list(Logic) Returns a list of Logic objects. Each Logic encodes a traffic light program for the given tlsID. """ return self._getUniversal(tc.TL_COMPLETE_DEFINITION_RYG, tlsID) def getControlledLanes(self, tlsID): """getControlledLanes(string) -&gt; c Returns the list of lanes which are controlled by the named traffic light. """ return self._getUniversal(tc.TL_CONTROLLED_LANES, tlsID) def getControlledLinks(self, tlsID): """getControlledLinks(string) -&gt; list(list(list(string))) Returns the links controlled by the traffic light, sorted by the signal index and described by giving the incoming, outgoing, and via lane. """ return self._getUniversal(tc.TL_CONTROLLED_LINKS, tlsID) def getProgram(self, tlsID): """getProgram(string) -&gt; string Returns the id of the current program. """ return self._getUniversal(tc.TL_CURRENT_PROGRAM, tlsID) def getPhase(self, tlsID): """getPhase(string) -&gt; integer Returns the index of the current phase within the list of all phases of the current program. """ return self._getUniversal(tc.TL_CURRENT_PHASE, tlsID) def getNextSwitch(self, tlsID): """getNextSwitch(string) -&gt; double Returns the absolute simulation time at which the traffic light is schedule to switch to the next phase (in seconds). """ return self._getUniversal(tc.TL_NEXT_SWITCH, tlsID) def getPhaseDuration(self, tlsID): """getPhaseDuration(string) -&gt; double Returns the total duration of the current phase (in seconds). This value is not affected by the elapsed or remaining duration of the current phase. """ return self._getUniversal(tc.TL_PHASE_DURATION, tlsID) def setRedYellowGreenState(self, tlsID, state): """setRedYellowGreenState(string, string) -&gt; None Sets the named tl's state as a tuple of light definitions from rugGyYuoO, for red, red-yellow, green, yellow, off, where lower case letters mean that the stream has to decelerate. """ self._connection._sendStringCmd( tc.CMD_SET_TL_VARIABLE, tc.TL_RED_YELLOW_GREEN_STATE, tlsID, state) def setLinkState(self, tlsID, tlsLinkIndex, state): """setLinkState(string, string, int, string) -&gt; None Sets the state for the given tls and link index. The state must be one of rRgGyYoOu for red, red-yellow, green, yellow, off, where lower case letters mean that the stream has to decelerate. The link index is shown the gui when setting the appropriate junctino visualization optin. """ fullState = list(self.getRedYellowGreenState(tlsID)) if tlsLinkIndex &gt;= len(fullState): raise TraCIException("Invalid tlsLinkIndex %s for tls '%s' with maximum index %s." % ( tlsLinkIndex, tlsID, len(fullState) - 1)) else: fullState[tlsLinkIndex] = state self.setRedYellowGreenState(tlsID, ''.join(fullState)) def setPhase(self, tlsID, index): """setPhase(string, integer) -&gt; None Switches to the phase with the given index in the list of all phases for the current program. """ self._connection._sendIntCmd( tc.CMD_SET_TL_VARIABLE, tc.TL_PHASE_INDEX, tlsID, index) def setProgram(self, tlsID, programID): """setProgram(string, string) -&gt; None Switches to the program with the given programID. The program must have been loaded earlier. The special value 'off' can always be used to switch off the traffic light. """ self._connection._sendStringCmd( tc.CMD_SET_TL_VARIABLE, tc.TL_PROGRAM, tlsID, programID) def setPhaseDuration(self, tlsID, phaseDuration): """setPhaseDuration(string, double) -&gt; None Set the remaining phase duration of the current phase in seconds. This value has no effect on subsquent repetitions of this phase. """ self._connection._sendDoubleCmd( tc.CMD_SET_TL_VARIABLE, tc.TL_PHASE_DURATION, tlsID, phaseDuration) def setCompleteRedYellowGreenDefinition(self, tlsID, tls): """setCompleteRedYellowGreenDefinition(string, Logic) -&gt; None Sets a new program for the given tlsID from a Logic object. See getCompleteRedYellowGreenDefinition. """ length = 1 + 4 + 1 + 4 + \ len(tls.programID) + 1 + 4 + 1 + 4 + 1 + 4 # tls parameter for p in tls.phases: length += 1 + 4 + 1 + 8 + 1 + 4 + len(p.state) + 1 + 8 + 1 + 8 + 1 + 4 length += 1 + 4 # subparams for k, v in tls.subParameter.items(): length += 1 + 4 + 4 + len(k) + 4 + len(v) self._connection._beginMessage( tc.CMD_SET_TL_VARIABLE, tc.TL_COMPLETE_PROGRAM_RYG, tlsID, length) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 5) self._connection._packString(tls.programID) self._connection._string += struct.pack("!Bi", tc.TYPE_INTEGER, tls.type) self._connection._string += struct.pack("!Bi", tc.TYPE_INTEGER, tls.currentPhaseIndex) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, len(tls.phases)) for p in tls.phases: self._connection._string += struct.pack("!BiBd", tc.TYPE_COMPOUND, 5, tc.TYPE_DOUBLE, p.duration) self._connection._packString(p.state) self._connection._string += struct.pack("!BdBdBi", tc.TYPE_DOUBLE, p.minDur, tc.TYPE_DOUBLE, p.maxDur, tc.TYPE_INTEGER, p.next) # subparams self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, len(tls.subParameter)) for par in tls.subParameter.items(): self._connection._packStringList(par) self._connection._sendExact()TrafficLightDomain()TrafficLightDomain("trafficlights", "trafficlight") 0x01 edge123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277# -*- coding: utf-8 -*-# Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo# Copyright (C) 2011-2018 German Aerospace Center (DLR) and others.# This program and the accompanying materials# are made available under the terms of the Eclipse Public License v2.0# which accompanies this distribution, and is available at# http://www.eclipse.org/legal/epl-v20.html# SPDX-License-Identifier: EPL-2.0# @file _edge.py# @author Michael Behrisch# @author Jakob Erdmann# @date 2011-03-17# @version $Id$from __future__ import absolute_importimport structfrom . import constants as tcfrom .domain import Domainfrom .storage import Storagefrom .exceptions import TraCIException_RETURN_VALUE_FUNC = &#123;tc.VAR_EDGE_TRAVELTIME: Storage.readDouble, tc.VAR_WAITING_TIME: Storage.readDouble, tc.VAR_EDGE_EFFORT: Storage.readDouble, tc.VAR_CO2EMISSION: Storage.readDouble, tc.VAR_COEMISSION: Storage.readDouble, tc.VAR_HCEMISSION: Storage.readDouble, tc.VAR_PMXEMISSION: Storage.readDouble, tc.VAR_NOXEMISSION: Storage.readDouble, tc.VAR_FUELCONSUMPTION: Storage.readDouble, tc.VAR_NOISEEMISSION: Storage.readDouble, tc.VAR_ELECTRICITYCONSUMPTION: Storage.readDouble, tc.LAST_STEP_MEAN_SPEED: Storage.readDouble, tc.LAST_STEP_OCCUPANCY: Storage.readDouble, tc.LAST_STEP_LENGTH: Storage.readDouble, tc.VAR_LANE_INDEX: Storage.readInt, tc.VAR_NAME: Storage.readString, tc.VAR_CURRENT_TRAVELTIME: Storage.readDouble, tc.LAST_STEP_VEHICLE_NUMBER: Storage.readInt, tc.LAST_STEP_VEHICLE_HALTING_NUMBER: Storage.readInt, tc.LAST_STEP_VEHICLE_ID_LIST: Storage.readStringList, tc.LAST_STEP_PERSON_ID_LIST: Storage.readStringList, &#125;class EdgeDomain(Domain): def __init__(self): Domain.__init__(self, "edge", tc.CMD_GET_EDGE_VARIABLE, tc.CMD_SET_EDGE_VARIABLE, tc.CMD_SUBSCRIBE_EDGE_VARIABLE, tc.RESPONSE_SUBSCRIBE_EDGE_VARIABLE, tc.CMD_SUBSCRIBE_EDGE_CONTEXT, tc.RESPONSE_SUBSCRIBE_EDGE_CONTEXT, _RETURN_VALUE_FUNC) def getAdaptedTraveltime(self, edgeID, time): """getAdaptedTraveltime(string, double) -&gt; double Returns the travel time value (in s) used for (re-)routing which is valid on the edge at the given time. """ self._connection._beginMessage(tc.CMD_GET_EDGE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, edgeID, 1 + 8) self._connection._string += struct.pack( "!Bd", tc.TYPE_DOUBLE, time) return self._connection._checkResult(tc.CMD_GET_EDGE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, edgeID).readDouble() def getWaitingTime(self, edgeID): """getWaitingTime() -&gt; double Returns the sum of the waiting time of all vehicles currently on that edge (see traci.vehicle.getWaitingTime). """ return self._getUniversal(tc.VAR_WAITING_TIME, edgeID) def getEffort(self, edgeID, time): """getEffort(string, double) -&gt; double Returns the effort value used for (re-)routing which is valid on the edge at the given time. """ self._connection._beginMessage(tc.CMD_GET_EDGE_VARIABLE, tc.VAR_EDGE_EFFORT, edgeID, 1 + 8) self._connection._string += struct.pack( "!Bd", tc.TYPE_DOUBLE, time) return self._connection._checkResult(tc.CMD_GET_EDGE_VARIABLE, tc.VAR_EDGE_EFFORT, edgeID).readDouble() def getCO2Emission(self, edgeID): """getCO2Emission(string) -&gt; double Returns the CO2 emission in mg for the last time step on the given edge. """ return self._getUniversal(tc.VAR_CO2EMISSION, edgeID) def getCOEmission(self, edgeID): """getCOEmission(string) -&gt; double Returns the CO emission in mg for the last time step on the given edge. """ return self._getUniversal(tc.VAR_COEMISSION, edgeID) def getHCEmission(self, edgeID): """getHCEmission(string) -&gt; double Returns the HC emission in mg for the last time step on the given edge. """ return self._getUniversal(tc.VAR_HCEMISSION, edgeID) def getPMxEmission(self, edgeID): """getPMxEmission(string) -&gt; double Returns the particular matter emission in mg for the last time step on the given edge. """ return self._getUniversal(tc.VAR_PMXEMISSION, edgeID) def getNOxEmission(self, edgeID): """getNOxEmission(string) -&gt; double Returns the NOx emission in mg for the last time step on the given edge. """ return self._getUniversal(tc.VAR_NOXEMISSION, edgeID) def getFuelConsumption(self, edgeID): """getFuelConsumption(string) -&gt; double Returns the fuel consumption in ml for the last time step on the given edge. """ return self._getUniversal(tc.VAR_FUELCONSUMPTION, edgeID) def getNoiseEmission(self, edgeID): """getNoiseEmission(string) -&gt; double Returns the noise emission in db for the last time step on the given edge. """ return self._getUniversal(tc.VAR_NOISEEMISSION, edgeID) def getElectricityConsumption(self, edgeID): """getElectricityConsumption(string) -&gt; double Returns the electricity consumption in ml for the last time step. """ return self._getUniversal(tc.VAR_ELECTRICITYCONSUMPTION, edgeID) def getLastStepMeanSpeed(self, edgeID): """getLastStepMeanSpeed(string) -&gt; double Returns the average speed in m/s for the last time step on the given edge. """ return self._getUniversal(tc.LAST_STEP_MEAN_SPEED, edgeID) def getLastStepOccupancy(self, edgeID): """getLastStepOccupancy(string) -&gt; double Returns the occupancy in % for the last time step on the given edge. """ return self._getUniversal(tc.LAST_STEP_OCCUPANCY, edgeID) def getLastStepLength(self, edgeID): """getLastStepLength(string) -&gt; double Returns the mean vehicle length in m for the last time step on the given edge. """ return self._getUniversal(tc.LAST_STEP_LENGTH, edgeID) def getLaneNumber(self, edgeID): """getLaneNumber(string) -&gt; int Returns the number of lanes of this edge """ return self._getUniversal(tc.VAR_LANE_INDEX, edgeID) def getStreetName(self, edgeID): """getStreetName(string) -&gt; string Returns the street name of this edge """ return self._getUniversal(tc.VAR_NAME, edgeID) def getTraveltime(self, edgeID): """getTraveltime(string) -&gt; double Returns the estimated travel time in s for the last time step on the given edge. """ return self._getUniversal(tc.VAR_CURRENT_TRAVELTIME, edgeID) def getLastStepVehicleNumber(self, edgeID): """getLastStepVehicleNumber(string) -&gt; integer Returns the total number of vehicles for the last time step on the given edge. """ return self._getUniversal(tc.LAST_STEP_VEHICLE_NUMBER, edgeID) def getLastStepHaltingNumber(self, edgeID): """getLastStepHaltingNumber(string) -&gt; integer Returns the total number of halting vehicles for the last time step on the given edge. A speed of less than 0.1 m/s is considered a halt. """ return self._getUniversal(tc.LAST_STEP_VEHICLE_HALTING_NUMBER, edgeID) def getLastStepVehicleIDs(self, edgeID): """getLastStepVehicleIDs(string) -&gt; list(string) Returns the ids of the vehicles for the last time step on the given edge. """ return self._getUniversal(tc.LAST_STEP_VEHICLE_ID_LIST, edgeID) def getLastStepPersonIDs(self, edgeID): """getLastStepPersonIDs(string) -&gt; list(string) Returns the ids of the persons on the given edge during the last time step. """ return self._getUniversal(tc.LAST_STEP_PERSON_ID_LIST, edgeID) def adaptTraveltime(self, edgeID, time, begin=None, end=None): """adaptTraveltime(string, double, double, double) -&gt; None Adapt the travel time value (in s) used for (re-)routing for the given edge. When setting begin time and end time (in seconds), the changes only apply to that time range. Otherwise they apply all the time """ if begin is None and end is None: self._connection._beginMessage( tc.CMD_SET_EDGE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, edgeID, 1 + 4 + 1 + 8) self._connection._string += struct.pack("!BiBd", tc.TYPE_COMPOUND, 1, tc.TYPE_DOUBLE, time) self._connection._sendExact() elif begin is not None and end is not None: self._connection._beginMessage( tc.CMD_SET_EDGE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, edgeID, 1 + 4 + 1 + 8 + 1 + 8 + 1 + 8) self._connection._string += struct.pack("!BiBdBdBd", tc.TYPE_COMPOUND, 3, tc.TYPE_DOUBLE, begin, tc.TYPE_DOUBLE, end, tc.TYPE_DOUBLE, time) self._connection._sendExact() else: raise TraCIException("Both, begin time and end time must be specified") def setEffort(self, edgeID, effort, begin=None, end=None): """setEffort(string, double, double, double) -&gt; None Adapt the effort value used for (re-)routing for the given edge. When setting begin time and end time (in seconds), the changes only apply to that time range. Otherwise they apply all the time. """ if begin is None and end is None: self._connection._beginMessage( tc.CMD_SET_EDGE_VARIABLE, tc.VAR_EDGE_EFFORT, edgeID, 1 + 4 + 1 + 8) self._connection._string += struct.pack("!BiBd", tc.TYPE_COMPOUND, 1, tc.TYPE_DOUBLE, effort) self._connection._sendExact() elif begin is not None and end is not None: self._connection._beginMessage( tc.CMD_SET_EDGE_VARIABLE, tc.VAR_EDGE_EFFORT, edgeID, 1 + 4 + 1 + 8 + 1 + 8 + 1 + 8) self._connection._string += struct.pack("!BiBdBdBd", tc.TYPE_COMPOUND, 3, tc.TYPE_DOUBLE, begin, tc.TYPE_DOUBLE, end, tc.TYPE_DOUBLE, effort) self._connection._sendExact() else: raise TraCIException("Both, begin time and end time must be specified") def setMaxSpeed(self, edgeID, speed): """setMaxSpeed(string, double) -&gt; None Set a new maximum speed (in m/s) for all lanes of the edge. """ self._connection._sendDoubleCmd( tc.CMD_SET_EDGE_VARIABLE, tc.VAR_MAXSPEED, edgeID, speed)EdgeDomain() 0x02 lane123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327# -*- coding: utf-8 -*-# Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo# Copyright (C) 2011-2018 German Aerospace Center (DLR) and others.# This program and the accompanying materials# are made available under the terms of the Eclipse Public License v2.0# which accompanies this distribution, and is available at# http://www.eclipse.org/legal/epl-v20.html# SPDX-License-Identifier: EPL-2.0# @file _lane.py# @author Michael Behrisch# @author Daniel Krajzewicz# @author Laura Bieker# @author Jakob Erdmann# @date 2011-03-17# @version $Id$from __future__ import absolute_importfrom .domain import Domainfrom .storage import Storagefrom . import constants as tcdef _readLinks(result): result.read("!Bi") # Type Compound, Length nbLinks = result.readInt() links = [] for i in range(nbLinks): result.read("!B") # Type String approachedLane = result.readString() result.read("!B") # Type String approachedInternal = result.readString() result.read("!B") # Type Byte hasPrio = bool(result.read("!B")[0]) result.read("!B") # Type Byte isOpen = bool(result.read("!B")[0]) result.read("!B") # Type Byte hasFoe = bool(result.read("!B")[0]) result.read("!B") # Type String state = result.readString() result.read("!B") # Type String direction = result.readString() result.read("!B") # Type Float length = result.readDouble() links.append((approachedLane, hasPrio, isOpen, hasFoe, approachedInternal, state, direction, length)) return links_RETURN_VALUE_FUNC = &#123;tc.VAR_LENGTH: Storage.readDouble, tc.VAR_MAXSPEED: Storage.readDouble, tc.VAR_WIDTH: Storage.readDouble, tc.LANE_ALLOWED: Storage.readStringList, tc.LANE_DISALLOWED: Storage.readStringList, tc.LANE_LINK_NUMBER: Storage.readInt, tc.LANE_LINKS: _readLinks, tc.VAR_SHAPE: Storage.readShape, tc.LANE_EDGE_ID: Storage.readString, tc.VAR_CO2EMISSION: Storage.readDouble, tc.VAR_COEMISSION: Storage.readDouble, tc.VAR_HCEMISSION: Storage.readDouble, tc.VAR_PMXEMISSION: Storage.readDouble, tc.VAR_NOXEMISSION: Storage.readDouble, tc.VAR_FUELCONSUMPTION: Storage.readDouble, tc.VAR_NOISEEMISSION: Storage.readDouble, tc.VAR_ELECTRICITYCONSUMPTION: Storage.readDouble, tc.LAST_STEP_MEAN_SPEED: Storage.readDouble, tc.LAST_STEP_OCCUPANCY: Storage.readDouble, tc.LAST_STEP_LENGTH: Storage.readDouble, tc.VAR_WAITING_TIME: Storage.readDouble, tc.VAR_CURRENT_TRAVELTIME: Storage.readDouble, tc.LAST_STEP_VEHICLE_NUMBER: Storage.readInt, tc.LAST_STEP_VEHICLE_HALTING_NUMBER: Storage.readInt, tc.VAR_FOES: Storage.readStringList, tc.LAST_STEP_VEHICLE_ID_LIST: Storage.readStringList&#125;class LaneDomain(Domain): def __init__(self): Domain.__init__(self, "lane", tc.CMD_GET_LANE_VARIABLE, tc.CMD_SET_LANE_VARIABLE, tc.CMD_SUBSCRIBE_LANE_VARIABLE, tc.RESPONSE_SUBSCRIBE_LANE_VARIABLE, tc.CMD_SUBSCRIBE_LANE_CONTEXT, tc.RESPONSE_SUBSCRIBE_LANE_CONTEXT, _RETURN_VALUE_FUNC) def getLength(self, laneID): """getLength(string) -&gt; double Returns the length in m. """ return self._getUniversal(tc.VAR_LENGTH, laneID) def getMaxSpeed(self, laneID): """getMaxSpeed(string) -&gt; double Returns the maximum allowed speed on the lane in m/s. """ return self._getUniversal(tc.VAR_MAXSPEED, laneID) def getWidth(self, laneID): """getWidth(string) -&gt; double Returns the width of the lane in m. """ return self._getUniversal(tc.VAR_WIDTH, laneID) def getAllowed(self, laneID): """getAllowed(string) -&gt; list(string) Returns a list of allowed vehicle classes. An empty list means all vehicles are allowed. """ return self._getUniversal(tc.LANE_ALLOWED, laneID) def getDisallowed(self, laneID): """getDisallowed(string) -&gt; list(string) Returns a list of disallowed vehicle classes. """ return self._getUniversal(tc.LANE_DISALLOWED, laneID) def getLinkNumber(self, laneID): """getLinkNumber(string) -&gt; integer Returns the number of connections to successive lanes. """ return self._getUniversal(tc.LANE_LINK_NUMBER, laneID) def getLinks(self, laneID, extended=False): """getLinks(string) -&gt; list((string, bool, bool, bool)) A list containing id of successor lane together with priority, open and foe for each link. if extended=True, each result tuple contains (string approachedLane, bool hasPrio, bool isOpen, bool hasFoe, string approachedInternal, string state, string direction, float length) """ complete_data = self._getUniversal(tc.LANE_LINKS, laneID) if extended: return complete_data else: # for downward compatibility return [tuple(d[:4]) for d in complete_data] def getShape(self, laneID): """getShape(string) -&gt; list((double, double)) List of 2D positions (cartesian) describing the geometry. """ return self._getUniversal(tc.VAR_SHAPE, laneID) def getEdgeID(self, laneID): """getEdgeID(string) -&gt; string Returns the id of the edge the lane belongs to. """ return self._getUniversal(tc.LANE_EDGE_ID, laneID) def getCO2Emission(self, laneID): """getCO2Emission(string) -&gt; double Returns the CO2 emission in mg for the last time step on the given lane. """ return self._getUniversal(tc.VAR_CO2EMISSION, laneID) def getCOEmission(self, laneID): """getCOEmission(string) -&gt; double Returns the CO emission in mg for the last time step on the given lane. """ return self._getUniversal(tc.VAR_COEMISSION, laneID) def getHCEmission(self, laneID): """getHCEmission(string) -&gt; double Returns the HC emission in mg for the last time step on the given lane. """ return self._getUniversal(tc.VAR_HCEMISSION, laneID) def getPMxEmission(self, laneID): """getPMxEmission(string) -&gt; double Returns the particular matter emission in mg for the last time step on the given lane. """ return self._getUniversal(tc.VAR_PMXEMISSION, laneID) def getNOxEmission(self, laneID): """getNOxEmission(string) -&gt; double Returns the NOx emission in mg for the last time step on the given lane. """ return self._getUniversal(tc.VAR_NOXEMISSION, laneID) def getFuelConsumption(self, laneID): """getFuelConsumption(string) -&gt; double Returns the fuel consumption in ml for the last time step on the given lane. """ return self._getUniversal(tc.VAR_FUELCONSUMPTION, laneID) def getNoiseEmission(self, laneID): """getNoiseEmission(string) -&gt; double Returns the noise emission in db for the last time step on the given lane. """ return self._getUniversal(tc.VAR_NOISEEMISSION, laneID) def getElectricityConsumption(self, laneID): """getElectricityConsumption(string) -&gt; double Returns the electricity consumption in ml for the last time step. """ return self._getUniversal(tc.VAR_ELECTRICITYCONSUMPTION, laneID) def getLastStepMeanSpeed(self, laneID): """getLastStepMeanSpeed(string) -&gt; double Returns the average speed in m/s for the last time step on the given lane. """ return self._getUniversal(tc.LAST_STEP_MEAN_SPEED, laneID) def getLastStepOccupancy(self, laneID): """getLastStepOccupancy(string) -&gt; double Returns the occupancy in % for the last time step on the given lane. """ return self._getUniversal(tc.LAST_STEP_OCCUPANCY, laneID) def getLastStepLength(self, laneID): """getLastStepLength(string) -&gt; double Returns the mean vehicle length in m for the last time step on the given lane. """ return self._getUniversal(tc.LAST_STEP_LENGTH, laneID) def getWaitingTime(self, laneID): """getWaitingTime() -&gt; double . """ return self._getUniversal(tc.VAR_WAITING_TIME, laneID) def getTraveltime(self, laneID): """getTraveltime(string) -&gt; double Returns the estimated travel time in s for the last time step on the given lane. """ return self._getUniversal(tc.VAR_CURRENT_TRAVELTIME, laneID) def getLastStepVehicleNumber(self, laneID): """getLastStepVehicleNumber(string) -&gt; integer Returns the total number of vehicles for the last time step on the given lane. """ return self._getUniversal(tc.LAST_STEP_VEHICLE_NUMBER, laneID) def getLastStepHaltingNumber(self, laneID): """getLastStepHaltingNumber(string) -&gt; integer Returns the total number of halting vehicles for the last time step on the given lane. A speed of less than 0.1 m/s is considered a halt. """ return self._getUniversal(tc.LAST_STEP_VEHICLE_HALTING_NUMBER, laneID) def getLastStepVehicleIDs(self, laneID): """getLastStepVehicleIDs(string) -&gt; list(string) Returns the ids of the vehicles for the last time step on the given lane. """ return self._getUniversal(tc.LAST_STEP_VEHICLE_ID_LIST, laneID) def getFoes(self, laneID, toLaneID): """getFoes(string, string) -&gt; list(string) Returns the ids of incoming lanes that have right of way over the connection from laneID to toLaneID """ self._connection._beginMessage( tc.CMD_GET_LANE_VARIABLE, tc.VAR_FOES, laneID, 1 + 4 + len(toLaneID)) self._connection._packString(toLaneID) return Storage.readStringList( self._connection._checkResult(tc.CMD_GET_LANE_VARIABLE, tc.VAR_FOES, laneID)) def getInternalFoes(self, laneID): """getFoes(string) -&gt; list(string) Returns the ids of internal lanes that are in conflict with the given internal lane id """ return self.getFoes(laneID, "") def setAllowed(self, laneID, allowedClasses): """setAllowed(string, list) -&gt; None Sets a list of allowed vehicle classes. Setting an empty list means all vehicles are allowed. """ if isinstance(allowedClasses, str): allowedClasses = [allowedClasses] self._connection._beginMessage(tc.CMD_SET_LANE_VARIABLE, tc.LANE_ALLOWED, laneID, 1 + 4 + sum(map(len, allowedClasses)) + 4 * len(allowedClasses)) self._connection._packStringList(allowedClasses) self._connection._sendExact() def setDisallowed(self, laneID, disallowedClasses): """setDisallowed(string, list) -&gt; None Sets a list of disallowed vehicle classes. """ if isinstance(disallowedClasses, str): disallowedClasses = [disallowedClasses] self._connection._beginMessage(tc.CMD_SET_LANE_VARIABLE, tc.LANE_DISALLOWED, laneID, 1 + 4 + sum(map(len, disallowedClasses)) + 4 * len(disallowedClasses)) self._connection._packStringList(disallowedClasses) self._connection._sendExact() def setMaxSpeed(self, laneID, speed): """setMaxSpeed(string, double) -&gt; None Sets a new maximum allowed speed on the lane in m/s. """ self._connection._sendDoubleCmd( tc.CMD_SET_LANE_VARIABLE, tc.VAR_MAXSPEED, laneID, speed) def setLength(self, laneID, length): """setLength(string, double) -&gt; None Sets the length of the lane in m. """ self._connection._sendDoubleCmd( tc.CMD_SET_LANE_VARIABLE, tc.VAR_LENGTH, laneID, length)LaneDomain() 0x03 veciclecoding: utf-8 -*-# Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo# Copyright (C) 2011-2018 German Aerospace Center (DLR) and others.# This program and the accompanying materials# are made available under the terms of the Eclipse Public License v2.0# which accompanies this distribution, and is available at# http://www.eclipse.org/legal/epl-v20.html# SPDX-License-Identifier: EPL-2.0# @file _vehicle.py# @author Michael Behrisch# @author Lena Kalleske# @author Mario Krumnow# @author Lena Kalleske# @author Jakob Erdmann# @author Laura Bieker# @author Daniel Krajzewicz# @date 2011-03-09# @version $Id$from __future__ import absolute_importimport structimport warningsfrom .domain import Domainfrom .storage import Storagefrom . import constants as tcfrom . import exceptionsdef _readBestLanes(result): result.read("!iB") nbLanes = result.read("!i")[0] # Length lanes = [] for i in range(nbLanes): result.read("!B") laneID = result.readString() length, occupation, offset = result.read("!BdBdBb")[1::2] allowsContinuation = bool(result.read("!BB")[1]) nextLanesNo = result.read("!Bi")[1] nextLanes = [] for j in range(nextLanesNo): nextLanes.append(result.readString()) lanes.append((laneID, length, occupation, offset, allowsContinuation, tuple(nextLanes))) return tuple(lanes)def _readLeader(result): result.read("!iB") vehicleID = result.readString() result.read("!B") dist = result.readDouble() if vehicleID: return vehicleID, dist return Nonedef _readNextTLS(result): result.read("!iB") # numCompounds, TYPE_INT numTLS = result.read("!i")[0] nextTLS = [] for i in range(numTLS): result.read("!B") tlsID = result.readString() tlsIndex, dist, state = result.read("!BiBdBB")[1::2] nextTLS.append((tlsID, tlsIndex, dist, chr(state))) return tuple(nextTLS)def _readNextStops(result): result.read("!iB") # numCompounds, TYPE_INT numStops = result.read("!i")[0] nextStop = [] for i in range(numStops): result.read("!B") lane = result.readString() result.read("!B") endPos = result.readDouble() result.read("!B") stoppingPlaceID = result.readString() result.read("!B") stopFlags = result.readInt() result.read("!B") duration = result.readDouble() result.read("!B") until = result.readDouble() nextStop.append((lane, endPos, stoppingPlaceID, stopFlags, duration, until)) return tuple(nextStop)_RETURN_VALUE_FUNC = &#123;tc.VAR_SPEED: Storage.readDouble, tc.VAR_SPEED_WITHOUT_TRACI: Storage.readDouble, tc.VAR_ACCELERATION: Storage.readDouble, tc.VAR_POSITION: lambda result: result.read("!dd"), tc.VAR_POSITION3D: lambda result: result.read("!ddd"), tc.VAR_ANGLE: Storage.readDouble, tc.VAR_ROAD_ID: Storage.readString, tc.VAR_LANE_ID: Storage.readString, tc.VAR_LANE_INDEX: Storage.readInt, tc.VAR_TYPE: Storage.readString, tc.VAR_ROUTE_ID: Storage.readString, tc.VAR_ROUTE_INDEX: Storage.readInt, tc.VAR_COLOR: lambda result: result.read("!BBBB"), tc.VAR_LANEPOSITION: Storage.readDouble, tc.VAR_CO2EMISSION: Storage.readDouble, tc.VAR_COEMISSION: Storage.readDouble, tc.VAR_HCEMISSION: Storage.readDouble, tc.VAR_PMXEMISSION: Storage.readDouble, tc.VAR_NOXEMISSION: Storage.readDouble, tc.VAR_FUELCONSUMPTION: Storage.readDouble, tc.VAR_NOISEEMISSION: Storage.readDouble, tc.VAR_ELECTRICITYCONSUMPTION: Storage.readDouble, tc.VAR_PERSON_NUMBER: Storage.readInt, tc.LAST_STEP_PERSON_ID_LIST: Storage.readStringList, tc.VAR_EDGE_TRAVELTIME: Storage.readDouble, tc.VAR_EDGE_EFFORT: Storage.readDouble, tc.VAR_ROUTE_VALID: lambda result: bool(result.read("!i")[0]), tc.VAR_EDGES: Storage.readStringList, tc.VAR_SIGNALS: Storage.readInt, tc.VAR_LENGTH: Storage.readDouble, tc.VAR_MAXSPEED: Storage.readDouble, tc.VAR_ALLOWED_SPEED: Storage.readDouble, tc.VAR_VEHICLECLASS: Storage.readString, tc.VAR_SPEED_FACTOR: Storage.readDouble, tc.VAR_SPEED_DEVIATION: Storage.readDouble, tc.VAR_EMISSIONCLASS: Storage.readString, tc.VAR_WAITING_TIME: Storage.readDouble, tc.VAR_ACCUMULATED_WAITING_TIME: Storage.readDouble, tc.VAR_LANECHANGE_MODE: Storage.readInt, tc.VAR_SPEEDSETMODE: Storage.readInt, tc.VAR_SLOPE: Storage.readDouble, tc.VAR_WIDTH: Storage.readDouble, tc.VAR_HEIGHT: Storage.readDouble, tc.VAR_LINE: Storage.readString, tc.VAR_VIA: Storage.readStringList, tc.VAR_MINGAP: Storage.readDouble, tc.VAR_SHAPECLASS: Storage.readString, tc.VAR_ACCEL: Storage.readDouble, tc.VAR_DECEL: Storage.readDouble, tc.VAR_EMERGENCY_DECEL: Storage.readDouble, tc.VAR_APPARENT_DECEL: Storage.readDouble, tc.VAR_ACTIONSTEPLENGTH: Storage.readDouble, tc.VAR_LASTACTIONTIME: Storage.readDouble, tc.VAR_IMPERFECTION: Storage.readDouble, tc.VAR_TAU: Storage.readDouble, tc.VAR_BEST_LANES: _readBestLanes, tc.VAR_LEADER: _readLeader, tc.VAR_NEXT_TLS: _readNextTLS, tc.VAR_NEXT_STOPS: _readNextStops, tc.VAR_LANEPOSITION_LAT: Storage.readDouble, tc.VAR_MAXSPEED_LAT: Storage.readDouble, tc.VAR_MINGAP_LAT: Storage.readDouble, tc.VAR_LATALIGNMENT: Storage.readString, tc.DISTANCE_REQUEST: Storage.readDouble, tc.VAR_ROUTING_MODE: Storage.readInt, tc.VAR_STOPSTATE: Storage.readInt, tc.VAR_DISTANCE: Storage.readDouble&#125;class VehicleDomain(Domain): # imported for backwards compatibility STOP_DEFAULT = tc.STOP_DEFAULT STOP_PARKING = tc.STOP_PARKING STOP_TRIGGERED = tc.STOP_TRIGGERED STOP_CONTAINER_TRIGGERED = tc.STOP_CONTAINER_TRIGGERED STOP_BUS_STOP = tc.STOP_BUS_STOP STOP_CONTAINER_STOP = tc.STOP_CONTAINER_STOP STOP_CHARGING_STATION = tc.STOP_CHARGING_STATION STOP_PARKING_AREA = tc.STOP_PARKING_AREA DEPART_TRIGGERED = tc.DEPARTFLAG_TRIGGERED DEPART_CONTAINER_TRIGGERED = tc.DEPARTFLAG_CONTAINER_TRIGGERED DEPART_NOW = tc.DEPARTFLAG_NOW DEPART_SPEED_RANDOM = tc.DEPARTFLAG_SPEED_RANDOM DEPART_SPEED_MAX = tc.DEPARTFLAG_SPEED_MAX DEPART_LANE_RANDOM = tc.DEPARTFLAG_LANE_RANDOM DEPART_LANE_FREE = tc.DEPARTFLAG_LANE_FREE DEPART_LANE_ALLOWED_FREE = tc.DEPARTFLAG_LANE_ALLOWED_FREE DEPART_LANE_BEST_FREE = tc.DEPARTFLAG_LANE_BEST_FREE DEPART_LANE_FIRST_ALLOWED = tc.DEPARTFLAG_LANE_FIRST_ALLOWED def __init__(self): Domain.__init__(self, "vehicle", tc.CMD_GET_VEHICLE_VARIABLE, tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_SUBSCRIBE_VEHICLE_VARIABLE, tc.RESPONSE_SUBSCRIBE_VEHICLE_VARIABLE, tc.CMD_SUBSCRIBE_VEHICLE_CONTEXT, tc.RESPONSE_SUBSCRIBE_VEHICLE_CONTEXT, _RETURN_VALUE_FUNC) def getSpeed(self, vehID): """getSpeed(string) -&gt; double Returns the speed in m/s of the named vehicle within the last step. """ return self._getUniversal(tc.VAR_SPEED, vehID) def getAcceleration(self, vehID): """getAcceleration(string) -&gt; double Returns the acceleration in m/s^2 of the named vehicle within the last step. """ return self._getUniversal(tc.VAR_ACCELERATION, vehID) def getSpeedWithoutTraCI(self, vehID): """getSpeedWithoutTraCI(string) -&gt; double Returns the speed that the vehicle would drive if not speed-influencing command such as setSpeed or slowDown was given. """ return self._getUniversal(tc.VAR_SPEED_WITHOUT_TRACI, vehID) def getPosition(self, vehID): """getPosition(string) -&gt; (double, double) Returns the position of the named vehicle within the last step [m,m]. """ return self._getUniversal(tc.VAR_POSITION, vehID) def getPosition3D(self, vehID): """getPosition3D(string) -&gt; (double, double, double) Returns the position of the named vehicle within the last step [m,m,m]. """ return self._getUniversal(tc.VAR_POSITION3D, vehID) def getAngle(self, vehID): """getAngle(string) -&gt; double Returns the angle in degrees of the named vehicle within the last step. """ return self._getUniversal(tc.VAR_ANGLE, vehID) def getRoadID(self, vehID): """getRoadID(string) -&gt; string Returns the id of the edge the named vehicle was at within the last step. """ return self._getUniversal(tc.VAR_ROAD_ID, vehID) def getLaneID(self, vehID): """getLaneID(string) -&gt; string Returns the id of the lane the named vehicle was at within the last step. """ return self._getUniversal(tc.VAR_LANE_ID, vehID) def getLaneIndex(self, vehID): """getLaneIndex(string) -&gt; integer Returns the index of the lane the named vehicle was at within the last step. """ return self._getUniversal(tc.VAR_LANE_INDEX, vehID) def getTypeID(self, vehID): """getTypeID(string) -&gt; string Returns the id of the type of the named vehicle. """ return self._getUniversal(tc.VAR_TYPE, vehID) def getRouteID(self, vehID): """getRouteID(string) -&gt; string Returns the id of the route of the named vehicle. """ return self._getUniversal(tc.VAR_ROUTE_ID, vehID) def getRouteIndex(self, vehID): """getRouteIndex(string) -&gt; int Returns the index of the current edge within the vehicles route or -1 if the vehicle has not yet departed """ return self._getUniversal(tc.VAR_ROUTE_INDEX, vehID) def getRoute(self, vehID): """getRoute(string) -&gt; list(string) Returns the ids of the edges the vehicle's route is made of. """ return self._getUniversal(tc.VAR_EDGES, vehID) def getLanePosition(self, vehID): """getLanePosition(string) -&gt; double The position of the vehicle along the lane measured in m. """ return self._getUniversal(tc.VAR_LANEPOSITION, vehID) def getColor(self, vehID): """getColor(string) -&gt; (integer, integer, integer, integer) Returns the vehicle's rgba color. """ return self._getUniversal(tc.VAR_COLOR, vehID) def getCO2Emission(self, vehID): """getCO2Emission(string) -&gt; double Returns the CO2 emission in mg for the last time step. """ return self._getUniversal(tc.VAR_CO2EMISSION, vehID) def getCOEmission(self, vehID): """getCOEmission(string) -&gt; double Returns the CO emission in mg for the last time step. """ return self._getUniversal(tc.VAR_COEMISSION, vehID) def getHCEmission(self, vehID): """getHCEmission(string) -&gt; double Returns the HC emission in mg for the last time step. """ return self._getUniversal(tc.VAR_HCEMISSION, vehID) def getPMxEmission(self, vehID): """getPMxEmission(string) -&gt; double Returns the particular matter emission in mg for the last time step. """ return self._getUniversal(tc.VAR_PMXEMISSION, vehID) def getNOxEmission(self, vehID): """getNOxEmission(string) -&gt; double Returns the NOx emission in mg for the last time step. """ return self._getUniversal(tc.VAR_NOXEMISSION, vehID) def getFuelConsumption(self, vehID): """getFuelConsumption(string) -&gt; double Returns the fuel consumption in ml for the last time step. """ return self._getUniversal(tc.VAR_FUELCONSUMPTION, vehID) def getNoiseEmission(self, vehID): """getNoiseEmission(string) -&gt; double Returns the noise emission in db for the last time step. """ return self._getUniversal(tc.VAR_NOISEEMISSION, vehID) def getElectricityConsumption(self, vehID): """getElectricityConsumption(string) -&gt; double Returns the electricity consumption in Wh for the last time step. """ return self._getUniversal(tc.VAR_ELECTRICITYCONSUMPTION, vehID) def getPersonNumber(self, vehID): """getPersonNumber(string) -&gt; integer Returns the total number of persons which includes those defined using attribute 'personNumber' as well as &lt;person&gt;-objects which are riding in this vehicle. """ return self._getUniversal(tc.VAR_PERSON_NUMBER, vehID) def getPersonIDList(self, vehID): """getPersonIDList(string) -&gt; integer Returns the list of persons which includes those defined using attribute 'personNumber' as well as &lt;person&gt;-objects which are riding in this vehicle. """ return self._getUniversal(tc.LAST_STEP_PERSON_ID_LIST, vehID) def getAdaptedTraveltime(self, vehID, time, edgeID): """getAdaptedTraveltime(string, double, string) -&gt; double . """ self._connection._beginMessage(tc.CMD_GET_VEHICLE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, vehID, 1 + 4 + 1 + 8 + 1 + 4 + len(edgeID)) self._connection._string += struct.pack( "!BiBd", tc.TYPE_COMPOUND, 2, tc.TYPE_DOUBLE, time) self._connection._packString(edgeID) return self._connection._checkResult(tc.CMD_GET_VEHICLE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, vehID).readDouble() def getEffort(self, vehID, time, edgeID): """getEffort(string, double, string) -&gt; double . """ self._connection._beginMessage(tc.CMD_GET_VEHICLE_VARIABLE, tc.VAR_EDGE_EFFORT, vehID, 1 + 4 + 1 + 8 + 1 + 4 + len(edgeID)) self._connection._string += struct.pack( "!BiBd", tc.TYPE_COMPOUND, 2, tc.TYPE_DOUBLE, time) self._connection._packString(edgeID) return self._connection._checkResult(tc.CMD_GET_VEHICLE_VARIABLE, tc.VAR_EDGE_EFFORT, vehID).readDouble() def isRouteValid(self, vehID): """isRouteValid(string) -&gt; bool Returns whether the current vehicle route is connected for the vehicle class of the given vehicle. """ return self._getUniversal(tc.VAR_ROUTE_VALID, vehID) def getSignals(self, vehID): """getSignals(string) -&gt; integer Returns an integer encoding the state of a vehicle's signals. """ return self._getUniversal(tc.VAR_SIGNALS, vehID) def getLength(self, vehID): """getLength(string) -&gt; double Returns the length in m of the given vehicle. """ return self._getUniversal(tc.VAR_LENGTH, vehID) def getMaxSpeed(self, vehID): """getMaxSpeed(string) -&gt; double Returns the maximum speed in m/s of this vehicle. """ return self._getUniversal(tc.VAR_MAXSPEED, vehID) def getLateralLanePosition(self, vehID): """getLateralLanePosition(string) -&gt; double Returns The lateral position of the vehicle on its current lane measured in m. """ return self._getUniversal(tc.VAR_LANEPOSITION_LAT, vehID) def getMaxSpeedLat(self, vehID): """getMaxSpeedLat(string) -&gt; double Returns the maximum lateral speed in m/s of this vehicle. """ return self._getUniversal(tc.VAR_MAXSPEED_LAT, vehID) def getLateralAlignment(self, vehID): """getLateralAlignment(string) -&gt; string Returns The preferred lateral alignment of the vehicle """ return self._getUniversal(tc.VAR_LATALIGNMENT, vehID) def getMinGapLat(self, vehID): """getMinGapLat(string) -&gt; double Returns The desired lateral gap of this vehicle at 50km/h in m """ return self._getUniversal(tc.VAR_MINGAP_LAT, vehID) def getAllowedSpeed(self, vehID): """getAllowedSpeed(string) -&gt; double Returns the maximum allowed speed on the current lane regarding speed factor in m/s for this vehicle. """ return self._getUniversal(tc.VAR_ALLOWED_SPEED, vehID) def getVehicleClass(self, vehID): """getVehicleClass(string) -&gt; string Returns the vehicle class of this vehicle. """ return self._getUniversal(tc.VAR_VEHICLECLASS, vehID) def getSpeedFactor(self, vehID): """getSpeedFactor(string) -&gt; double Returns the chosen speed factor for this vehicle. """ return self._getUniversal(tc.VAR_SPEED_FACTOR, vehID) def getSpeedDeviation(self, vehID): """getSpeedDeviation(string) -&gt; double Returns the standard deviation for the speed factor of the vehicle type. """ return self._getUniversal(tc.VAR_SPEED_DEVIATION, vehID) def getEmissionClass(self, vehID): """getEmissionClass(string) -&gt; string Returns the emission class of this vehicle. """ return self._getUniversal(tc.VAR_EMISSIONCLASS, vehID) def getWaitingTime(self, vehID): """getWaitingTime() -&gt; double The waiting time of a vehicle is defined as the time (in seconds) spent with a speed below 0.1m/s since the last time it was faster than 0.1m/s. (basically, the waiting time of a vehicle is reset to 0 every time it moves). A vehicle that is stopping intentionally with a &lt;stop&gt; does not accumulate waiting time. """ return self._getUniversal(tc.VAR_WAITING_TIME, vehID) def getAccumulatedWaitingTime(self, vehID): """getAccumulatedWaitingTime() -&gt; double The accumulated waiting time of a vehicle collects the vehicle's waiting time over a certain time interval (interval length is set per option '--waiting-time-memory') """ return self._getUniversal(tc.VAR_ACCUMULATED_WAITING_TIME, vehID) def getLaneChangeMode(self, vehID): """getLaneChangeMode(string) -&gt; integer Gets the vehicle's lane change mode as a bitset. """ return self._getUniversal(tc.VAR_LANECHANGE_MODE, vehID) def getSpeedMode(self, vehID): """getSpeedMode -&gt; int The speed mode of a vehicle """ return self._getUniversal(tc.VAR_SPEEDSETMODE, vehID) def getSlope(self, vehID): """getSlope -&gt; double The slope at the current position of the vehicle in degrees """ return self._getUniversal(tc.VAR_SLOPE, vehID) def getWidth(self, vehID): """getWidth(string) -&gt; double Returns the width in m of this vehicle. """ return self._getUniversal(tc.VAR_WIDTH, vehID) def getHeight(self, vehID): """getHeight(string) -&gt; double Returns the height in m of this vehicle. """ return self._getUniversal(tc.VAR_HEIGHT, vehID) def getLine(self, vehID): """getLine(string) -&gt; string Returns the line information of this vehicle. """ return self._getUniversal(tc.VAR_LINE, vehID) def getVia(self, vehID): """getVia(string) -&gt; list(string) Returns the ids of via edges for this vehicle """ return self._getUniversal(tc.VAR_VIA, vehID) def getMinGap(self, vehID): """getMinGap(string) -&gt; double Returns the offset (gap to front vehicle if halting) of this vehicle. """ return self._getUniversal(tc.VAR_MINGAP, vehID) def getShapeClass(self, vehID): """getShapeClass(string) -&gt; string Returns the shape class of this vehicle. """ return self._getUniversal(tc.VAR_SHAPECLASS, vehID) def getAccel(self, vehID): """getAccel(string) -&gt; double Returns the maximum acceleration possibility in m/s^2 of this vehicle. """ return self._getUniversal(tc.VAR_ACCEL, vehID) def getDecel(self, vehID): """getDecel(string) -&gt; double Returns the preferred maximal deceleration possibility in m/s^2 of this vehicle. """ return self._getUniversal(tc.VAR_DECEL, vehID) def getEmergencyDecel(self, vehID): """getEmergencyDecel(string) -&gt; double Returns the maximal physically possible deceleration in m/s^2 of this vehicle. """ return self._getUniversal(tc.VAR_EMERGENCY_DECEL, vehID) def getApparentDecel(self, vehID): """getApparentDecel(string) -&gt; double Returns the apparent deceleration in m/s^2 of this vehicle. """ return self._getUniversal(tc.VAR_APPARENT_DECEL, vehID) def getActionStepLength(self, vehID): """getActionStepLength(string) -&gt; double Returns the action step length for this vehicle. """ return self._getUniversal(tc.VAR_ACTIONSTEPLENGTH, vehID) def getLastActionTime(self, vehID): """getLastActionTime(string) -&gt; double Returns the time of last action point for this vehicle. """ return self._getUniversal(tc.VAR_LASTACTIONTIME, vehID) def getImperfection(self, vehID): """getImperfection(string) -&gt; double . """ return self._getUniversal(tc.VAR_IMPERFECTION, vehID) def getTau(self, vehID): """getTau(string) -&gt; double Returns the driver's reaction time in s for this vehicle. """ return self._getUniversal(tc.VAR_TAU, vehID) def getBestLanes(self, vehID): """getBestLanes(string) -&gt; Information about the wish to use subsequent edges' lanes. """ return self._getUniversal(tc.VAR_BEST_LANES, vehID) def getLeader(self, vehID, dist=0.): """getLeader(string, double) -&gt; (string, double) Return the leading vehicle id together with the distance. The distance is measured from the front + minGap to the back of the leader, so it does not include the minGap of the vehicle. The dist parameter defines the maximum lookahead, 0 calculates a lookahead from the brake gap. Note that the returned leader may be farther away than the given dist. """ self._connection._beginMessage( tc.CMD_GET_VEHICLE_VARIABLE, tc.VAR_LEADER, vehID, 1 + 8) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, dist) return _readLeader(self._connection._checkResult(tc.CMD_GET_VEHICLE_VARIABLE, tc.VAR_LEADER, vehID)) def getNextTLS(self, vehID): """getNextTLS(string) -&gt; Return list of upcoming traffic lights [(tlsID, tlsIndex, distance, state), ...] """ return self._getUniversal(tc.VAR_NEXT_TLS, vehID) def getNextStops(self, vehID): """getNextStop(string) -&gt; [(string, double, string, int, int, int)], ... Return list of upcoming stops [(lane, endPos, stoppingPlaceID, stopFlags, duration, until), ...] where integer stopFlag is defined as: 1 * stopped + 2 * parking + 4 * personTriggered + 8 * containerTriggered + 16 * isBusStop + 32 * isContainerStop + 64 * chargingStation + 128 * parkingarea with each of these flags defined as 0 or 1. """ return self._getUniversal(tc.VAR_NEXT_STOPS, vehID) def subscribeLeader(self, vehID, dist=0., begin=0, end=2**31 - 1): """subscribeLeader(string, double) -&gt; None Subscribe for the leading vehicle id together with the distance. The dist parameter defines the maximum lookahead, 0 calculates a lookahead from the brake gap. """ self._connection._subscribe(tc.CMD_SUBSCRIBE_VEHICLE_VARIABLE, begin, end, vehID, (tc.VAR_LEADER,), &#123;tc.VAR_LEADER: struct.pack("!Bd", tc.TYPE_DOUBLE, dist)&#125;) def getDrivingDistance(self, vehID, edgeID, pos, laneIndex=0): """getDrivingDistance(string, string, double, integer) -&gt; double Return the distance to the given edge and position along the vehicles route. """ self._connection._beginMessage(tc.CMD_GET_VEHICLE_VARIABLE, tc.DISTANCE_REQUEST, vehID, 1 + 4 + 1 + 4 + len(edgeID) + 8 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._packString(edgeID, tc.POSITION_ROADMAP) self._connection._string += struct.pack("!dBB", pos, laneIndex, tc.REQUEST_DRIVINGDIST) return self._connection._checkResult(tc.CMD_GET_VEHICLE_VARIABLE, tc.DISTANCE_REQUEST, vehID).readDouble() def getDrivingDistance2D(self, vehID, x, y): """getDrivingDistance2D(string, double, double) -&gt; integer Return the distance to the given network position along the vehicles route. """ self._connection._beginMessage( tc.CMD_GET_VEHICLE_VARIABLE, tc.DISTANCE_REQUEST, vehID, 1 + 4 + 1 + 8 + 8 + 1) self._connection._string += struct.pack("!BiBddB", tc.TYPE_COMPOUND, 2, tc.POSITION_2D, x, y, tc.REQUEST_DRIVINGDIST) return self._connection._checkResult(tc.CMD_GET_VEHICLE_VARIABLE, tc.DISTANCE_REQUEST, vehID).readDouble() def getDistance(self, vehID): """getDistance(string) -&gt; double Returns the distance to the starting point like an odometer """ return self._getUniversal(tc.VAR_DISTANCE, vehID) def getStopState(self, vehID): """getStopState(string) -&gt; integer Returns information in regard to stopping: The returned integer is defined as 1 * stopped + 2 * parking + 4 * personTriggered + 8 * containerTriggered + 16 * isBusStop + 32 * isContainerStop with each of these flags defined as 0 or 1 """ return self._getUniversal(tc.VAR_STOPSTATE, vehID) def isStopped(self, vehID): """isStopped(string) -&gt; bool Return whether the vehicle is stopped """ return (self.getStopState(vehID) &amp; 1) == 1 def isStoppedParking(self, vehID): """isStoppedParking(string) -&gt; bool Return whether the vehicle is parking (implies stopped) """ return (self.getStopState(vehID) &amp; 2) == 2 def isStoppedTriggered(self, vehID): """isStoppedTriggered(string) -&gt; bool Return whether the vehicle is stopped and waiting for a person or container """ return (self.getStopState(vehID) &amp; 12) &gt; 0 def isAtBusStop(self, vehID): """isAtBusStop(string) -&gt; bool Return whether the vehicle is stopped at a bus stop """ return (self.getStopState(vehID) &amp; 16) == 16 def isAtContainerStop(self, vehID): """isAtContainerStop(string) -&gt; bool Return whether the vehicle is stopped at a container stop """ return (self.getStopState(vehID) &amp; 32) == 32 def getLaneChangeState(self, vehID, direction): """getLaneChangeState(string, int) -&gt; (int, int) Return the lane change state for the vehicle """ self._connection._beginMessage( tc.CMD_GET_VEHICLE_VARIABLE, tc.CMD_CHANGELANE, vehID, 1 + 4) self._connection._string += struct.pack("!Bi", tc.TYPE_INTEGER, direction) result = self._connection._checkResult(tc.CMD_GET_VEHICLE_VARIABLE, tc.CMD_CHANGELANE, vehID) return result.read("!iBiBi")[2::2] # ignore num compounds and type int def getLaneChangeStatePretty(self, vehID, direction): """getLaneChangeState(string, int) -&gt; ([string, ...], [string, ...]) Return the lane change state for the vehicle as a list of string constants """ constants = &#123; 0: 'stay', 1: 'left', 2: 'right', 3: 'strategic', 4: 'cooperative', 5: 'speedGain', 6: 'keepRight', 7: 'TraCI', 8: 'urgent', 9: 'blocked by left leader', 10: 'blocked by left follower', 11: 'blocked by right leader', 12: 'bloecked by right follower', 13: 'overlapping', 14: 'insufficient space', 15: 'sublane', &#125; def prettifyBitstring(intval): return [v for k, v in constants.items() if (intval &amp; 2**k)] state, stateTraCI = self.getLaneChangeState(vehID, direction) return prettifyBitstring(state), prettifyBitstring(stateTraCI) def couldChangeLane(self, vehID, direction, state=None): """couldChangeLane(string, int) -&gt; bool Return whether the vehicle could change lanes in the specified direction """ if state is None: state, stateTraCI = self.getLaneChangeState(vehID, direction) if self.wantsAndCouldChangeLane(vehID, direction, stateTraCI): # vehicle changed in the last step. state is no longer applicable return False return state != tc.LCA_UNKNOWN and (state &amp; tc.LCA_BLOCKED == 0) def wantsAndCouldChangeLane(self, vehID, direction, state=None): """wantsAndCouldChangeLane(string, int) -&gt; bool Return whether the vehicle wants to and could change lanes in the specified direction """ if state is None: state, stateTraCI = self.getLaneChangeState(vehID, direction) if self.wantsAndCouldChangeLane(vehID, direction, stateTraCI): # vehicle changed in the last step. state is no longer applicable return False if state &amp; tc.LCA_BLOCKED == 0: if direction == -1: return state &amp; tc.LCA_RIGHT != 0 if direction == 1: return state &amp; tc.LCA_LEFT != 0 return False def getRoutingMode(self, vehID): """returns the current routing mode: tc.ROUTING_MODE_DEFAULT : use weight storages and fall-back to edge speeds (default) tc.ROUTING_MODE_AGGREGATED : use global smoothed travel times from device.rerouting """ return self._getUniversal(tc.VAR_ROUTING_MODE, vehID) def setMaxSpeed(self, vehID, speed): """setMaxSpeed(string, double) -&gt; None Sets the maximum speed in m/s for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_MAXSPEED, vehID, speed) def setMaxSpeedLat(self, vehID, speed): """setMaxSpeedLat(string, double) -&gt; None Sets the maximum lateral speed in m/s for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_MAXSPEED_LAT, vehID, speed) def rerouteParkingArea(self, vehID, parkingAreaID): """rerouteParkingArea(string, string) Changes the next parking area in parkingAreaID, updates the vehicle route, and preserve consistency in case of passengers/containers on board. """ self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_REROUTE_TO_PARKING, vehID, 1 + 4 + # compound 1 + 4 + len(parkingAreaID)) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 1) self._connection._packString(parkingAreaID) self._connection._sendExact() def setStop(self, vehID, edgeID, pos=1., laneIndex=0, duration=tc.INVALID_DOUBLE_VALUE, flags=tc.STOP_DEFAULT, startPos=tc.INVALID_DOUBLE_VALUE, until=tc.INVALID_DOUBLE_VALUE): """setStop(string, string, double, integer, double, integer, double, double) -&gt; None Adds or modifies a stop with the given parameters. The duration and the until attribute are in seconds. """ if type(duration) is int and duration &gt;= 1000 and duration % 1000 == 0: warnings.warn("API change now handles duration as floating point seconds", stacklevel=2) self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_STOP, vehID, (1 + 4 + 1 + 4 + len(edgeID) + 1 + 8 + 1 + 1 + 1 + 8 + 1 + 1 + 1 + 8 + 1 + 8)) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 7) self._connection._packString(edgeID) self._connection._string += struct.pack("!BdBBBdBB", tc.TYPE_DOUBLE, pos, tc.TYPE_BYTE, laneIndex, tc.TYPE_DOUBLE, duration, tc.TYPE_BYTE, flags) self._connection._string += struct.pack("!BdBd", tc.TYPE_DOUBLE, startPos, tc.TYPE_DOUBLE, until) self._connection._sendExact() def setBusStop(self, vehID, stopID, duration=tc.INVALID_DOUBLE_VALUE, until=tc.INVALID_DOUBLE_VALUE, flags=tc.STOP_DEFAULT): """setBusStop(string, string, double, double, integer) -&gt; None Adds or modifies a bus stop with the given parameters. The duration and the until attribute are in seconds. """ self.setStop(vehID, stopID, duration=duration, until=until, flags=flags | tc.STOP_BUS_STOP) def setContainerStop(self, vehID, stopID, duration=tc.INVALID_DOUBLE_VALUE, until=tc.INVALID_DOUBLE_VALUE, flags=tc.STOP_DEFAULT): """setContainerStop(string, string, double, double, integer) -&gt; None Adds or modifies a container stop with the given parameters. The duration and the until attribute are in seconds. """ self.setStop(vehID, stopID, duration=duration, until=until, flags=flags | tc.STOP_CONTAINER_STOP) def setChargingStationStop(self, vehID, stopID, duration=tc.INVALID_DOUBLE_VALUE, until=tc.INVALID_DOUBLE_VALUE, flags=tc.STOP_DEFAULT): """setChargingStationStop(string, string, double, double, integer) -&gt; None Adds or modifies a stop at a chargingStation with the given parameters. The duration and the until attribute are in seconds. """ self.setStop(vehID, stopID, duration=duration, until=until, flags=flags | tc.STOP_CHARGING_STATION) def setParkingAreaStop(self, vehID, stopID, duration=tc.INVALID_DOUBLE_VALUE, until=tc.INVALID_DOUBLE_VALUE, flags=tc.STOP_PARKING): """setParkingAreaStop(string, string, double, double, integer) -&gt; None Adds or modifies a stop at a parkingArea with the given parameters. The duration and the until attribute are in seconds. """ self.setStop(vehID, stopID, duration=duration, until=until, flags=flags | tc.STOP_PARKING_AREA) def resume(self, vehID): """resume(string) -&gt; None Resumes the vehicle from the current stop (throws an error if the vehicle is not stopped). """ self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_RESUME, vehID, 1 + 4) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 0) self._connection._sendExact() def changeLane(self, vehID, laneIndex, duration): """changeLane(string, int, double) -&gt; None Forces a lane change to the lane with the given index; if successful, the lane will be chosen for the given amount of time (in s). """ if type(duration) is int and duration &gt;= 1000: warnings.warn("API change now handles duration as floating point seconds", stacklevel=2) self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_CHANGELANE, vehID, 1 + 4 + 1 + 1 + 1 + 8) self._connection._string += struct.pack( "!BiBBBd", tc.TYPE_COMPOUND, 2, tc.TYPE_BYTE, laneIndex, tc.TYPE_DOUBLE, duration) self._connection._sendExact() def changeLaneRelative(self, vehID, left, duration): """changeLane(string, int, double) -&gt; None Forces a relative lane change; if successful, the lane will be chosen for the given amount of time (in s). """ if type(duration) is int and duration &gt;= 1000: warnings.warn("API change now handles duration as floating point seconds", stacklevel=2) if left &gt; 0: laneIndex = left else: laneIndex = 0 self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_CHANGELANE, vehID, 1 + 4 + 1 + 1 + 1 + 8 + 1 + 1) self._connection._string += struct.pack( "!BiBBBdBB", tc.TYPE_COMPOUND, 3, tc.TYPE_BYTE, laneIndex, tc.TYPE_DOUBLE, duration, tc.TYPE_BYTE, 1) self._connection._sendExact() def changeSublane(self, vehID, latDist): """changeLane(string, double) -&gt; None Forces a lateral change by the given amount (negative values indicate changing to the right, positive to the left). This will override any other lane change motivations but conform to safety-constraints as configured by laneChangeMode. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_CHANGESUBLANE, vehID, latDist) def slowDown(self, vehID, speed, duration): """slowDown(string, double, double) -&gt; None Changes the speed smoothly to the given value over the given amount of time in seconds (can also be used to increase speed). """ if type(duration) is int and duration &gt;= 1000: warnings.warn("API change now handles duration as floating point seconds", stacklevel=2) self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_SLOWDOWN, vehID, 1 + 4 + 1 + 8 + 1 + 8) self._connection._string += struct.pack( "!BiBdBd", tc.TYPE_COMPOUND, 2, tc.TYPE_DOUBLE, speed, tc.TYPE_DOUBLE, duration) self._connection._sendExact() def openGap(self, vehID, newTimeHeadway, newSpaceHeadway, duration, changeRate, maxDecel=-1): """openGap(string, double, double, double, double, double) -&gt; None Changes the vehicle's desired time headway (cf-parameter tau) smoothly to the given new value using the given change rate. Similarly, the given space headway is applied gradually to achieve a minimal spacial gap. The vehicle is commanded to keep the increased headway for the given duration once its target value is attained. Optionally, a maximal value for the deceleration (&gt;0) can be given to prevent harsh braking due to the change of tau. Note that this does only affect the following behavior regarding the current leader and does not influence the gap acceptance during lane change, etc. """ if type(duration) is int and duration &gt;= 1000: warnings.warn("API change now handles duration as floating point seconds", stacklevel=2) nParams = 4 + int(maxDecel &gt; 0) msgLength = 1 + 4 + (1 + 8) * nParams # compoundType, nParams, newHeadway, duration, changeRate, [maxDecel] self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_OPENGAP, vehID, msgLength) self._connection._string += struct.pack("!BiBdBdBdBd", tc.TYPE_COMPOUND, nParams, tc.TYPE_DOUBLE, newTimeHeadway, tc.TYPE_DOUBLE, newSpaceHeadway, tc.TYPE_DOUBLE, duration, tc.TYPE_DOUBLE, changeRate) if nParams == 5: self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, maxDecel) self._connection._sendExact() def deactivateGapControl(self, vehID): """deactivateGapControl(string) -&gt; None Deactivate the vehicle's gap control """ self.openGap(vehID, -1, -1, -1, -1) def changeTarget(self, vehID, edgeID): """changeTarget(string, string) -&gt; None The vehicle's destination edge is set to the given edge id. The route is rebuilt. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_CHANGETARGET, vehID, edgeID) def setType(self, vehID, typeID): """setType(string, string) -&gt; None Sets the id of the type for the named vehicle. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_TYPE, vehID, typeID) def setRouteID(self, vehID, routeID): """setRouteID(string, string) -&gt; None Changes the vehicles route to the route with the given id. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_ROUTE_ID, vehID, routeID) def setRoute(self, vehID, edgeList): """ setRoute(string, list) -&gt; None changes the vehicle route to given edges list. The first edge in the list has to be the one that the vehicle is at at the moment. example usage: setRoute('1', ['1', '2', '4', '6', '7']) this changes route for vehicle id 1 to edges 1-2-4-6-7 """ if isinstance(edgeList, str): edgeList = [edgeList] self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_ROUTE, vehID, 1 + 4 + sum(map(len, edgeList)) + 4 * len(edgeList)) self._connection._packStringList(edgeList) self._connection._sendExact() def updateBestLanes(self, vehID): """ updateBestLanes(string) -&gt; None Triggers an update of the vehicle's bestLanes (structure determining the lane preferences used by LC models) It may be called after modifying the vClass for instance. """ self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_UPDATE_BESTLANES, vehID) def setAdaptedTraveltime(self, vehID, edgeID, time=None, begTime=None, endTime=None): """setAdaptedTraveltime(string, string, double, double, double) -&gt; None Inserts the information about the travel time of edge "edgeID" valid from begin time to end time into the vehicle's internal edge weights container. If the time is not specified, any previously set values for that edge are removed. If begTime or endTime are not specified the value is set for the whole simulation duration. """ if type(edgeID) != str and type(begTime) == str: # legacy handling warnings.warn( "Parameter order has changed for setAdaptedTraveltime(). Attempting legacy ordering. " + "Please update your code.", stacklevel=2) return self.setAdaptedTraveltime(vehID, begTime, endTime, edgeID, time) if time is None: # reset self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, vehID, 1 + 4 + 1 + 4 + len(edgeID)) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 1) self._connection._packString(edgeID) self._connection._sendExact() elif begTime is None: # set value for the whole simulation self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, vehID, 1 + 4 + 1 + 4 + len(edgeID) + 1 + 8) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._packString(edgeID) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, time) self._connection._sendExact() else: self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EDGE_TRAVELTIME, vehID, 1 + 4 + 1 + 8 + 1 + 8 + 1 + 4 + len(edgeID) + 1 + 8) self._connection._string += struct.pack("!BiBdBd", tc.TYPE_COMPOUND, 4, tc.TYPE_DOUBLE, begTime, tc.TYPE_DOUBLE, endTime) self._connection._packString(edgeID) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, time) self._connection._sendExact() def setEffort(self, vehID, edgeID, effort=None, begTime=None, endTime=None): """setEffort(string, string, double, double, double) -&gt; None Inserts the information about the effort of edge "edgeID" valid from begin time to end time into the vehicle's internal edge weights container. If the time is not specified, any previously set values for that edge are removed. If begTime or endTime are not specified the value is set for the whole simulation duration. """ if type(edgeID) != str and type(begTime) == str: # legacy handling warnings.warn( "Parameter order has changed for setEffort(). Attempting legacy ordering. Please update your code.", stacklevel=2) return self.setEffort(vehID, begTime, endTime, edgeID, effort) if effort is None: # reset self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EDGE_EFFORT, vehID, 1 + 4 + 1 + 4 + len(edgeID)) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 1) self._connection._packString(edgeID) self._connection._sendExact() elif begTime is None: # set value for the whole simulation self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EDGE_EFFORT, vehID, 1 + 4 + 1 + 4 + len(edgeID) + 1 + 8) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._packString(edgeID) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, effort) self._connection._sendExact() else: self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EDGE_EFFORT, vehID, 1 + 4 + 1 + 8 + 1 + 8 + 1 + 4 + len(edgeID) + 1 + 8) self._connection._string += struct.pack("!BiBdBd", tc.TYPE_COMPOUND, 4, tc.TYPE_DOUBLE, begTime, tc.TYPE_DOUBLE, endTime) self._connection._packString(edgeID) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, effort) self._connection._sendExact() LAST_TRAVEL_TIME_UPDATE = -1 def setRoutingMode(self, vehID, routingMode): """sets the current routing mode: tc.ROUTING_MODE_DEFAULT : use weight storages and fall-back to edge speeds (default) tc.ROUTING_MODE_AGGREGATED : use global smoothed travel times from device.rerouting """ self._connection._sendIntCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_ROUTING_MODE, vehID, routingMode) def rerouteTraveltime(self, vehID, currentTravelTimes=True): """rerouteTraveltime(string, bool) -&gt; None Reroutes a vehicle. If currentTravelTimes is True (default) then the current traveltime of the edges is loaded and used for rerouting. If currentTravelTimes is False custom travel times are used. The various functions and options for customizing travel times are described at http://sumo.dlr.de/wiki/Simulation/Routing When rerouteTraveltime has been called once with option currentTravelTimes=True, all edge weights are set to the current travel times at the time of that call (even for subsequent simulation steps). """ if currentTravelTimes: time = self._connection.simulation.getTime() if time != self.LAST_TRAVEL_TIME_UPDATE: self.LAST_TRAVEL_TIME_UPDATE = time for edge in self._connection.edge.getIDList(): self._connection.edge.adaptTraveltime( edge, self._connection.edge.getTraveltime(edge)) self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_REROUTE_TRAVELTIME, vehID, 1 + 4) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 0) self._connection._sendExact() def rerouteEffort(self, vehID): self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.CMD_REROUTE_EFFORT, vehID, 1 + 4) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 0) self._connection._sendExact() def setSignals(self, vehID, signals): """setSignals(string, integer) -&gt; None Sets an integer encoding the state of the vehicle's signals. """ self._connection._sendIntCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_SIGNALS, vehID, signals) def moveTo(self, vehID, laneID, pos): self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_MOVE_TO, vehID, 1 + 4 + 1 + 4 + len(laneID) + 1 + 8) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._packString(laneID) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, pos) self._connection._sendExact() def setSpeed(self, vehID, speed): """setSpeed(string, double) -&gt; None Sets the speed in m/s for the named vehicle within the last step. Calling with speed=-1 hands the vehicle control back to SUMO. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_SPEED, vehID, speed) def setColor(self, vehID, color): """setColor(string, (integer, integer, integer, integer)) Sets the color for the vehicle with the given ID, i.e. (255,0,0) for the color red. The fourth component (alpha) is optional. """ self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_COLOR, vehID, 1 + 1 + 1 + 1 + 1) self._connection._string += struct.pack("!BBBBB", tc.TYPE_COLOR, int(color[0]), int(color[1]), int(color[2]), int(color[3]) if len(color) &gt; 3 else 255) self._connection._sendExact() def setLength(self, vehID, length): """setLength(string, double) -&gt; None Sets the length in m for the given vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_LENGTH, vehID, length) def setVehicleClass(self, vehID, clazz): """setVehicleClass(string, string) -&gt; None Sets the vehicle class for this vehicle. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_VEHICLECLASS, vehID, clazz) def setSpeedFactor(self, vehID, factor): """setSpeedFactor(string, double) -&gt; None . """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_SPEED_FACTOR, vehID, factor) def setEmissionClass(self, vehID, clazz): """setEmissionClass(string, string) -&gt; None Sets the emission class for this vehicle. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EMISSIONCLASS, vehID, clazz) def setWidth(self, vehID, width): """setWidth(string, double) -&gt; None Sets the width in m for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_WIDTH, vehID, width) def setHeight(self, vehID, height): """setHeight(string, double) -&gt; None Sets the height in m for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_HEIGHT, vehID, height) def setLine(self, vehID, line): """setHeight(string, string) -&gt; None Sets the line information for this vehicle. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_LINE, vehID, line) def setVia(self, vehID, edgeList): """ setVia(string, list) -&gt; None changes the via edges to the given edges list (to be used during subsequent rerouting calls). Note: a single edgeId as argument is allowed as shorthand for a list of length 1 """ if isinstance(edgeList, str): edgeList = [edgeList] self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_VIA, vehID, 1 + 4 + sum(map(len, edgeList)) + 4 * len(edgeList)) self._connection._packStringList(edgeList) self._connection._sendExact() def setMinGap(self, vehID, minGap): """setMinGap(string, double) -&gt; None Sets the offset (gap to front vehicle if halting) for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_MINGAP, vehID, minGap) def setMinGapLat(self, vehID, minGapLat): """setMinGapLat(string, double) -&gt; None Sets the minimum lateral gap of the vehicle at 50km/h in m """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_MINGAP_LAT, vehID, minGapLat) def setLateralAlignment(self, vehID, align): """setLateralAlignment(string, string) -&gt; None Sets the preferred lateral alignment for this vehicle. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_LATALIGNMENT, vehID, align) def setShapeClass(self, vehID, clazz): """setShapeClass(string, string) -&gt; None Sets the shape class for this vehicle. """ self._connection._sendStringCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_SHAPECLASS, vehID, clazz) def setAccel(self, vehID, accel): """setAccel(string, double) -&gt; None Sets the maximum acceleration in m/s^2 for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_ACCEL, vehID, accel) def setDecel(self, vehID, decel): """setDecel(string, double) -&gt; None Sets the preferred maximal deceleration in m/s^2 for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_DECEL, vehID, decel) def setEmergencyDecel(self, vehID, decel): """setEmergencyDecel(string, double) -&gt; None Sets the maximal physically possible deceleration in m/s^2 for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_EMERGENCY_DECEL, vehID, decel) def setApparentDecel(self, vehID, decel): """setApparentDecel(string, double) -&gt; None Sets the apparent deceleration in m/s^2 for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_APPARENT_DECEL, vehID, decel) def setActionStepLength(self, vehID, actionStepLength, resetActionOffset=True): """setActionStepLength(string, double, bool) -&gt; None Sets the action step length for this vehicle. If resetActionOffset == True (default), the next action point is scheduled immediately. if If resetActionOffset == False, the interval between the last and the next action point is updated to match the given value, or if the latter is smaller than the time since the last action point, the next action follows immediately. """ if actionStepLength &lt; 0: raise exceptions.TraCIException("Invalid value for actionStepLength. Given value must be non-negative.") # Use negative value to indicate resetActionOffset == False if not resetActionOffset: actionStepLength *= -1 self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_ACTIONSTEPLENGTH, vehID, actionStepLength) def setImperfection(self, vehID, imperfection): """setImperfection(string, double) -&gt; None Sets the driver imperfection sigma. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_IMPERFECTION, vehID, imperfection) def setTau(self, vehID, tau): """setTau(string, double) -&gt; None Sets the driver's tau-parameter (reaction time or anticipation time depending on the car-following model) in s for this vehicle. """ self._connection._sendDoubleCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_TAU, vehID, tau) def setLaneChangeMode(self, vehID, lcm): """setLaneChangeMode(string, integer) -&gt; None Sets the vehicle's lane change mode as a bitset. """ self._connection._sendIntCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_LANECHANGE_MODE, vehID, lcm) def setSpeedMode(self, vehID, sm): """setSpeedMode(string, integer) -&gt; None Sets the vehicle's speed mode as a bitset. """ self._connection._sendIntCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.VAR_SPEEDSETMODE, vehID, sm) def addLegacy(self, vehID, routeID, depart=tc.DEPARTFLAG_NOW, pos=0, speed=0, lane=tc.DEPARTFLAG_LANE_FIRST_ALLOWED, typeID="DEFAULT_VEHTYPE"): """ Add a new vehicle (old style) """ if depart == tc.DEPARTFLAG_NOW: depart = "now" elif depart == tc.DEPARTFLAG_TRIGGERED: depart = "triggered" else: depart = str(depart) if pos &lt; 0: print("Invalid departure position.") return if lane == tc.DEPARTFLAG_LANE_FIRST_ALLOWED: lane = "first" elif lane == tc.DEPARTFLAG_LANE_FREE: lane = "free" else: lane = str(lane) self.addFull(vehID, routeID, typeID, depart, lane, str(pos), str(speed)) def add(self, vehID, routeID, typeID="DEFAULT_VEHTYPE", depart=None, departLane="first", departPos="base", departSpeed="0", arrivalLane="current", arrivalPos="max", arrivalSpeed="current", fromTaz="", toTaz="", line="", personCapacity=0, personNumber=0): """ Add a new vehicle (new style with all possible parameters) """ messageString = struct.pack("!Bi", tc.TYPE_COMPOUND, 14) if depart is None: depart = str(self._connection.simulation.getTime()) for val in (routeID, typeID, depart, departLane, departPos, departSpeed, arrivalLane, arrivalPos, arrivalSpeed, fromTaz, toTaz, line): messageString += struct.pack("!Bi", tc.TYPE_STRING, len(val)) + str(val).encode("latin1") messageString += struct.pack("!Bi", tc.TYPE_INTEGER, personCapacity) messageString += struct.pack("!Bi", tc.TYPE_INTEGER, personNumber) self._connection._beginMessage( tc.CMD_SET_VEHICLE_VARIABLE, tc.ADD_FULL, vehID, len(messageString)) self._connection._string += messageString self._connection._sendExact() addFull = add def remove(self, vehID, reason=tc.REMOVE_VAPORIZED): '''Remove vehicle with the given ID for the give reason. Reasons are defined in module constants and start with REMOVE_''' self._connection._sendByteCmd( tc.CMD_SET_VEHICLE_VARIABLE, tc.REMOVE, vehID, reason) def moveToXY(self, vehID, edgeID, lane, x, y, angle=tc.INVALID_DOUBLE_VALUE, keepRoute=1): '''Place vehicle at the given x,y coordinates and force it's angle to the given value (for drawing). If the angle is set to INVALID_DOUBLE_VALUE, the vehicle assumes the natural angle of the edge on which it is driving. If keepRoute is set to 1, the closest position within the existing route is taken. If keepRoute is set to 0, the vehicle may move to any edge in the network but it's route then only consists of that edge. If keepRoute is set to 2 the vehicle has all the freedom of keepRoute=0 but in addition to that may even move outside the road network. edgeID and lane are optional placement hints to resolve ambiguities''' self._connection._beginMessage(tc.CMD_SET_VEHICLE_VARIABLE, tc.MOVE_TO_XY, vehID, 1 + 4 + 1 + 4 + len(edgeID) + 1 + 4 + 1 + 8 + 1 + 8 + 1 + 8 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 6) self._connection._packString(edgeID) self._connection._string += struct.pack("!Bi", tc.TYPE_INTEGER, lane) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, x) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, y) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, angle) self._connection._string += struct.pack("!BB", tc.TYPE_BYTE, keepRoute) self._connection._sendExact() def subscribe(self, objectID, varIDs=(tc.VAR_ROAD_ID, tc.VAR_LANEPOSITION), begin=0, end=2**31 - 1): """subscribe(string, list(integer), int, int) -&gt; None Subscribe to one or more object values for the given interval. """ Domain.subscribe(self, objectID, varIDs, begin, end) def subscribeContext(self, objectID, domain, dist, varIDs=( tc.VAR_ROAD_ID, tc.VAR_LANEPOSITION), begin=0, end=2**31 - 1): """subscribe(string, int, double, list(integer), int, int) -&gt; None Subscribe to one or more object values of the given domain around the given objectID in a given radius """ Domain.subscribeContext( self, objectID, domain, dist, varIDs, begin, end) def addSubscriptionFilterLanes(self, lanes, noOpposite=False, downstreamDist=None, upstreamDist=None): """addSubscriptionFilterLanes(list(integer), bool, double, double) -&gt; None Adds a lane-filter to the last modified vehicle context subscription (call it just after subscribing). lanes is a list of relative lane indices (-1 -&gt; right neighboring lane of the ego, 0 -&gt; ego lane, etc.) noOpposite specifies whether vehicles on opposite direction lanes shall be returned downstreamDist and upstreamDist specify the range of the search for surrounding vehicles along the road net. """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_LANES, lanes) if noOpposite: self.addSubscriptionFilterNoOpposite() if downstreamDist is not None: self.addSubscriptionFilterDownstreamDistance(downstreamDist) if upstreamDist is not None: self.addSubscriptionFilterUpstreamDistance(upstreamDist) def addSubscriptionFilterNoOpposite(self): """addSubscriptionFilterNoOpposite() -&gt; None Omits vehicles on other edges than the ego's for the last modified vehicle context subscription (call it just after subscribing). """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_NOOPPOSITE) def addSubscriptionFilterDownstreamDistance(self, dist): """addSubscriptionFilterDownstreamDist(float) -&gt; None Sets the downstream distance along the network for vehicles to be returned by the last modified vehicle context subscription (call it just after subscribing). """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_DOWNSTREAM_DIST, dist) def addSubscriptionFilterUpstreamDistance(self, dist): """addSubscriptionFilterUpstreamDist(float) -&gt; None Sets the upstream distance along the network for vehicles to be returned by the last modified vehicle context subscription (call it just after subscribing). """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_UPSTREAM_DIST, dist) def addSubscriptionFilterCFManeuver(self, downstreamDist=None, upstreamDist=None): """addSubscriptionFilterCFManeuver() -&gt; None Restricts vehicles returned by the last modified vehicle context subscription to leader and follower of the ego. downstreamDist and upstreamDist specify the range of the search for leader and follower along the road net. """ self.addSubscriptionFilterLeadFollow([0]) if downstreamDist is not None: self.addSubscriptionFilterDownstreamDistance(downstreamDist) if upstreamDist is not None: self.addSubscriptionFilterUpstreamDistance(upstreamDist) def addSubscriptionFilterLCManeuver(self, direction, noOpposite=False, downstreamDist=None, upstreamDist=None): """addSubscriptionFilterLCManeuver(int) -&gt; None Restricts vehicles returned by the last modified vehicle context subscription to neighbor and ego-lane leader and follower of the ego. direction - lane change direction (in &#123;-1=right, 1=left&#125;) noOpposite specifies whether vehicles on opposite direction lanes shall be returned downstreamDist and upstreamDist specify the range of the search for leader and follower along the road net. Combine with: distance filters; vClass/vType filter. """ if direction is None: # Using default: both directions lanes = [-1, 0, 1] elif not (direction == -1 or direction == 1): warnings.warn("Ignoring lane change subscription filter with non-neighboring lane offset direction=%s." % direction) return else: lanes = [0, direction] self.addSubscriptionFilterLeadFollow(lanes) if noOpposite: self.addSubscriptionFilterNoOpposite() if downstreamDist is not None: self.addSubscriptionFilterDownstreamDistance(downstreamDist) if upstreamDist is not None: self.addSubscriptionFilterUpstreamDistance(upstreamDist) def addSubscriptionFilterLeadFollow(self, lanes): """addSubscriptionFilterLCManeuver() -&gt; None Restricts vehicles returned by the last modified vehicle context subscription to neighbor and ego-lane leader and follower of the ego. Combine with: lanes-filter to restrict to one direction; distance filters; vClass/vType filter. """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_LEAD_FOLLOW) self._connection._addSubscriptionFilter(tc.FILTER_TYPE_LANES, lanes) def addSubscriptionFilterTurn(self, downstreamDist=None, upstreamDist=None): """addSubscriptionFilterTurn() -&gt; None Restricts vehicles returned by the last modified vehicle context subscription to foes on an upcoming junction """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_TURN) if downstreamDist is not None: self.addSubscriptionFilterDownstreamDistance(downstreamDist) if upstreamDist is not None: self.addSubscriptionFilterUpstreamDistance(upstreamDist) def addSubscriptionFilterVClass(self, vClasses): """addSubscriptionFilterVClass(list(String)) -&gt; None Restricts vehicles returned by the last modified vehicle context subscription to vehicles of the given classes """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_VCLASS, vClasses) def addSubscriptionFilterVType(self, vTypes): """addSubscriptionFilterVType(list(String)) -&gt; None Restricts vehicles returned by the last modified vehicle context subscription to vehicles of the given types """ self._connection._addSubscriptionFilter(tc.FILTER_TYPE_VTYPE, vTypes)VehicleDomain() 0x04 simulation123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454# -*- coding: utf-8 -*-# Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo# Copyright (C) 2011-2018 German Aerospace Center (DLR) and others.# This program and the accompanying materials# are made available under the terms of the Eclipse Public License v2.0# which accompanies this distribution, and is available at# http://www.eclipse.org/legal/epl-v20.html# SPDX-License-Identifier: EPL-2.0# @file _simulation.py# @author Daniel Krajzewicz# @author Jakob Erdmann# @author Michael Behrisch# @date 2011-03-15# @version $Id$from __future__ import absolute_importimport structimport collectionsimport warningsfrom . import constants as tcfrom .domain import Domainfrom .storage import StorageStage = collections.namedtuple('Stage', ['stageType', 'line', 'destStop', 'edges', 'travelTime', 'cost', 'intended', 'depart'])def _readStage(result): # compound size and type _, _, stageType = result.read("!iBi") result.read("!B") # Type line = result.readString() result.read("!B") # Type destStop = result.readString() result.read("!B") # Type edges = result.readStringList() _, travelTime, _, cost = result.read("!BdBd") result.read("!B") # Type intended = result.readString() result.read("!B") # Type depart = result.readDouble() return Stage(stageType, line, destStop, edges, travelTime, cost, intended, depart)_RETURN_VALUE_FUNC = &#123;tc.VAR_TIME: Storage.readDouble, tc.VAR_TIME_STEP: Storage.readInt, tc.VAR_LOADED_VEHICLES_NUMBER: Storage.readInt, tc.VAR_LOADED_VEHICLES_IDS: Storage.readStringList, tc.VAR_DEPARTED_VEHICLES_NUMBER: Storage.readInt, tc.VAR_DEPARTED_VEHICLES_IDS: Storage.readStringList, tc.VAR_ARRIVED_VEHICLES_NUMBER: Storage.readInt, tc.VAR_ARRIVED_VEHICLES_IDS: Storage.readStringList, tc.VAR_PARKING_STARTING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_PARKING_STARTING_VEHICLES_IDS: Storage.readStringList, tc.VAR_PARKING_ENDING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_PARKING_ENDING_VEHICLES_IDS: Storage.readStringList, tc.VAR_STOP_STARTING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_STOP_STARTING_VEHICLES_IDS: Storage.readStringList, tc.VAR_STOP_ENDING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_STOP_ENDING_VEHICLES_IDS: Storage.readStringList, tc.VAR_COLLIDING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_COLLIDING_VEHICLES_IDS: Storage.readStringList, tc.VAR_EMERGENCYSTOPPING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_EMERGENCYSTOPPING_VEHICLES_IDS: Storage.readStringList, tc.VAR_MIN_EXPECTED_VEHICLES: Storage.readInt, tc.VAR_BUS_STOP_WAITING: Storage.readInt, tc.VAR_TELEPORT_STARTING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_TELEPORT_STARTING_VEHICLES_IDS: Storage.readStringList, tc.VAR_TELEPORT_ENDING_VEHICLES_NUMBER: Storage.readInt, tc.VAR_TELEPORT_ENDING_VEHICLES_IDS: Storage.readStringList, tc.VAR_DELTA_T: Storage.readDouble, tc.VAR_NET_BOUNDING_BOX: Storage.readShape&#125;class SimulationDomain(Domain): def __init__(self): Domain.__init__(self, "simulation", tc.CMD_GET_SIM_VARIABLE, tc.CMD_SET_SIM_VARIABLE, tc.CMD_SUBSCRIBE_SIM_VARIABLE, tc.RESPONSE_SUBSCRIBE_SIM_VARIABLE, tc.CMD_SUBSCRIBE_SIM_CONTEXT, tc.RESPONSE_SUBSCRIBE_SIM_CONTEXT, _RETURN_VALUE_FUNC) def getTime(self): """getTime() -&gt; double Returns the current simulation time in s. """ return self._getUniversal(tc.VAR_TIME) def step(self, time=0.): """step(double) -&gt; None Make a simulation step and simulate up to the given sim time (in seconds). If the given value is 0 or absent, exactly one step is performed. Values smaller than or equal to the current sim time result in no action. """ return self._connection.simulationStep(time) def getCurrentTime(self): """getCurrentTime() -&gt; integer Returns the current simulation time in ms. """ # we should raise the awareness by removing the DeprecationWarning category below after 1.0 warnings.warn("getCurrentTime is deprecated, please use getTime which returns floating point seconds", DeprecationWarning, stacklevel=2) return self._getUniversal(tc.VAR_TIME_STEP) def getLoadedNumber(self): """getLoadedNumber() -&gt; integer Returns the number of vehicles which were loaded in this time step. """ return self._getUniversal(tc.VAR_LOADED_VEHICLES_NUMBER) def getLoadedIDList(self): """getLoadedIDList() -&gt; list(string) Returns a list of ids of vehicles which were loaded in this time step. """ return self._getUniversal(tc.VAR_LOADED_VEHICLES_IDS) def getDepartedNumber(self): """getDepartedNumber() -&gt; integer Returns the number of vehicles which departed (were inserted into the road network) in this time step. """ return self._getUniversal(tc.VAR_DEPARTED_VEHICLES_NUMBER) def getDepartedIDList(self): """getDepartedIDList() -&gt; list(string) Returns a list of ids of vehicles which departed (were inserted into the road network) in this time step. """ return self._getUniversal(tc.VAR_DEPARTED_VEHICLES_IDS) def getArrivedNumber(self): """getArrivedNumber() -&gt; integer Returns the number of vehicles which arrived (have reached their destination and are removed from the road network) in this time step. """ return self._getUniversal(tc.VAR_ARRIVED_VEHICLES_NUMBER) def getArrivedIDList(self): """getArrivedIDList() -&gt; list(string) Returns a list of ids of vehicles which arrived (have reached their destination and are removed from the road network) in this time step. """ return self._getUniversal(tc.VAR_ARRIVED_VEHICLES_IDS) def getParkingStartingVehiclesNumber(self): """getParkingStartingVehiclesNumber() -&gt; integer . """ return self._getUniversal(tc.VAR_PARKING_STARTING_VEHICLES_NUMBER) def getParkingStartingVehiclesIDList(self): """getParkingStartingVehiclesIDList() -&gt; list(string) . """ return self._getUniversal(tc.VAR_PARKING_STARTING_VEHICLES_IDS) def getParkingEndingVehiclesNumber(self): """getParkingEndingVehiclesNumber() -&gt; integer . """ return self._getUniversal(tc.VAR_PARKING_ENDING_VEHICLES_NUMBER) def getParkingEndingVehiclesIDList(self): """getParkingEndingVehiclesIDList() -&gt; list(string) . """ return self._getUniversal(tc.VAR_PARKING_ENDING_VEHICLES_IDS) def getStopStartingVehiclesNumber(self): """getStopStartingVehiclesNumber() -&gt; integer . """ return self._getUniversal(tc.VAR_STOP_STARTING_VEHICLES_NUMBER) def getStopStartingVehiclesIDList(self): """getStopStartingVehiclesIDList() -&gt; list(string) . """ return self._getUniversal(tc.VAR_STOP_STARTING_VEHICLES_IDS) def getStopEndingVehiclesNumber(self): """getStopEndingVehiclesNumber() -&gt; integer . """ return self._getUniversal(tc.VAR_STOP_ENDING_VEHICLES_NUMBER) def getStopEndingVehiclesIDList(self): """getStopEndingVehiclesIDList() -&gt; list(string) . """ return self._getUniversal(tc.VAR_STOP_ENDING_VEHICLES_IDS) def getCollidingVehiclesNumber(self): """getCollidingVehiclesNumber() -&gt; integer Return number of vehicles involved in a collision (typically 2 per collision). """ return self._getUniversal(tc.VAR_COLLIDING_VEHICLES_NUMBER) def getCollidingVehiclesIDList(self): """getCollidingVehiclesIDList() -&gt; list(string) Return Ids of vehicles involved in a collision (typically 2 per collision). """ return self._getUniversal(tc.VAR_COLLIDING_VEHICLES_IDS) def getEmergencyStoppingVehiclesNumber(self): """getEmergencyStoppingVehiclesNumber() -&gt; integer Return number of vehicles that performed an emergency stop in the last step """ return self._getUniversal(tc.VAR_EMERGENCYSTOPPING_VEHICLES_NUMBER) def getEmergencyStoppingVehiclesIDList(self): """getEmergencyStoppingVehiclesIDList() -&gt; list(string) Return Ids of vehicles that peformed an emergency stop in the last step """ return self._getUniversal(tc.VAR_EMERGENCYSTOPPING_VEHICLES_IDS) def getMinExpectedNumber(self): """getMinExpectedNumber() -&gt; integer Returns the number of vehicles which are in the net plus the ones still waiting to start. This number may be smaller than the actual number of vehicles still to come because of delayed route file parsing. If the number is 0 however, it is guaranteed that all route files have been parsed completely and all vehicles have left the network. """ return self._getUniversal(tc.VAR_MIN_EXPECTED_VEHICLES) def getBusStopWaiting(self, stopID): """getBusStopWaiting() -&gt; integer Get the total number of waiting persons at the named bus stop. """ return self._getUniversal(tc.VAR_BUS_STOP_WAITING, stopID) def getStartingTeleportNumber(self): """getStartingTeleportNumber() -&gt; integer Returns the number of vehicles which started to teleport in this time step. """ return self._getUniversal(tc.VAR_TELEPORT_STARTING_VEHICLES_NUMBER) def getStartingTeleportIDList(self): """getStartingTeleportIDList() -&gt; list(string) Returns a list of ids of vehicles which started to teleport in this time step. """ return self._getUniversal(tc.VAR_TELEPORT_STARTING_VEHICLES_IDS) def getEndingTeleportNumber(self): """getEndingTeleportNumber() -&gt; integer Returns the number of vehicles which ended to be teleported in this time step. """ return self._getUniversal(tc.VAR_TELEPORT_ENDING_VEHICLES_NUMBER) def getEndingTeleportIDList(self): """getEndingTeleportIDList() -&gt; list(string) Returns a list of ids of vehicles which ended to be teleported in this time step. """ return self._getUniversal(tc.VAR_TELEPORT_ENDING_VEHICLES_IDS) def getDeltaT(self): """getDeltaT() -&gt; double Returns the length of one simulation step in seconds """ return self._getUniversal(tc.VAR_DELTA_T) def getNetBoundary(self): """getNetBoundary() -&gt; ((double, double), (double, double)) The boundary box of the simulation network. """ return self._getUniversal(tc.VAR_NET_BOUNDING_BOX) def convert2D(self, edgeID, pos, laneIndex=0, toGeo=False): posType = tc.POSITION_2D if toGeo: posType = tc.POSITION_LON_LAT self._connection._beginMessage(tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "", 1 + 4 + 1 + 4 + len(edgeID) + 8 + 1 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._packString(edgeID, tc.POSITION_ROADMAP) self._connection._string += struct.pack("!dBBB", pos, laneIndex, tc.TYPE_UBYTE, posType) return self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "").read("!dd") def convert3D(self, edgeID, pos, laneIndex=0, toGeo=False): posType = tc.POSITION_3D if toGeo: posType = tc.POSITION_LON_LAT_ALT self._connection._beginMessage(tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "", 1 + 4 + 1 + 4 + len(edgeID) + 8 + 1 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._packString(edgeID, tc.POSITION_ROADMAP) self._connection._string += struct.pack("!dBBB", pos, laneIndex, tc.TYPE_UBYTE, posType) return self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "").read("!ddd") def convertRoad(self, x, y, isGeo=False): posType = tc.POSITION_2D if isGeo: posType = tc.POSITION_LON_LAT self._connection._beginMessage( tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "", 1 + 4 + 1 + 8 + 8 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._string += struct.pack("!Bdd", posType, x, y) self._connection._string += struct.pack("!BB", tc.TYPE_UBYTE, tc.POSITION_ROADMAP) result = self._connection._checkResult( tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "") return result.readString(), result.readDouble(), result.read("!B")[0] def convertGeo(self, x, y, fromGeo=False): fromType = tc.POSITION_2D toType = tc.POSITION_LON_LAT if fromGeo: fromType = tc.POSITION_LON_LAT toType = tc.POSITION_2D self._connection._beginMessage( tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "", 1 + 4 + 1 + 8 + 8 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 2) self._connection._string += struct.pack("!Bdd", fromType, x, y) self._connection._string += struct.pack("!BB", tc.TYPE_UBYTE, toType) return self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.POSITION_CONVERSION, "").read("!dd") def getDistance2D(self, x1, y1, x2, y2, isGeo=False, isDriving=False): """getDistance2D(double, double, double, double, boolean, boolean) -&gt; double Returns the distance between the two coordinate pairs (x1,y1) and (x2,y2) If isGeo=True, coordinates are interpreted as longitude and latitude rather than cartesian coordinates in meters. If isDriving=True, the coordinates are mapped onto the road network and the length of the shortest route in the network is returned. Otherwise, the straight-line distance is returned. """ posType = tc.POSITION_2D if isGeo: posType = tc.POSITION_LON_LAT distType = tc.REQUEST_AIRDIST if isDriving: distType = tc.REQUEST_DRIVINGDIST self._connection._beginMessage( tc.CMD_GET_SIM_VARIABLE, tc.DISTANCE_REQUEST, "", 1 + 4 + 1 + 8 + 8 + 1 + 8 + 8 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 3) self._connection._string += struct.pack("!Bdd", posType, x1, y1) self._connection._string += struct.pack( "!BddB", posType, x2, y2, distType) return self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.DISTANCE_REQUEST, "").readDouble() def getDistanceRoad(self, edgeID1, pos1, edgeID2, pos2, isDriving=False): """getDistanceRoad(string, double, string, double, boolean) -&gt; double Reads two positions on the road network and an indicator whether the air or the driving distance shall be computed. Returns the according distance. """ distType = tc.REQUEST_AIRDIST if isDriving: distType = tc.REQUEST_DRIVINGDIST self._connection._beginMessage(tc.CMD_GET_SIM_VARIABLE, tc.DISTANCE_REQUEST, "", 1 + 4 + 1 + 4 + len(edgeID1) + 8 + 1 + 1 + 4 + len(edgeID2) + 8 + 1 + 1) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 3) self._connection._packString(edgeID1, tc.POSITION_ROADMAP) self._connection._string += struct.pack("!dB", pos1, 0) self._connection._packString(edgeID2, tc.POSITION_ROADMAP) self._connection._string += struct.pack("!dBB", pos2, 0, distType) return self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.DISTANCE_REQUEST, "").readDouble() def findRoute(self, fromEdge, toEdge, vType="", depart=-1., routingMode=0): self._connection._beginMessage(tc.CMD_GET_SIM_VARIABLE, tc.FIND_ROUTE, "", (1 + 4 + 1 + 4 + len(fromEdge) + 1 + 4 + len(toEdge) + 1 + 4 + len(vType) + 1 + 8 + 1 + 4)) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 5) self._connection._packString(fromEdge) self._connection._packString(toEdge) self._connection._packString(vType) self._connection._string += struct.pack("!BdBi", tc.TYPE_DOUBLE, depart, tc.TYPE_INTEGER, routingMode) return _readStage(self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.FIND_ROUTE, "")) def findIntermodalRoute(self, fromEdge, toEdge, modes="", depart=-1., routingMode=0, speed=-1., walkFactor=-1., departPos=0., arrivalPos=tc.INVALID_DOUBLE_VALUE, departPosLat=0., pType="", vType="", destStop=""): self._connection._beginMessage(tc.CMD_GET_SIM_VARIABLE, tc.FIND_INTERMODAL_ROUTE, "", 1 + 4 + 1 + 4 + len(fromEdge) + 1 + 4 + len(toEdge) + 1 + 4 + len(modes) + 1 + 8 + 1 + 4 + 1 + 8 + 1 + 8 + 1 + 8 + 1 + 8 + 1 + 8 + 1 + 4 + len(pType) + 1 + 4 + len(vType) + 1 + 4 + len(destStop)) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 13) self._connection._packString(fromEdge) self._connection._packString(toEdge) self._connection._packString(modes) self._connection._string += struct.pack("!BdBi", tc.TYPE_DOUBLE, depart, tc.TYPE_INTEGER, routingMode) self._connection._string += struct.pack("!BdBd", tc.TYPE_DOUBLE, speed, tc.TYPE_DOUBLE, walkFactor) self._connection._string += struct.pack("!BdBd", tc.TYPE_DOUBLE, departPos, tc.TYPE_DOUBLE, arrivalPos) self._connection._string += struct.pack("!Bd", tc.TYPE_DOUBLE, departPosLat) self._connection._packString(pType) self._connection._packString(vType) self._connection._packString(destStop) answer = self._connection._checkResult(tc.CMD_GET_SIM_VARIABLE, tc.FIND_INTERMODAL_ROUTE, "") result = [] for c in range(answer.readInt()): answer.read("!B") # Type result.append(_readStage(answer)) return result def clearPending(self, routeID=""): self._connection._beginMessage(tc.CMD_SET_SIM_VARIABLE, tc.CMD_CLEAR_PENDING_VEHICLES, "", 1 + 4 + len(routeID)) self._connection._packString(routeID) self._connection._sendExact() def saveState(self, fileName): self._connection._beginMessage(tc.CMD_SET_SIM_VARIABLE, tc.CMD_SAVE_SIMSTATE, "", 1 + 4 + len(fileName)) self._connection._packString(fileName) self._connection._sendExact() def subscribe(self, varIDs=(tc.VAR_DEPARTED_VEHICLES_IDS,), begin=0, end=2**31 - 1): """subscribe(list(integer), double, double) -&gt; None Subscribe to one or more simulation values for the given interval. """ Domain.subscribe(self, "", varIDs, begin, end) def getSubscriptionResults(self): """getSubscriptionResults() -&gt; dict(integer: &lt;value_type&gt;) Returns the subscription results for the last time step. It is not possible to retrieve older subscription results than the ones from the last time step. """ return Domain.getSubscriptionResults(self, "")SimulationDomain() 0x05 gui123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134# -*- coding: utf-8 -*-# Eclipse SUMO, Simulation of Urban MObility; see https://eclipse.org/sumo# Copyright (C) 2011-2018 German Aerospace Center (DLR) and others.# This program and the accompanying materials# are made available under the terms of the Eclipse Public License v2.0# which accompanies this distribution, and is available at# http://www.eclipse.org/legal/epl-v20.html# SPDX-License-Identifier: EPL-2.0# @file _gui.py# @author Michael Behrisch# @author Daniel Krajzewicz# @date 2011-03-09# @version $Id$from __future__ import absolute_importimport structfrom .domain import Domainfrom .storage import Storagefrom . import constants as tc_RETURN_VALUE_FUNC = &#123;tc.VAR_VIEW_ZOOM: Storage.readDouble, tc.VAR_VIEW_OFFSET: lambda result: result.read("!dd"), tc.VAR_VIEW_SCHEMA: Storage.readString, tc.VAR_VIEW_BOUNDARY: Storage.readShape, tc.VAR_HAS_VIEW: lambda result: bool(result.read("!i")[0])&#125;class GuiDomain(Domain): DEFAULT_VIEW = 'View #0' def __init__(self): Domain.__init__(self, "gui", tc.CMD_GET_GUI_VARIABLE, tc.CMD_SET_GUI_VARIABLE, tc.CMD_SUBSCRIBE_GUI_VARIABLE, tc.RESPONSE_SUBSCRIBE_GUI_VARIABLE, tc.CMD_SUBSCRIBE_GUI_CONTEXT, tc.RESPONSE_SUBSCRIBE_GUI_CONTEXT, _RETURN_VALUE_FUNC) def getZoom(self, viewID=DEFAULT_VIEW): """getZoom(string): -&gt; double Returns the current zoom factor. """ return self._getUniversal(tc.VAR_VIEW_ZOOM, viewID) def getOffset(self, viewID=DEFAULT_VIEW): """getOffset(string): -&gt; (double, double) Returns the x and y offset of the center of the current view. """ return self._getUniversal(tc.VAR_VIEW_OFFSET, viewID) def getSchema(self, viewID=DEFAULT_VIEW): """getSchema(string): -&gt; string Returns the name of the current coloring scheme. """ return self._getUniversal(tc.VAR_VIEW_SCHEMA, viewID) def getBoundary(self, viewID=DEFAULT_VIEW): """getBoundary(string): -&gt; ((double, double), (double, double)) Returns the coordinates of the lower left and the upper right corner of the currently visible view. """ return self._getUniversal(tc.VAR_VIEW_BOUNDARY, viewID) def setZoom(self, viewID, zoom): """setZoom(string, double) -&gt; None Set the current zoom factor for the given view. """ self._connection._sendDoubleCmd( tc.CMD_SET_GUI_VARIABLE, tc.VAR_VIEW_ZOOM, viewID, zoom) def setOffset(self, viewID, x, y): """setOffset(string, double, double) -&gt; None Set the current offset for the given view. """ self._connection._beginMessage( tc.CMD_SET_GUI_VARIABLE, tc.VAR_VIEW_OFFSET, viewID, 1 + 8 + 8) self._connection._string += struct.pack("!Bdd", tc.POSITION_2D, x, y) self._connection._sendExact() def setSchema(self, viewID, schemeName): """setSchema(string, string) -&gt; None Set the current coloring scheme for the given view. """ self._connection._sendStringCmd( tc.CMD_SET_GUI_VARIABLE, tc.VAR_VIEW_SCHEMA, viewID, schemeName) def setBoundary(self, viewID, xmin, ymin, xmax, ymax): """setBoundary(string, double, double, double, double) -&gt; None Set the current boundary for the given view (see getBoundary()). """ self._connection._beginMessage( tc.CMD_SET_GUI_VARIABLE, tc.VAR_VIEW_BOUNDARY, viewID, 1 + 1 + 8 + 8 + 8 + 8) self._connection._string += struct.pack("!BBdddd", tc.TYPE_POLYGON, 2, xmin, ymin, xmax, ymax) self._connection._sendExact() def screenshot(self, viewID, filename, width=-1, height=-1): """screenshot(string, string, int, int) -&gt; None Save a screenshot for the given view to the given filename. The fileformat is guessed from the extension, the available formats differ from platform to platform but should at least include ps, svg and pdf, on linux probably gif, png and jpg as well. Width and height of the image can be given as optional parameters. """ self._connection._beginMessage( tc.CMD_SET_GUI_VARIABLE, tc.VAR_SCREENSHOT, viewID, 1 + 4 + 1 + 4 + len(filename) + 1 + 4 + 1 + 4) self._connection._string += struct.pack("!Bi", tc.TYPE_COMPOUND, 3) self._connection._packString(filename) self._connection._string += struct.pack("!BiBi", tc.TYPE_INTEGER, width, tc.TYPE_INTEGER, height) self._connection._sendExact() def trackVehicle(self, viewID, vehID): """trackVehicle(string, string) -&gt; None Start visually tracking the given vehicle on the given view. """ self._connection._sendStringCmd( tc.CMD_SET_GUI_VARIABLE, tc.VAR_TRACK_VEHICLE, viewID, vehID) def hasView(self, viewID=DEFAULT_VIEW): """hasView(string): -&gt; bool Check whether the given view exists. """ return self._getUniversal(tc.VAR_HAS_VIEW, viewID)GuiDomain()]]></content>
      <tags>
        <tag>Summary</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Reinforcement Learning Notes]]></title>
    <url>%2F2019%2F02%2F18%2FReinforcement-Learning-Notes%2F</url>
    <content type="text"><![CDATA[What is RL?Central Idea——RewardIn the math language, reinforcement learning is a process that agent try to maximize its cumulative rewards, which gives us a better result. CategoriesApproach C1 model-free RLQ Learning,Sarsa,Policy Gradients model-based RLQ Learning,Sarsa,Policy Gradients,Imagenery Approach C2 Policy-Based RLPolicy Gradients Value-Based RLQ Learning,Sarsa Mixture MethodActor-Critic:take action according to the probability, and accelerate the learning process by reward its action. Monte-Carlo vs TD Learning Monte-Carlo updateWhen reaching a “terminal state”, the agents looks at the total cumulative reward to see how well it did. That means agent get the rewards only when an eposode end. Then, the agent could start a new game with the added knowledge, and it can make better decision with each iteration. Just like the film called “Edge of Tomorrow” that was showed on 2014. One of the representive of Motoe-Carlo update is Policy Gradients Temporal-Differencr update:Learning at each time stepTD update, just as its name implies, will not wait until the end of the episode to update the maximun expected future reward estimation.Instead, it only wait until the next time step to update the value estimates. Q Learning,Sarsa Exploration/Exploitation trade off On-PolicySarsa Off-PolicyQ Learning,Deep Q Network Why are we use Reinforcement LearningRL is a branch of Machine Learning Family.By using reinforcement learning, we can teach the computer to play games and make it an excelent player.The classic pratice program to learn RL can be Maze,Cartpole and Mountain car Requirement OpenAI gym Tensorflow numpy,pandasuse for data process,read data from table and write data on table. Matplotlibvisualize the error, or something interesting ML Tkinteruse for simulating the environment Dive into Q-LearningObjetive What Q-Learning is?Q-Learning is a method that record the reward of agents’ action(Q value).Each action in some status has some value Q(s,a), meaning the value of action “a” in status “s”. we often use a table called Q Table to record the value of action in some status “s”, and the action we will take in the moment next to “s” depends on Q Table. How to implement it? Dive into Deep Q Neural Network What is Deep Q learning? What are the best strategies to use with DQL? How to handle the temporal limitation problem Use convolution Strategies to improve DQN fixed Q-targets double DQNs dueling DQN (aka DDQN) Prioritized Experience Replay (aka PER) Example Frozen Lake Doomhttps://en.wikipedia.org/wiki/Doom_%281993_video_game%29 Reference CourseRLsylabus:https://simoninihttps://medium.freecodecamp.org/an-introduction-to-deep-q-learning-lets-play-doom-54d02d8017d8mas.github.io/Deep_reinforcement_learning_Course/rl introduction:https://medium.freecodecamp.org/an-introduction-to-reinforcement-learning-4339519de419Diving deeper into Reinforcement Learning with Q-Learning:https://medium.freecodecamp.org/diving-deeper-into-reinforcement-learning-with-q-learning-c18d0db58efeAn introduction to Deep Q-Learning: let’s play Doom:https://medium.freecodecamp.org/an-introduction-to-deep-q-learning-lets-play-doom-54d02d8017d8Improvements in Deep Q Learning: Dueling Double DQN, Prioritized Experience Replay, and fixed Q-targets:https://medium.freecodecamp.org/improvements-in-deep-q-learning-dueling-double-dqn-prioritized-experience-replay-and-fixed-58b130cc5682An introduction to Policy Gradients with Doom and Cartpole:https://medium.freecodecamp.org/an-introduction-to-policy-gradients-with-cartpole-and-doom-495b5ef2207f OtherBellman equation:https://en.wikipedia.org/wiki/Bellman_equationConvolution:https://medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721]]></content>
  </entry>
  <entry>
    <title><![CDATA[Information_Technology_BookMarks]]></title>
    <url>%2F2019%2F02%2F18%2FInformation-Technology-BookMarks%2F</url>
    <content type="text"><![CDATA[大牛博客（网上）架构||UML系统分析建模谭云杰：https://blog.csdn.net/coffeewoo 大牛博客（岳麓）望将：https://csuwangj.github.io/JDchen：http://www.cnblogs.com/0xJDchen/sx：https://blog.csdn.net/sx_csu2016swhttps://java-mzd.iteye.com/]]></content>
      <tags>
        <tag>Summary</tag>
        <tag>BookMark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下一个浪潮]]></title>
    <url>%2F2019%2F02%2F18%2F%E6%B5%AA%E6%BD%AE%2F</url>
    <content type="text"><![CDATA[新能源生物和制药技术IT医疗新绿色农业电子商务无线业务O2O]]></content>
      <categories>
        <category>随便说说</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SUMO notes]]></title>
    <url>%2F2019%2F02%2F16%2FSUMO-notes%2F</url>
    <content type="text"><![CDATA[了解用途https://www.dlr.de/ts/en/desktopdefault.aspx/tabid-9883/16931_read-41000/ 相关论文 Optimized Sensor Network and Multi-Agent DecisionSupport for Smart Traffic Light Management：https://pdfs.semanticscholar.org/59e8/ceba039b8e33d1eb2c66c4595bf474bf1dc8.pdf Optimazation of Traffic Light Controlling with Reinforcement Learning COMP 3211 Final Project, Group 9, Fall 2017-2018：https://home.cse.ust.hk/~yqsong/teaching/comp3211/projects/2017Fall/G17.pdf Uppaal Stratego for Intelligent Traffic Lights ：http://people.cs.aau.dk/~muniz/strategoTraffic.pdf Reinforcement Learning for Traffic Optimization：http://cs229.stanford.edu/proj2016spr/report/047.pdf 教程学习平台 Wiki Tutorialhttps://sumo.dlr.de/wiki/SUMO_User_Documentation TraCI在线互动https://sumo.dlr.de/wiki/TraCI TraCI4Traffic Lightshttps://sumo.dlr.de/wiki/Tutorials/TraCI4Traffic_Lights DLR YoutubeDynamic Traffic Light Simulation：https://www.youtube.com/watch?v=s6tfcSIBjsU Other Plamformshttps://wenku.baidu.com/view/dd44decec8d376eeaeaa31a1.html常用命令 netconvert可将来源于OpenStreetMap的.osm文件转成.net.xml文件，生成交通场景； polyconvert生成.poly.xml文件配置文件 .con.xml .net.xml tlLogic .rou.xml .nod.xml .edg.xml .det.xml .sumocfg总配置文件，指定网络、路线等配置文件。如： 常用python模块 traci TLS（Traffic Light Signal for a sumo network）https://sumo.dlr.de/daily/pydoc/sumolib.net.html#TLS TLSProgram tensorflowtensorflow官网：https://www.tensorflow.org/安装后numpy出现问题：更新numpy至1.16解决此错误：https://github.com/alpacahq/pylivetrader/issues/73更新模块命令示例：pip3 install -U packageName rl强化学习介绍：https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/安装过程中出现问题：解决办法：pip3 install keras-rlhttps://pypi.org/project/keras-rl/ Rayhttps://rise.cs.berkeley.edu/projects/ray/Ray是加州伯克利分校的RISE实验室退出的一个分布式执行平台。Ray RLib是一个可扩展的强化学习库，可在多个机器上运行与openAI gym完全兼容，支持Tensorflow和PyTorch。Ray.tune是一个高效的分布式超参数搜索库，提供了API以执行深度学习、强化学习和其它计算密集型任务。安装过程出现问题：https://github.com/ray-project/ray/issues/2683见以上issue，目前ray模块不支持windows，于Linux or windows的Linux子系统可安装https://pypi.org/simple/ray/使用Ray中的DQNAgent时，报错’PolicyEvaluator’ object has no attribute ‘sampler’ keras Traci APIconnection重点函数 simulationStep(self, step=0.) 123Make a simulation step and simulate up to the given second in sim time.If the given value is 0 or absent, exactly one step is performed.Values smaller than or equal to the current sim time result in no action. simulation重点函数 getCurrentTime(self) 123 getCurrentTime() -&gt; integerReturns the current simulation time in ms. getLoadedNumber(self) 123getLoadedNumber() -&gt; integerReturns the number of vehicles which were loaded in this time step. lane重点函数 getLastStepVehicleNumber(self, laneID) 123getLastStepVehicleNumber(string) -&gt; integerReturns the total number of vehicles for the last time step on the given lane. getLastStepHaltingNumber(self, laneID) 1234getLastStepHaltingNumber(string) -&gt; integerReturns the total number of halting vehicles for the last time step on the given lane.A speed of less than 0.1 m/s is considered a halt. vehicle重点函数 getWaitingTime(self, vehID) 123456getWaitingTime() -&gt; double计算车辆等待时间（若车辆有意停在服务区/停车区，则不作等待时间算）The waiting time of a vehicle is defined as the time (in seconds) spent with aspeed below 0.1m/s since the last time it was faster than 0.1m/s.(basically, the waiting time of a vehicle is reset to 0 every time it moves).A vehicle that is stopping intentionally with a &lt;stop&gt; does not accumulate waiting time. getAccumulatedWaitingTime(self, vehID) 1234getAccumulatedWaitingTime() -&gt; double计算一定时间间隔内某车的累计等待时间，时间间隔的以waiting-time-memory设置The accumulated waiting time of a vehicle collects the vehicle&apos;s waiting time over acertain time interval (interval length is set per option &apos;--waiting-time-memory&apos;) trafficlight重点函数 getIDList(self) 123getIDList() -&gt; list(string)Returns a list of all objects in the network. getPhase(self,tlsID) 1234getPhase(string) -&gt; integer注意！此函数返回的是相位索引！Returns the index of the current phase within the list of all phases of the current program. getPhaseDuration(self, tlsID) 1234getPhaseDuration(string) -&gt; double返回当前相位的总共持续时间Returns the total duration of the current phase (in seconds). This value is notaffected by the elapsed or remaining duration of the current phase. setPhase(self,tlsID,index) 1234setPhase(string, integer) -&gt; NoneSwitches to the phase with the given index in the list of all phasesfor the current program. setPhaseDuration(self,tlsID,phaseDuration) 1234setPhaseDuration(string, double) -&gt; None设置当前相位的剩余持续时间（秒），对之后周期的此相位的无影响！Set the remaining phase duration of the current phase in seconds.This value has no effect on subsquent repetitions of this phase. getControlledLanes(self, tlsID) 123getControlledLanes(string) -&gt; cReturns the list of lanes which are controlled by the named traffic light. setCompleteRedYellowGreenDefinition(self, tlsID, tls) 1234setCompleteRedYellowGreenDefinition(string, Logic) -&gt; NoneSets a new program for the given tlsID from a Logic object.See getCompleteRedYellowGreenDefinition. traci重点类构造函数 Phase 123456789101112class Phase: def __init__(self, duration, state, minDur=-1, maxDur=-1, next=-1): self.duration = duration self.state = state self.minDur = minDur # minimum duration (only for actuated tls) self.maxDur = maxDur # maximum duration (only for actuated tls) self.next = next def __repr__(self): return ("Phase(duration=%s, state='%s', minDur=%s, maxDur=%s, next=%s)" % (self.duration, self.state, self.minDur, self.maxDur, self.next)) Logic 123456789101112131415161718192021222324252627class Logic: def __init__(self, programID, type, currentPhaseIndex, phases=None, subParameter=None): self.programID = programID self.type = type self.currentPhaseIndex = currentPhaseIndex self.phases = phases if phases is not None else [] self.subParameter = subParameter if subParameter is not None else &#123;&#125; def getPhases(self): return self.phases def getSubID(self): return self.programID def getType(self): return self.type def getParameters(self): return self.subParameter def getParameter(self, key, default=None): return self.subParameter.get(key, default) def __repr__(self): return ("Logic(programID='%s', type=%s, currentPhaseIndex=%s, phases=%s, subParameter=%s)" % (self.programID, self.type, self.currentPhaseIndex, self.phases, self.subParameter)) 自定义类结构1234567891011121314151617class TrafficSignal: def __init__(self, env, ts_id, delta_time, min_green, max_green, phases): self.id = ts_id self.env = env self.time_on_phase = 0 self.delta_time = delta_time self.min_green = min_green self.max_green = max_green self.green_phase = 0 self.num_green_phases = len(phases) // 2 self.edges = self._compute_edges() self.edges_capacity = self._compute_edges_capacity() logic = traci.trafficlight.Logic("ProgramID", 0, 00, phases) traci.trafficlight.setCompleteRedYellowGreenDefinition(self.id, logic)· 自定义计算模块 edges_capacity 1边容量 lane_density 1车道密度 stopped_vehicles_num 123平均停车数新的绿灯相位到来时每条边上的车道在仿真的上一步的停车数之和[sum([traci.lane.getLastStepHaltingNumber(lane) for lane in self.edges[p]]) for p in range(self.num_green_phases)] road_waiting_time 1道路平均等待/延迟时间 total_stopped 1总共停车次数 ……………………………………………… 模块封装 update_phase 1改变相位 waiting_time_reward 1基于车均等待/延迟时间的奖励函数 queue_average_reward 1基于平均排队长度的奖励函数 数据 https://sourceforge.net/projects/sumo/files/traffic_data/scenarios/ http://opendata.dc.gov/datasets/31ccad579ec449938c13a0ac82c9f46e_16 https://sumo.dlr.de/wiki/Data/Scenarios论文阅读Towards a unified Evaluation of Traffic Light Algorithms keywordstraffic lights evaluation，traffic simulation，performance metrics metrics to monitor the traffic light algorithmswaiting time,queue size,delay,travel time 实践遇到问题 没有设置SUMO_HOME如在linux系统中，export “SUMO_HOME=/usr/share/sumo”即可 Could not access configuration ‘XXXXX配置文件XXXXX’ Error: Answered with error to command 0xa2: Traffic light ‘0’ is not known ImportError: cannot import name ‘Timestamp’ from ‘pandas.lib’解决办法：删除下图中的.lib Could not connect to TraCI server at localhost:XXXXX 命令通道 单车道单交叉路口python3 experiments/ql_single-intersection.py -route /home/zhuge/Documents/TrafficSim/sumo-rl/nets/single-intersection/single-intersection.rou.xml -gui 双车道单交叉路口python3 experiments/ql_single-intersection.py -route /home/zhuge/Documents/TrafficSim/sumo-rl/nets/2way-single-intersection/single-intersection.rou.xml -gui 双车道4*4路网——并行计算DQN 双车道4*4路网——并行计算A 强化学习强化学习大体流程重点 状态空间定义状态空间即环境状态的量化描述，针对交通灯问题，可把状态空间定义为车辆密度 动作空间定义 转移函数设计 奖励函数设计针对此问题，交通灯优化的程度可以从路口的车辆平均等待时间/车均延迟/排队长度等方面反映出来，故奖励函数可围绕这几个方面设计.仿真参数 seconds仿真程序持续秒数，固定秒数，一般时间长一点会更体现效果 alpha学习率 gamma折扣率 epsilon探索率 reward奖励函数， runs示例命令：python3 experiments/ql_2way-single-intersection.py -route /home/zhuge/Documents/TrafficSim/sumo-rl/nets/2way-single-intersection/single-intersection.rou.xml -g 0.9 -r waitingtime -runs 10openAI库gymgym是一个提供强化学习环境的类库https://gym.openai.com/，内置的经典环境有CartPole-v0、MountainCar-v0（https://gym.openai.com/envs/MountainCar-v0/） MultiAgentEnvhttps://github.com/openai/multiagent-particle-envs参数搜索Parameter Server for Distributed Machine Learning：http://www.cs.cmu.edu/~muli/file/ps.pdf统计分析评价交通灯算法优劣示例命令：python3 plot.py -f 2way-single-intersection\a3cteste9.csv v0.1闭环步骤输出起始相位和终止相位小结已有的交通信号控制系统/算法 UTOPIAhttps://www.swarco.com/products/software/urban-traffic-management/utopia 相关可参考项目 https://github.com/flow-project/flow https://github.com/sumoprojects/SumoEasyMiner https://github.com/JDGlick/sumo_reinforcement_learning https://github.com/lcodeca/MoSTScenario https://github.com/LucasAlegre/sumo-rl/tree/master/experiments https://github.com/Starofall/CrowdNav https://github.com/openai/universe 拓展阅读Ray：https://www.jiqizhixin.com/articles/2018-01-10-2RLlib简介：一个可组合和可扩展的强化学习计算库：https://www.oreilly.com.cn/ideas/?p=1503 Berkeley RISE：https://rise.cs.berkeley.edu/ 15行代码实现一个参数服务器：https://ray-project.github.io/2018/07/15/parameter-server-in-fifteen-lines.htmlFaulty Reward Fuction in the wild：https://blog.openai.com/faulty-reward-functions/腾讯开源高性能计算平台Angel：https://www.jiqizhixin.com/articles/2016-12-20-4滴滴参数服务器：https://www.ctolib.com/topics-132722.html 任务 采用已有奖励函数，实现强化学习若干回合，输出各个回合的首尾状态各信号相位配时以及得分（停车次数、等待时间、排队长度），可视化展现，看随着强化学习次数的增加表现是否有越来越好的趋势 更新建立函数，参考网上论文（以前看过的），找一种看起来合理的更改看能否提高表现]]></content>
      <tags>
        <tag>Summary</tag>
        <tag>SUMO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scrapy For Distributed Spider Summary]]></title>
    <url>%2F2019%2F02%2F11%2FScrapy%20For%20Distributed%20Spider%20Summary%2F</url>
    <content type="text"><![CDATA[Scrapy For Distributed Spider Summary前期准备官网：https://scrapy.org/ 开发环境 Pycharm virtualenv创建python虚拟环境豆瓣源：https://pypi.doubanio.com/simple创建虚拟环境：virtualenv -p PYTHON_PATH VITUAL_PAT激活虚拟环境：activate.bat退出虚拟环境：deactivate.bat virtualenvwrapper官网：https://virtualenvwrapper.readthedocs.io/en/latest/管理虚拟环境的工具,windows系统下安装命令为pip install virtualenvwrapper-win添加虚拟环境：mkvirtualenv -p PYTHON.EXE WORK_PATH管理虚拟环境：workon退出虚拟环境：deactivate MySQL Navicathttps://www.navicat.com/en/products/navicat-for-mysql Twistedhttps://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted选择相应的版本，另行安装，否则安装scrapy可能出错，如“Failed building wheel for Twisted” pypiwin32windows环境下需要 pillow使用pipeline读写图片文件需要pip -i https://pypi.douban.com/simple pillow 基础知识技术选型 scrapy vs requests+beautifulsoupscrapy框架基于twisted（异步IO特点），性能较高，scrapy内置的css、xpath selector，本身的功能足以完成beautifulsoup所有功能（bs4是纯python写出来的，scrapy相关功能是由C写的）twisted：https://twistedmatrix.com/trac/常见网页分类？ 静态网页 动态网页 webservice（restapi）爬虫用武之地？ 百度/谷歌类搜索引擎 垂直领域搜索引擎 推荐引擎今日头条 机器学习的数据样本 数据分析金融数据分析、舆情分析 正则表达式维基百科：https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F 特殊字符 字符 意义 备注 ^ 起始字符 . 任意字符 * 出现多次 $ 结尾字符 + 出现至少一次 非贪婪匹配 {10} 限定其前一字符出现频率为10 {10,} 限定其前一字符出现频率为10次以上 {10,20} 限定其前一字符出现频率为10到20次 pattern1\ pattern2 匹配pattern1或pattern2，优先匹配前者 [2134] 其中字符任选其一 [0-9] 区间 [.*] 中括号中的*和.只是单纯的字符 \s \S \w \W \d 数字 [\u4E00-\u9FA5] 汉字unicode编码 … … python apipython有内置模块re用于正则表达式。https://docs.python.org/3/library/re.html 深度优先&amp;&amp;广度优先 网站的树结构网站URl设计是分层的，绘制出URL层次结构图就得到了一棵“树”（一级域名、二级域名、…），针对“树”结构，常用策略就是深度优先和广度优先。但要注意URL环路 深度优先递归 广度优先利用队列 URL去重策略 将访问过的url保存到数据库中效率较低 将访问过的url保存到set中，以o(1)的代价查询url，但占用内存比较大 url经过md5等哈希方法后保存到set中md5将任意长度的url映射到固定长度且不重复的字符串 用bitmap方法，将访问过的url通过hash函数映射到某一位冲突可能较高，将2个url映射到同一个位置 bloomfilter方法对bitmap进行改进，多重hash函数降低冲突https://zh.wikipedia.org/wiki/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8 字符串编码写文件、网络传输时常出现字符串编码相关的错误。采用sys.getdefaultencoding()可得环境默认字符串编码。Window Python3默认utf8，Python2默认ascii。Linux环境下又有所不同。 ASCII美国标准编码，一个字节表示所有英文字符 GB2312两个字节表示一个汉字。Window环境下python默认gb2312编码。 Unicodehttps://zh.wikipedia.org/zh-hans/Unicode将所有语言统一到一套编码，16 bit或32 bit囊括所有字符。如果内容全是英文时，unicode便会比ASCII需要多一倍+的存储空间，传输也需要更多时间。内存中读取文件采用unicode会较简单。 utf-8可变长的编码。把英文表示为一个字节。汉字3个字节。特别生僻的汉字以4-6个字节表示，传输大量英文。文件保存/网络传输时采用utf8更有效率 网络文件下载urllib.request模块下的urlretrieve函数可用于下载远程服务器中的资源。urlretrieve(url, filename=None, reporthook=None, data=None) scrapygithub地址：https://github.com/scrapy/scrapy 安装可直接使用pip进行安装：pip install -i https://pypi.douban.com/simple 开启征程startproject即可建立scrapy项目，可选择模板、自定义模板查看现有模板方式:scrapy genspider –list建立爬虫子任务命令：scrapy genspider SUB_TASK指定模板创建爬虫任务：scrapy genspider -t TEMPLATE_NAME TASK_NAME DOMAIN,如 Spider调试 pycharm debug scrapy shell示例：scrapy shell -s USER_AGENT=”Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36” https://www.lagou.com/jobs/5602462.html xpath选择器官网:https://www.w3.org/TR/1999/REC-xpath-19991116/w3cschool：http://www.w3school.com.cn/xpath/xpath_syntax.ASP 特点&amp;&amp;用途可使用路径表达式在xml和html中进行导航；包含标准函数库；w3c标准 术语 术语 说明 备注 父节点 子节点 同胞节点 先辈节点 后代节点 语法 表达式 说明 备注 article 选取所有article元素的所有子节点 /article 选取根元素article article/a 选取所有属于article的子元素的a节点 //div 选取文档中所有div元素 article//div article下所有div元素 //@class 选取所有名为class的属性 /article/div[1] 属于article子元素的第一个div /article/div[last()] 属于article子元素的最后一个div /article/div[last()-1] //div[@lang] 选择所有拥有lang属性的div元素 //div[@lang=’eng’] 选择所有lang属性为eng的div元素 /div/* 选取所有属于div元素的所有子节点 //* 选取所有元素 //div[@*] 选取所有带属性的div元素 /div/a\ //div/p 选取所有div元素的a和p元素 //span\ //ul 选取文档中的span和ul元素 article/div/p&#124;//span 选取所有属于article元素的div元素的p元素和所有span元素 常用函数 text() extract() extract_first() contains() strip() replace() 注意选取xpath路径时，注意警惕ajax动态生成的标签，推荐使用chrome或firefox中copy xpath功能 css选择器http://www.w3school.com.cn/cssref/css_selectors.ASP 语法 表达式 说明 备注 .classname 选取class为classname的元素 #idname 选取id=idname的元素 div p 选取div元素下的所有p子元素 div+p 选取紧跟在div后的p p和div是兄弟节点 div&gt;p 选取div下第一个子元素p div,p 选取所有名为class的属性 div#container&gt;ul 选择id=container的div元素后的第一个ul元素 ul~p 选择与ul相邻的所有p元素 a[title] 选择所有有title属性的a元素 a[href=”http://www.baidu.com&quot;] 选择href属性为http://www.baidu.com的a元素 a[href*=”baidu”] 选择href属性中包含baidu的a元素 a[href^=”baidu”] 选择href属性中以baidu开头的a元素 a[href$=”baidu”] 选择href属性中以baidu结尾的a元素 input[type=radio]:checked 选择所有处于选中状态的radio div:not(#container) 选取所有id非container的div元素 li:nth-child(3) 选取第三个li元素 tr:nth-child(2n) 第偶数个tr session和cookie自动登录机制理解模拟登陆和网站交互的基础。cookie中包含着标识用户的信息，但还存在隐患，session用于解决此隐患：对用户信息（账号密码等）作一定处理生成session_data存放在服务端，而后返回给客户端一个可用于检索session_data的session_key作为cookie，并设置session过期时间。 cookielib cookJar session HTTP状态码SEO优化需要了解，以免误导搜索引擎 200请求被成功处理 301/302永久性重定向/临时性重定向 403没有权限访问 404表示没有对应的资源。如遇到404页面，爬虫应不对其进行爬取 500服务器错误 503服务器停机或正在维护 selenium模拟cmder在windows下可使用部分linux命令https://cmder.net/ 实战1——爬取伯乐在线所有技术文章需求分析爬取所有技术文章的标题、正文、点赞数、评论数、发表时间、标签 爬取一篇文章的所需内容实现翻页寻找“下一页”的url items设计item即所要爬取的数据项，相当于数据需求 通过pipeline保存数据到mysqlpipeline拦截item，将拦截下的item保存到mysql即可 python库 codecs与普通方式的区别在于文件编码 ItemExporterscrapy自带的item exporter，源码位于scrapy.exporters中，有各种类型的exporter 数据库设计数据库表与item中内容一一对应 数据保存的mysql中需要驱动如mysqlclient，如在ubuntu下还需要sudo apt-get install libmysqlclient-dev,centos下需要sudo yum install python-devel mysql-devel，否则可能安装失败。 异步操作——MySQL连接池上一步中插入mysql的方法有较大局限，scrapy解析速度大于数据库插入速度，所以可能会产生阻塞，采用twisted框架可较方便地实现MySQL插入异步化 scrapi item loader机制提供一个容器方便模块化，方便后期维护item 常见错误 ValueError：Missing scheme in request url：h 实战2——拉勾网职位信息爬取Crawlspider剖析https://docs.scrapy.org/en/latest/ 需求分析及策略以 https://www.lagou.com/jobs/5602462.html 为例，需要公司名称、招聘职位、薪资、工作城市、学历要求、工作经验要求、工作类型、职位诱惑、职位描述等数据 公司名称公司名称写在一个logo的alt属性内 招聘职位 工作要求可见薪资范围、工作城市、学历要求、工作经验要求、工作类型等都在此可获得，在scrapy shell中测试如下： 职位信息发布时间 标签 职位诱惑 职位描述 工作地址 Item Loader及数据入库拉勾网目前会根据user-agent判断是否为爬虫，在chrome浏览器输入about:version可获得User-Agent信息。下面这个网站也可直接返回当前user-agent： https://helloacm.com/api/user-agent/]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Critical Thinkging Reading Note]]></title>
    <url>%2F2019%2F01%2F31%2FCritical-Thinkging-Reading-Note%2F</url>
    <content type="text"><![CDATA[批判性思维要点 对自己的思维进行评估。 学会评估论证。 清晰的思考、清晰的写作。 思考信息来源的可信性。 警惕诉诸情感的谬误 区分解释与论证。 解释用于说明已知的现象，论证用于支持或证明某个主张 形成因果假说会涉及最佳解释的推理 因果解释的著名错误“共同变化，是为因果”以及“在此之后，因是之故”]]></content>
      <categories>
        <category>随便说说</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IM通信技术框架小结]]></title>
    <url>%2F2019%2F01%2F31%2FIM%E9%80%9A%E4%BF%A1%2F</url>
    <content type="text"><![CDATA[IM通信基本通信常用网络命令 ping telnet netstat taskkill 关闭某网络端口占用 telnet与程序通信 建立网络连接 实现服务器读写消息上一步中客户端一连上服务器后服务器就退出了，要想使得服务器更稳定地存在并承担起读写消息的功能，有几种思路：设置服务器循环等待（硬编码）服务器循环等待 网络数据传送小结字符串以字节的方式传送，并以约定好的协议进行解析。但可能还存在很多不解的问题： 传送到远方ip时丢失字节怎么办？ 字节如何被转换成电流信息？ 服务器如何与多个客户端同时通信？（多线程服务器应如何设计？） 多个客户端同时与服务器建立连接后，其消息能否互相看到？？（群聊服务器、在线聊天室应如何设计？） 群聊服务器实现示例流程分析 当一个客户机建立连接时，向其发出输入账号密码的请求 确认账号密码是否正确可与数据库中存储的账号密码信息比对，也可第三方认证 一个用户登录成功后，向聊天室内所有用户发送消息如XX用户已进入聊天室，聊天室当前人数N人 登录成功的用户向服务器发送信息时，其他在线用户也会收到此信息 用户主动退出或掉线时，其他用户收到XX用户已退出聊天室的通知 简单流程类设计 ChatServer聊天服务器 ServerThread聊天对象线程 DaoTool服务器端辅助工具，数据访问和验证功能（如验证客户端身份（账号密码）） ChatTool服务器端辅助工具，消息转发 ClientInfo用户信息 ServerFrame服务端管理界面效果 群聊客户端实现示例流程分析简单流程类设计 ChatClient聊天客户端对象，有账号密码等验证信息 ClientFrame客户端界面，包括登录界面&amp;&amp;聊天界面等等 在线聊天室小结 阻塞机制如Socket client = server.accept()中的accept方法，直到有一个客户机连接进来时才返回一个Socket对象；如read(),readLine()方法。 内存泄漏 耦合问题 如果要设计同时在线1000万人的系统怎么办？ 通信协议定制规定通信双方的通信流程和数据格式，遵守此流程方可进行正常通信。针对要传送的数据类型进行协议规则的制定，如下简单地分文件和文本消息来看： 消息传输协议进行消息传输，至少要有消息内容、目标地址。 文件传输协议要进行文件传输，至少要有文件内容、目标地址，习惯上文件名也属于必须的传输内容。 按照大家的约定（https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE） ，简单地可以把消息格式分成消息头和消息体两个部分。此处作简化处理，消息头格式定义如下：消息体： 几种设计模式 监听器设计模式 单例模式 Java项目类和方法 ServerSocket accept 功能规划 客户端（同步消息异步消息实现） 注册请求 登录请求 好友管理 好友列表 添加好友搜索已注册用户 删除好友 互发文字消息 互传文件 服务端 日志管理保存客户端请求信息，服务器错误信息等 用户数据存储如聊天记录等 用户管理 踢人下线 群发通知 通信协议指定 关键技术点 多通道连接 连接自恢复机制 消息唯一性保证 滑动窗口机制 可扩展消息与存在协议 程序内部缓存机制 心跳信号机制 高效数据库设计 参数配置及接口提供 总结前端 JTablehttps://docs.oracle.com/javase/tutorial/uiswing/components/table.html DefaultModelTablehttps://docs.oracle.com/javase/7/docs/api/javax/swing/table/DefaultTableModel.html JTree JScrollPane 代碼細節 read()和readFully()区别 开源代码IM UI组件 IOS/Android：https://github.com/jpush/aurora-imui前端之路：https://github.com/qiu-deqing/FE-learning]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 MCM/ICM]]></title>
    <url>%2F2019%2F01%2F29%2F2019-MCM-ICM%2F</url>
    <content type="text"><![CDATA[2019 MCM/ICMCSU：http://lib.csu.edu.cn/Web Of Science：http://libdb.csu.edu.cn/resdetail?rid=ScienceDirect：http://libdb.csu.edu.cn/resdetail?rid=ELSEVIER万方数据资源系统：http://libdb.csu.edu.cn/resdetail?rid=WF维普中文期刊：http://libdb.csu.edu.cn/resdetail?rid=VIPIEEE: http://libdb.csu.edu.cn/go?id=IEEE Problem E: What_is_the_Cost_of_Environmental_ Degradation?Keywords 环境（退化/保护）成本 环境会计 环境成本计算 （虚拟/实际）治理成本 生态系统管理/服务 生态系统服务功能 生态系统服务价值 土地开发项目 生态系统价值计算 价值评估 绿色经济核算 绿色发展（实践/框架） 生物物理量化 生物圈 生物多样性 主题环境退化的代价？ 生态功能的持续性利益建模 效益 供应 食物供应 植物授粉 调节 植物碳固定——能值法？ 水（自净、防洪等）——以人类基础设施替代（如净水设施、防洪设施等） 生物多样性——难点 文化 精神 宗教 考虑 定义生态系统服务 等效替代水环境退化成本——人工水污染治理花费（查数据）+生物多样性损失建模（？）森林退化——空气污染治理成本 Tasks 建立一个生态服务估值模型 用模型评价不同规模的土地利用项目的成本规模效益分析 基于以上分析模型设计评估模型的有效性 模型对于土地利用项目规划者和管理者有何启示？ 模型随着时间变化需要作出怎样的修改？ Existing Mathods NPP(net primary production) 元分析 ReferencesAn ecological perspective on the valuation of ecosystem servicesThe value of the world’s ecosystem services and natural capitalhttps://www.biodiversity.ru/programs/ecoservices/library/common/doc/Costanza_1997.pdf Valuing ecosystem services: A shadow price for net primary production：http://sites.bu.edu/cliveg/files/2013/12/arr01.pdf从两个问题出发：生态系统服务对于传统指标如GDP度量的经济是否有贡献？这种贡献能否被用作隐式的价格来进行计算？ net primary production 相关因素 碳固定 蒸腾作用 土地腐蚀（负相关） 生物量 直接 间接 文化（旅行费用法，享乐价格） 计算方法The history of ecosystem services in economic theory and practice: From early notions to markets and payment schemes Valuing a diversity of ecosystem services: The way forward to protects trategic groundwater resources for the future?http://libdb.csu.edu.cn/rwt/ELSEVIER/https/P75YPLUUMNVXK5UDMWTGT6UFMN4C6Z5QNF/science/article/pii/S1574009918300020 Data Sourceshttps://www.weather.gov/dmx/美国国家海洋和大气管理局：https://governmentshutdown.noaa.gov/Penn_World_Table:https://www.rug.nl/ggdc/productivity/pwt/ScienceBase:https://www.sciencebase.gov/catalog/folder/4f734998e4b046ee287b9d2fhttps://www.sciencebase.gov/catalog/item/4fb555ebe4b04cb937751db9US Landcover：https://archive.usgs.gov/archive/sites/landcover.usgs.gov/uslandcover.htmlhttps://gapanalysis.usgs.gov/gaplandcover/data/download/Bison Web:https://bison.usgs.gov/#api美国鱼类栖息地退化图：https://www.sciencebase.gov/catalog/item/565897c8e4b071e7ea540309美国生态系统恢复的经济影响水资源普查：https://www.sciencebase.gov/catalog/item/5151f07ee4b0f0b3d011a817欧洲：https://www.eea.europa.eu/data-and-mapsEmerge-nead：https://www.emergy-nead.com/country/dataIPCC:https://www.ipcc.ch/report/ar5/wg1/IPCC数据分发中心:http://www.ipcc-data.org/NEAD:https://cep.ees.ufl.edu/nead/https://en.climate-data.org/info/sources/欧洲疾病预防控制中心：https://ecdc.europa.eu/en/publications-data?f%5B0%5D=output_types%3A1382&amp;f%5B1%5D=geo%3A485欧洲环境代理：https://www.eea.europa.eu/themes/climate#tab-datamaps美国国家能源数据系统：https://www.eia.gov/state/seds/seds-data-complete.php?sid=US电力数据浏览器：https://www.eia.gov/electricity/data/browser/NREL美国各州太阳能数据：https://www.nrel.gov/gis/data-solar.html美国劳动力数据：https://www.bls.gov/cps/tables.htm美国劳工统计局：https://www.bls.gov/opub/geographic-profile/Economic Research：https://fred.stlouisfed.org/categories/18Global Economic：https://www.theglobaleconomy.com/USA/investment/EmergyDatabase：https://docs.google.com/spreadsheets/d/1DOopVg2MVumzAsV1_i5U14P2WrkJC8EniXeo6rGtMSU/edit#gid=1338167176https://docs.google.com/spreadsheets/d/17FIFQ_FPv1b0moU8vV0Hh5WI1M9OX_q-gvCLp6atLcw/edit#gid=33074211美国人口普查局：https://www.statedatalab.org/glossary/detail/capital-outlays国家管道测绘系统：https://pvnpms.phmsa.dot.gov/PublicViewer/NAICS：https://www.census.gov/eos/www/naics/美国各州劳动力统计表：https://www.census.gov/topics/employment/labor-force/data/tables.2014.html排放和发电资源综合数据库：https://www.epa.gov/energy/emissions-generation-resource-integrated-database-egrid-questions-and-answers德克萨斯州全州图像和GIS数据：https://tnris.org/data-download/#!/statewide卡尔加里大学图书馆（GIS资源）：https://library.ucalgary.ca/c.php?g=255401&amp;p=1705345佛罗里达环境保护部：https://ca.dep.state.fl.us/mapdirect/美国城市开放数据普查：http://us-city.census.okfn.org/dataset/zoningOpenData_CityOfNetwork:https://opendata.cityofnewyork.us/data/PURDUE图书馆：http://guides.lib.purdue.edu/c.php?g=353290&amp;p=2378621The Nature Con: http://maps.tnc.org/gis_data.htmlMap of Life：http://species.mol.org/species/map/Perdix_dauurica气候数据图：https://zh.climate-data.org/%E4%BA%9A%E6%B4%B2/%E5%8D%B0%E5%BA%A6%E5%B0%BC%E8%A5%BF%E4%BA%9A/south-sulawesi/usa-559266/EPA：https://www.epa.gov/transportation-air-pollution-and-climate-change Baike 旅行费用法：https://wiki.mbalib.com/wiki/%E6%97%85%E8%A1%8C%E8%B4%B9%E7%94%A8%E6%B3%95 生物量：https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E9%87%8Fhttps://baike.baidu.com/item/%E7%94%9F%E7%89%A9%E9%87%8F 初级生产：https://en.wikipedia.org/wiki/Primary_production Cobb-Douglas生产函数及其优缺点: https://en.wikipedia.org/wiki/Cobb%E2%80%93Douglas_production_functionhttp://shodhganga.inflibnet.ac.in/bitstream/10603/159915/6/06_chapter%203.pdfhttps://dash.harvard.edu/bitstream/handle/1/3196325/antras_usaggregate.pdf PWT:https://en.wikipedia.org/wiki/Penn_World_Table 元分析：https://zh.wikipedia.org/wiki/%E5%85%83%E5%88%86%E6%9E%90 影子价格https://zh.wikipedia.org/wiki/%E5%BD%B1%E5%AD%90%E4%BB%B7%E6%A0%BChttps://www.zhihu.com/question/23510001https://wiki.mbalib.com/wiki/%E5%BD%B1%E5%AD%90%E5%AE%9A%E4%BB%B7%E6%B3%95 生态服务价值https://wiki.mbalib.com/wiki/%E7%94%9F%E6%80%81%E6%9C%8D%E5%8A%A1%E4%BB%B7%E5%80%BC 环境成本分类 生态系统服务分类https://cices.eu/cices-structure/ 能值法指数解释https://www.emergy- nead.com/country/explanation 土地利用规划https://en.wikipedia.org/wiki/Land-use_planning 中国森林生态系统 土地使用规划https://hdc.com.mv/hulhumale/planning-design/ ArcGIS交集制表 美国风能资源https://rredc.nrel.gov/wind/pubs/atlas/ 劳动力参与率https://www.google.com/search?q=%E5%8A%B3%E5%8A%A8%E5%8A%9B%E5%8F%82%E4%B8%8E%E7%8E%87&amp;oq=%E5%8A%B3%E5%8A%A8%E5%8A%9B%E5%8F%82%E4%B8%8E%E7%8E%87&amp;aqs=chrome..69i57j0l2.3721j0j7&amp;sourceid=chrome&amp;ie=UTF-8 固定资产投资 matlab字符串处理函数https://www.cnblogs.com/emanlee/archive/2012/09/13/2683912.html Matlab File Exchangehttps://ww2.mathworks.cn/matlabcentral/fileexchange/?requestedDomain=zh BEA in the classroomhttps://www.bea.gov/index.php/resources/learning-center/bea-in-the-classroom 面板数据分析https://www.zhihu.com/question/21918459 非货币生态系统核算体系 国际统一阶段代码https://www.iso.org/stage-codes.html#50.20 国际标准组织污染、污染控制https://www.iso.org/ics/13.020.40/x/ 温室气体协议https://ghgprotocol.org/ 组织的温室气体排放量化和报告规范及指南http://www.szmqs.gov.cn/xxgk/qt/ztlm/szbz/szsdfbz_szbz/201412/W020141202347688881182.pdf 能值和变革http://www.emergysociety.com/emergy-and-transformity/ python excelhttps://zhuanlan.zhihu.com/p/23998083 加州内化达Public Viewerhttps://pvnpms.phmsa.dot.gov/PublicViewer/ 国家空气毒物评估https://www.epa.gov/national-air-toxics-assessment 2014 National Air Toxics Assessmenthttps://gispub.epa.gov/NATA/ 成本效益分析https://www.britannica.com/topic/cost-benefit-analysis statisca统计门户网站https://www.statista.com/topics/2582/subway/ 斯坦福确定项目成本与效益https://web.stanford.edu/group/FRI/indonesia/documents/gittinger/Output/chap2.html plannerWeb：http://plannersweb.com/2013/12/pro-forma-101-what-will-it-cost/ Agent-based Modelhttps://zh.wikipedia.org/wiki/%E4%B8%AA%E4%BD%93%E4%B8%BA%E6%9C%AC%E6%A8%A1%E5%9E%8B clarkLabhttps://clarklabs.org/https://en.wikipedia.org/wiki/TerrSet 美国土地利用https://www.bloomberg.com/graphics/2018-us-land-use/ IDRISIpart1：https://download.csdn.net/download/liujiantao_1981/9557000part2：https://download.csdn.net/download/liujiantao_1981/9556996part3：https://download.csdn.net/download/liujiantao_1981/9556998 时间序列平稳性https://www.zhihu.com/question/21982358 清洁空气法文本https://www.epa.gov/clean-air-act-overview/clean-air-act-text us air quality standardhttps://www.transportpolicy.net/standard/us-air-quality-standards/ Considerations 一个真实的土地利用项目考虑上生态因素后的真实经济成本是？ 大型 全国铁路网建设 全国管网 水坝 小型 元胞自动机多智能体模拟？植被面积变化、水文条件可能发生变化、空气可能会有污染（旧式火车）等等。缓冲区分析？ Problem F: Universal, Decentralized, Digital Currency: Is it possible?主题讨论一种通用、去中心化的全球数字货币是否可能？https://zhuanlan.zhihu.com/p/32637424 去中心化是否可能？ 到底什么是去中心化 国家认同？ 安全？ 假设存在这样一种货币，它对现有货币体系会产生什么影响/冲击吗？ 效率分析 Referenceshttps://www.bostonfed.org/publications/current-policy-perspectives/2014/bitcoin-as-money.aspxhttps://zhuanlan.zhihu.com/p/32637424 zhihuhttps://zhuanlan.zhihu.com/p/32637424http://guoze.me/2018/02/27/blockchain-decentration/ Problem DReferenceshttps://www.affluences.com/louvre.phphttp://presse.louvre.fr/8-1-million-visitors-to-the-louvre-in-2017/ Problem A: Game of Ecology主题龙母的龙出生时10kg，一年后大约30-40kg，假设这三条龙在现实世界中存在，对龙的特性…及其与环境的相互作用进行建模 生长曲线拟合 Referenceshttps://www.penguinrandomhouse.com/series/SOO/a-song-of-ice-and-fire/]]></content>
      <tags>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Notes for Spectral Graph Theory Intro.]]></title>
    <url>%2F2019%2F01%2F24%2FNotes-for-Spectral-Graph-Theory-Intro%2F</url>
    <content type="text"><![CDATA[耶鲁大学谱图理论介绍章Course link：http://www.cs.yale.edu/homes/spielman/561/lect01-15.pdf Example Summary通常来说图没有坐标，绘制它们的一种很好的方式就是以特征向量代替坐标要获得不同的嵌入效果，可以通过绘制不同的特征向量实现，拉普拉斯矩阵的最小非0特征值的多解就可很好地张成特征空间Exercise Summary正交特征向量置换不变性旋转不变性相似矩阵谱分解迹References SummaryM. Fiedler. Algebraic connectivity of graphs. Czechoslovak Mathematical Journal]]></content>
      <categories>
        <category>SpectralGraphTheory</category>
      </categories>
      <tags>
        <tag>Math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Gempy总结（一）]]></title>
    <url>%2F2019%2F01%2F23%2FGempy%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[Gempy总结（一）by zhuge基本介绍官网：https://gempy.readthedocs.io/ 环境依赖 可视化工具包（VTK）这个很关键，Gempy的核心3D渲染是在vtkopenGL的基础上做起来的，也支持将模型导出到VTK环境，要求VTK版本&gt;=7，可以pip安装也可以源码编译安装（用CMake，Windows环境推荐Cmake-GUI）。如果是VTK8，目前release的版本好像没有python3，如果要python2就要自行编译C++源代码，然后指定python版本进行编译生成。编译相关教程： cmkae编译https://blog.csdn.net/m_buddy/article/details/79042039 指定python版本https://stackoverrun.com/cn/q/12846844 总结：推荐使用vtk8（支持交互操作），python3环境，方便与anaconda配合 python开源库（可直接Pip或者conda安装，anaconda环境已经包含其中的大多数包） pandas tqdm scikit_image Theano matplotlib numpy pytest SciPy IPython seaborn setuptools scikit_learn networkx 开发环境Gempy github的源码包包含了6个章节的基本教程，包括导入数据和设置，随机模拟，贝叶斯统计…，有jupyter的现成教程源码及注释，其中3D部分的运算量较大（加载了vtk的动态链接库的渲染功能模块） 搭建 Option1：纯粹python环境 使用pypi安装所有依赖库 使用pypi安装gempy/直接clone其github项目 Option2：NoteBook 安装anaconda，利用conda包管理工具安装所有依赖包 在jupyter熟悉gempy自带教程 在任意conda环境进行开发 Option3：Pycharm（推荐）pycharm包管理工具可以很方便地安装依赖，更大的好处是方便跟踪调用方法、变量的声明、调用点。因为gempy源码中进行了大量的调用，所以调试上的方便很关键 用法基本对象 基本数据对象：geo_data 基本可视化对象：PlotData2D（绘制2D图），steno3D，vtkPlot（调用了VTK进行渲染，所以VTK环境装错或者没装会报错，3D图绘不出来）等。需要可视化时，将geo_data作为句柄传到可视化对象的构造函数中，调用各种vtk渲染方法即可渲染，部分可视化对象的构造函数形如：可视化部分函数： plot_data(self, direction=”y”, data_type=’all’, series=”all”, legend_font_size=10, ve=1, **kwargs) plot_block_section(self, cell_number=13, block=None, direction=”y”, interpolation=’none’, plot_data=False, ve=1, **kwargs) plot_surfaces_3D(geo_data, vertices_l, simplices_l,# formations_names_l, formation_numbers_l, alpha=1, plot_data=True, #size=(1920, 1080), fullscreen=False, bg_color=None **kwargs) 绘制表面3D图，vertices_l, simplices_l是numpy对象，前者是Vertice坐标，后者是其对应的（属性）值，alpha为透明度参数，fullscreen可设置是否为全屏… plot_data_3D(geo_data, **kwargs) plot_data_3D(self, **kwargs)（上一个函数的重载方法） plot_surfaces_3D_real_time(self, interp_data, vertices_l=None, simplices_l=None,# formations_names_l, formation_numbers_l,plot_data=True, posterior=None, samples=None,**kwargs) 基本插值对象：InterpolatorData，类似可视化部分，要使用其插值功能，即创建插值对象，传入geo_data对象，以此调用相关插值功能。插值对象构造函数形如： 基本用法 数据导入（创建geo_data对象）geo_data对象是所有可视化的基础，应用gempy可视化的关键在于了解gempy中支持多少种gempy的创建/构造方法，这个过程要关注数据传入以及相关属性（分辨率等）设置，一种典型的geo_data构造方法如：geo_data = gp.create_data(范围,分辨率,path_o = 输出数据文件路径,path_i = 输入数据所在文件路径)范围即boundingbox：[Xmin,Xmax,Ymin,Ymax,Zmin,Zmax]。分辨率:[X,Y,Z],输入数据文件的格式为csv，数据其中格式为GeoModeller（https://en.wikipedia.org/wiki/GeoModeller3D），GeoModeller百科介绍： 相应数据格式示例： 也可以只通过范围和分辨率参数创建对象，借助别的方法（gempy自带方法，pandas，…）传入研究数据。如：interface文件格式：folidation文件格式： 数据打印 可视化构造出geo_data对象，传入期望的可视化对象（2D/3D）。其主要实现在gempy/plotting/.目录下的中visualize.py和plot.py中，可视化属性相关对象在color.py(只引用了numpy和matplotlib，封装了常用颜色相关操作对象)中。 绘制2D数据 绘制截面 插值插值对象创建方法形式：interp_data = gp.InterpolatorData(geo_data, theano_optimizer=’fast_run’, compile_theano=True, verbose=[])theano_optimizer和compile_theano参数控制相关的运算优化设置。 运算（…） 小结开发环境配置好以后，之后一系列的操作都是对geo_data对象进行操作，并且比较简单，只要按照其规定的格式进行研究数据传入即可使用gempy的基本可视化、统计分析功能 教程汇总官方教程GemPy地质建模的基础：https://gempy.readthedocs.io/_notebooks/ch1.html随机模拟：https://gempy.readthedocs.io/_notebooks/ch3.html]]></content>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2015 ICM Problem D:Is it Sustainable?]]></title>
    <url>%2F2019%2F01%2F21%2F2015-ICM-Problem-D-Is-it-Sustainable%2F</url>
    <content type="text"><![CDATA[2015 ICM Problem D：Is it Sustainable？MCM：http://www.comap-math.com/mcm/index.htmlCSU：http://lib.csu.edu.cn/Web Of Science：http://libdb.csu.edu.cn/resdetail?rid=万方数据资源系统：http://libdb.csu.edu.cn/resdetail?rid=WF维普中文期刊：http://libdb.csu.edu.cn/resdetail?rid=VIP Task要回答/解决什么问题？主题：如何在保障地球健康以及满足人类需要中取平衡 地球资源是有限的，如何处理人口增长和资源耗费问题？ 可以如何增加公平以及削减贫穷？ 经济发展和生态系统健康是否有矛盾？ 引出：可持续发展情景：ICM雇佣你利用他们广泛的财政资源以及影响力帮助他们创造更可持续的世界，他们特别关心发展中国家… Task1:可持续性评价明确定义一个国家是否可持续，考虑各个指标间的相互作用关系（参考联合国列举依据） 环境（生态承载力度量）（REPI、EPI、ESI）考虑当前环境资源状况、当前需求量、资源消耗速率 生态足迹 影响因素 环境承载力 清洁水 资源开采可持续 能源利用可持续 气候变化 生态承载力 社会（社会不稳定性度量？）（HPI）（当前、需要、消耗） 人均收入 贫困 食品安全 健康保障 公平包容的教育机会 性别平等 安居乐业 经济（经济实力以及潜力度量）（当前、需要、消耗） 经济总体实力 GDP（查询全球各国公布GDP数据） 创新指数 知识产权 科技出版物 论文数量 经济结构 经济效益 国际关系 伙伴关系 Task2:可持续发展计划 人口 自然资源 生态环境 社会和政策条件 评估20年可持续发展计划的对国家可持续发展的有效性 评估哪项政策或程序有最好的效果 考虑其它环境因素 随机的 方法 回归利用历史数据建立回归模型，预测20年后的情况 模拟（元胞自动机等）https://www.zhihu.com/topic/19610596/hothttps://mathpretty.com/8893.html Resources 美国政府经济和社会时间2015 可持续发展知识平台https://sustainabledevelopment.un.org/ 全球足迹网络2015https://www.footprintnetwork.org/our-work/ecological-footprint/ 生态承载力：http://data.footprintnetwork.org/#/ 国家工作：https://www.footprintnetwork.org/our-work/countries/ 20个国家的生态财富：https://www.footprintnetwork.org/2015/07/14/states/ 哈佛大学what is sustainable?：https://sites.hks.harvard.edu/sustsci/ists/docs/whatisSD_env_kates_0504.pdf 国际可持续发展机构https://www.iisd.org/topic/sustainable-development 世界银行http://data.worldbank.org/ 世界知识产权官网https://www.wipo.int/publications/zh/details.jsp?id=4330 全球创新指数官网https://www.globalinnovationindex.org/Home 维基百科可持续发展：https://zh.wikipedia.org/wiki/%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95https://baike.baidu.com/item/%E5%8F%AF%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95/360491生态承载力：https://en.wikipedia.org/wiki/Biocapacity 人类发展指数：https://zh.wikipedia.org/wiki/%E4%BA%BA%E7%B1%BB%E5%8F%91%E5%B1%95%E6%8C%87%E6%95%B0基尼系数：https://zh.wikipedia.org/wiki/%E5%9F%BA%E5%B0%BC%E7%B3%BB%E6%95%B0戴尔指数：https://zh.wikipedia.org/wiki/%E6%88%B4%E5%B0%94%E6%8C%87%E6%95%B0经济指标：https://en.wikipedia.org/wiki/Economic_indicatorMalmquist指数：https://en.wikipedia.org/wiki/Malmquist_index最不发达国家：https://zh.wikipedia.org/wiki/%E6%9C%80%E4%B8%8D%E5%8F%91%E8%BE%BE%E5%9B%BD%E5%AE%B6 论文中文 国家可持续发展实验区创新能力评价指标体系：http://www.most.gov.cn/cxdc/cxdczbtx/201311/P020131204404695937840.pdf 国际可持续性评价方法研究进展与趋势：http://or.nsfc.gov.cn/bitstream/00001903-5/257985/1/1000015093836.pdf 生态足迹分析理论与方法http://libdb.csu.edu.cn/rwt/WF/http/M6YHPZLPM3RX635EMF4GCLUDN7XT6Z5P/details/detail.do?_type=perio&amp;id=dqkxjz200006002 水资源承载力评价指标体系研究 沈阳经济区经济与环境系统动态耦合协调演化http://www.cjae.net/CN/abstract/abstract17931.shtml 英文 tradingeconomics：https://tradingeconomics.com/indicators Sustainable Development and Sustainability Metrics：https://onlinelibrary.wiley.com/doi/pdf/10.1002/aic.690490802 Sustainable Development Indicators: From Statistics to Policy：https://onlinelibrary.wiley.com/doi/pdf/10.1002/eet.1597 What Is Sustainable Development? Goals, Indicators,Values, and Practice：http://www.cepn-paris13.fr/epog/wp-content/uploads/2016/01/CONSOLO_Kates-et-al.pdf Indicators for Sustainable Development:Theory, Method, Applications：http://www.ulb.ac.be/ceese/STAFF/Tom/bossel.pdf The 2010 Biodiversity Indicators: Challenges for Science and Policy：https://www.napawatersheds.org/img/managed/Document/3455/Mace%20and%20Baillie%20-%202007%20-%20the%202010%20Biodiversity%20Indicators%20.pdf Sustainable development in the European Union 2017版：https://ec.europa.eu/eurostat/documents/3217494/8461633/KS-04-17-780-EN-N.pdf 法国外交官：https://www.diplomatie.gouv.fr/en/french-foreign-policy/development-assistance/the-international-development-agenda/article/2030-agenda-for-sustainable-development-how-is-france-doing-may-2017 Indicators of Effective Policy Development &amp; Implementation：http://www.swiftschools.org/sites/default/files/SWIFT%20Issue%20Brief%208%20Effective%20Policy%20Indicators.pdf Use of Indicators in Policy Analysishttps://www.iisd.org/pdf/2006/measure_use_indicators.pdf 数据 世界银行https://data.worldbank.org/indicator 世界发展指标http://wdi.worldbank.org/tables https://tradingeconomics.com/https://tradingeconomics.com/indicators 可持续发展指标以及相关数据（可直接下载）：http://www.indicators.be/en/t/SDI/Sustainable_development_indicators 爱尔兰2017可持续发展指标（附数据，易获取）：https://www.cso.ie/en/releasesandpublications/ep/psdii/sustainabledevelopmentindicatorsireland2017/ 美国可持续发展指标（有部分数据）：https://sdg.data.gov/ 世界卫生组织WHO（数据丰富）：https://www.who.int/sdg/en/ https://www.who.int/zhhttp://apps.who.int/gho/data/?theme=main http://apps.who.int/gho/data/node.i 全球知识产权数据https://www.wipo.int/ipstats/zh/ 美国数据 美国统计署：https://www.census.gov/ 生态足迹http://data.footprintnetwork.org/#/ 方法 熵值法https://hujichn.github.io/2016/08/10/%E7%86%B5%E5%80%BC%E6%B3%95%E7%A1%AE%E5%AE%9A%E6%9D%83%E9%87%8D%E7%9A%84%E6%AD%A5%E9%AA%A4%E5%8F%8A%E9%80%82%E7%94%A8%E8%8C%83%E5%9B%B4/ 层次分析建立判断矩阵时，需要有专家知识方能保证客观，存在争议的可能性 数据包络分析 BP神经网路 CAS复杂适应系统https://wiki.mbalib.com/wiki/%E5%A4%8D%E6%9D%82%E9%80%82%E5%BA%94%E7%B3%BB%E7%BB%9F%E7%90%86%E8%AE%BA PSR模型可反映指标间的影响关系https://baike.baidu.com/item/PSR/16014155 加速遗传算法 耦合协调度评价http://iceam.swu.edu.cn/viscms/u/cms/xbbjb/201403/21114947qess/X2014-02-080.pdfhttp://www.cjae.net/CN/abstract/abstract17931.shtml（中国地质大学）https://gg.swjtu.edu.cn/__local/E/8B/26/9F92DC76DC608D089E07F35CD7F_A94299D3_178239.pdf CRITIC法https://wiki.mbalib.com/wiki/CRITIC%E6%96%B9%E6%B3%95http://blog.sina.com.cn/s/blog_8f03874a0102wgi3.html 五种客观赋权方法对比http://image.sciencenet.cn/olddata/kexue.com.cn/upload/blog/file/2010/12/2010121116722667242.pdf 离差法、均方差法、回归系数法、主成分分析法感觉几种方法都可评价可持续发展能力，偏向采用客观的方法，还需要想如何划分可持续和不可持续的阈值/边界 投影寻踪模型https://en.wikipedia.org/wiki/Projection_pursuithttps://www.stat.washington.edu/wxs/Visualization-papers/projection-pursuit.pdfhttp://www.slac.stanford.edu/pubs/slacpubs/1250/slac-pub-1312.pdf 元胞自动机http://mathworld.wolfram.com/CellularAutomaton.htmlA New kind of Science：https://www.wolframscience.com/nks/ 问题 熵权法时采用归一化和标准化得到的结果相差较大，应该使用何种？ 如何确定评价指标的临界值？聚类？线性内插？ 如果使用元胞自动机模拟未来二十年的情况，应该如何定义更新规则？ 总结 Matlab导出数值数组到文件：https://ww2.mathworks.cn/help/matlab/import_export/write-to-delimited-data-files.html集合运算：https://blog.csdn.net/shengchaohua163/article/details/78938955把数组转为元胞数组：https://ww2.mathworks.cn/help/matlab/ref/num2cell.html表转同构数组：https://ww2.mathworks.cn/help/matlab/ref/table2array.html 可视化 饼图：https://zh.wikipedia.org/zh-hans/%E9%A5%BC%E5%9B%BE用于描述量、频率或百分比之间的相对关系。可描述几个可持续发展指标的下级指标关系 条形图：https://zh.wikipedia.org/wiki/%E6%9D%A1%E5%BD%A2%E7%BB%9F%E8%AE%A1%E5%9B%BE长条图用来比较两个或以上的价值（不同时间或者不同条件），只有一个变量，通常利用于较小的数据集分析。长条图亦可横向排列，或用多维方式表达。 柱状图： 堆叠图： 风向玫瑰图https://gallery.echartsjs.com/editor.html?c=xSkKj8TuiW 仪盘表https://jshare.com.cn/demos/hhhhiD?hc-theme=grid-light 子弹图 蜘蛛图https://jshare.com.cn/demos/hhhhi6?hc-theme=grid-light 多雷达图https://www.highcharts.com.cn/demo/highcharts/polar-spider 可视化工具Tableau：https://en.wikipedia.org/wiki/Tableau_SoftwareEChart:https://vis.baidu.com/chartusage/stackedarea/ ；https://echarts.baidu.com/api.html#echartsInstancehighcharts：https://www.highcharts.com/demo/polar-wind-rose ;https://www.highcharts.com.cn/demo/highcharts#heatmap-treemapinfogram:https://infogram.com/app/#/welcomePlotly：https://plot.ly/r/#basic-chartsCodepen:https://codepen.io/pen知乎可视化工具推荐：https://www.zhihu.com/question/19929609Mathematica：https://tiebamma.github.io/InstallTutorial/ 经济可持续强大的国家卢森堡：https://zh.wikipedia.org/wiki/%E5%8D%A2%E6%A3%AE%E5%A0%A1瑞典：https://zh.wikipedia.org/wiki/%E7%91%9E%E5%85%B8瑞士（Switzerland）：https://zh.wikipedia.org/wiki/%E7%91%9E%E5%A3%AB丹麦（Denmark）：https://zh.wikipedia.org/wiki/%E4%B8%B9%E9%BA%A6 新闻联合国经济和社会事务部：https://www.un.org/development/desa/zh/news/policy/four-steps-for-global-economy.html目标8——促进持久、包容和可持续经济增长，促进充分的生产性就业和人人获得体面工作：https://www.un.org/sustainabledevelopment/zh/economic-growth/ 建模过程注意 理清楚问题如2015D可持续问题，应决定分哪几个维度定义可持续，各个可持续维度之间是否相互独立还是说会相互作用，不同的假定就有不同的解决方向。 理清楚数据要用到哪些数据？如果想要数据缺失了是舍弃该数据还是进行插值补全？插值的话应该采用何种插值方法会比较符合现实情况？ 注重团队配合 优化可视化效果]]></content>
      <tags>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spatial Analysis Project Summary]]></title>
    <url>%2F2019%2F01%2F12%2F%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90Project%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[PageRank对Taxi_OD矩阵进行PageRank分析 以Taxi OD矩阵作为初始的邻接矩阵 计算S矩阵 消除悬挂点（每一个维度皆为0）的负影响如果不做这步，则不管初始值为何都将收敛为0，达不到rank的目的 计算G矩阵 引入超参数a控制用户随机跳出的概率，一般为0.85 可视化结果 超参数0.85时 对地铁站OD矩阵进行PageRank分析 工作日地铁数据 周末地铁数据 工作日和周末差异分析 分析差异主要在哪些地点 分析导致差异的原因 PageRank中G矩阵超参数的敏感性分析转移矩阵谱特性分析（我） 特征值分布 聚类可视化（附结果图，对应参数，计算公式，然后讲清楚就够了） Kmeans 距离度量 欧式距离 曼哈顿距离 聚类数选取 - 最终聚类图 谱聚类（我讲其中1到2个） 非归一化 相似度图 构建方法采用全连接图构造，初始时邻域控制参数为1 拉普拉斯矩阵 矩阵计算L=D-W 拉普拉斯矩阵性质 特征问题 背后代表的思想（哪种图） 聚类数k选取 最大特征gap计算特征值间的最大间隙，对应的k作为聚类数选取的依据 归一化1 问题依据最大特征gap的方法确定的最佳k大多在2，即图切优化时把一个离群点跟整个部分分离了，枚举邻域控制参数，（从0.5到7.5，步长为0.5），得到最大间隙对应的k为[1371,7,3,2,2,2,2]，可见随着邻域参数的增大影响趋于饱和，如果从0.5到2.5之间再进行探索应该会得到更精细的结果，选择7作为聚类数，得到聚类结果。 归一化2 DBSCAN 经典层次聚类 Node2Vec图嵌入 python2 src/main.py –weighted –p 0.5 –q 2 –input graph/nsh.edgelist –output emb/nsh_p05_q_2_dim128.emb https://arxiv.org/pdf/1607.00653.pdfhttps://blog.csdn.net/u013527419/article/details/76017528 聚类评价（附结果图，计算公式，然后讲清楚就够了） 外部评价(wuyan) 内部评价（我） DB指数 距离度量统一使用了欧式距离。这里对于使用聚类时采取的距离度量还是统一使用某种距离度量有点疑问。 SD指数 Silhouette指数 别的问题（附结果图，参数，计算公式，然后讲清楚就够了） 回归分析 平滑 高斯核平滑（最好再实现一遍） 克里金插值（多改下参数） IDW 周末与工作日地铁差异 结论]]></content>
      <tags>
        <tag>Summary</tag>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Question-For-2019-01]]></title>
    <url>%2F2019%2F01%2F11%2FQuestion-For-2019-01%2F</url>
    <content type="text"><![CDATA[0x00 MathScalablenode2vec主页：http://snap.stanford.edu/node2vec/论文地址：https://arxiv.org/pdf/1607.00653.pdf 下游机器学习任务指的是什么？二阶随机游走的特点是？多标签分类任务和链接预测任务的意义为?学习/生成图的边的特征表示和结点的特征表示各自着重的点是哪些？什么是特征工程？PCA与IsoMap的区别？谱聚类的所作出的假设是？假设图切对于分类有用。这种假设在大多数情景下是合理的，但对于跨网络的任务下泛化能力不能让人满意。 Skip-gram和CBOW的基本思想有何差异？Skip-gram的基本假设是？具有相同上下文环境的单词是相似的。 常用结点采样策略有哪些？最大化观测结点u的网络邻域空间中的对数概率的两个标准假设 条件独立性观测结点u的一个邻域空间与观测到u的其它任何邻域空间都是相互独立的 特征空间中对称一个结点与其邻域中的结点在特征空间中具有对称的效应 负采样的思想是？经典的结点邻域搜索策略分别是？工作场景是？ BFS DFS 强化学习、半监督学习、监督学习、非监督学习的区别 有关相似性结构上的相似的结点不一定是连通的。 node2vec的随机游走讲的是什么？随机游走长度l，搜索偏差alpha，二阶随机游走参数p、q（直觉上控制着游走的速度/游离起始结点邻域的速度，参数大致上相当于对BFS和DFS作了一个插值，对网络中结点的标识的关系起辨别作用） Return Parameter p将p值设置为高值（&gt;max(q,1)）可确保游走的下两步中快速回访同一个结点的可能性减少（除非游走中的下一个结点已经没有其它邻居了），这种策略鼓励更先进的探索，避免了两跳冗余;若p&lt;min(q,1)，会导致游走徘徊在起始结点的局部邻域中。 In-out Parameter q参数q允许搜索区分“向内”结点和“向外”结点。 Benefits of random walks比BFS/DFS好 node2vec算法过程是？算法的每个阶段可并行，提供了较好的可扩展性。当p==q==1时，即相当于DeepWalk（node2vec的一种特例） 输入 图G=(V,E,W) 维度d（斯坦福默认128） 每个结点的游走周期r/游走迭代次数（斯坦福默认10） 游走长度l（斯坦福默认80） 上下文环境大小k（斯坦福默认10） 返回概率p（斯坦福默认1） 离开概率q（斯坦福默认1） 过程 预处理计算转移概率矩阵 模拟随机游走 采用随机梯度下降进行优化 输出 node2vec学到了什么特征？Negative sampling和Hierarchical sampling有什么优势？针对node2vec的随机梯度下降如何实现？论文针对多标签分类问题对哪些数据集作了实验 PPI网络 维基百科 node2vec的参数稳定性如何？ dimension到约100时就基本饱和了 walks提高次数及长度会提高表现 论文针对链接预测问题对哪些数据集作了实验 讨论和总结将网络中的特征学习问题转成搜索优化问题 Area Under Curve (AUC) scores是什么？Hadamard operator是什么？哈达玛算子：http://xuewen.cnki.net/CMFD-1016230425.nh.html 各种模型对比DeepWalk和LINE都可以看作对网络采用严格的搜索策略，DeepWalk主张采用均匀随机游走，这种策略一个很明显的局限性是我们无法对探索的邻域大小进行控制。LINE主要主张采用广度优先的搜索策略。node2vec的搜索策略提供了参数p和q使得我们对网络邻域的探索可控，并且这些搜索参数都有直观上得的解释，在最复杂的网络上面的表现也胜于其它模型，node2vec对于参数的摄动具有较好的扩展性和鲁棒性。 参考文献 分类Cart回归的思想？https://www.cnblogs.com/pinard/p/6050306.html 随机森林的思想是？遗传算法Matlab实现https://blog.csdn.net/hanpu_liang/article/details/78173909https://blog.csdn.net/acelit/article/details/78187715 蚁群算法应用http://www.ecsponline.com/yz/B676AB9119BF04182AD772E52B7C7451F000.pdfhttps://zh.wikipedia.org/wiki/%E8%9A%81%E7%BE%A4%E7%AE%97%E6%B3%95#%E8%B0%83%E5%BA%A6%E9%97%AE%E9%A2%98 最大流问题的基本概念有哪些？残留网络、增广路径、最大流最小割https://blog.csdn.net/smartxxyx/article/details/9293665java实现：https://blog.csdn.net/smartxxyx/article/details/9293805复杂网络常见数据和程序代码网站：https://blog.csdn.net/qingqingpiaoguo/article/details/61418783复杂网络可视化：http://www.visualcomplexity.com/vc/ 综合评价方法中，以下方法的原理以及区别在于？ 熵值法 数据包络分析法 层次分析法 模糊综合评价法 灰色关联分析法 通过加速遗传算法进行投影寻踪优化的过程中，加速次数、变异率、窗宽密度等对于最终投影值的影响有多大？如何设计合适的敏感度分析实验？washington-projection-pursuit：https://www.stat.washington.edu/wxs/Visualization-papers/projection-pursuit.pdfstanford-projection-pursuit：http://www.slac.stanford.edu/pubs/slacpubs/1250/slac-pub-1312.pdf 0x01 RSNDVI对于植被覆盖变化检测的误差如何评价？如何在GEE中将多源遥感数据融合以弥补数据不足的情形？MNDWI、NDWI、NDGI、NDBI、NDVI的作用是？什么是不透水层？https://baike.baidu.com/item/%E4%B8%8D%E9%80%8F%E6%B0%B4%E5%B1%82 不透水层与裸地的混淆如何解决？有人提出了一种PII指数用于提取不透水层，精度比NDBI高，与裸地的混淆减少http://www.cqvip.com/qk/90069x/201704/672058411.html地下水的情况与不透水层会具有什么样的关系？ 如何区分水田和河流GEE中通过各颜色像素计算变化面积思路123456789101112131415161718192021222324//pixelArea():Generate an image in which the value of each pixel is the area of that pixel in square meters.//multiply(image2):Multiplies the first value by the second for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.//updateMask(image):Updates an image's mask at all positions where the existing mask is not zero. The output image retains the metadata and footprint of the input image.//reduceRegion():Apply a reducer to all the pixels in a specific region.Either the reducer must have the same number of inputs as the input image has bands, or it must have a single input and will be repeated for each band.Returns a dictionary of the reducer's outputs.//addBands():Returns an image containing all bands copied from the first input and selected bands from the second input, optionally overwriting bands in the first image with the same name. The new image has the metadata and footprint from the first input image.var area = ee.Image.pixelArea().divide(10000)lake_mask = lake_mask.updateMask(lake_mask)var lake_mask_ = lake_mask.multiply(area).select([0],['lake']);var scum_ = lake_mask.updateMask(scum).multiply(area).select([0],['scum']);var bleached_scum_ = lake_mask.updateMask(bleached_scum).multiply(area).select([0],['bleached_scum']);var microphytobenthos_ = lake_mask.updateMask(microphytobenthos).multiply(area).select([0],['microphytobenthos']);//var biomass_ = lake_mask.updateMask(highbiomass).multiply(area).select([0],['highbiomass']);var area_image = lake_mask_.addBands(scum_) .addBands(bleached_scum_) .addBands(microphytobenthos_) .addBands(biomass_)var areas = area_image.reduceRegion(&#123; reducer:ee.Reducer.sum(), geometry: image.geometry(), scale: 30, maxPixels:1e13&#125;)print(areas) 0x02 Modeling真实世界 不透明 多目标 复杂 动态 空间地理考量 政策和社会因素 0x03 待阅读文章https://www.sciencedirect.com/science/article/pii/S0034425716301572https://www.mdpi.com/2072-4292/6/9/7952/htmLandsat：https://pubs.usgs.gov/fs/2015/3034/pdf/fs2015-3034.pdf?tdsourcetag=s_pctim_aiomsghttp://blog.sina.com.cn/s/blog_764b1e9d0101c7e6.htmlnode2vec：https://arxiv.org/pdf/1607.00653.pdfDeepWalk：https://blog.csdn.net/u013527419/article/details/76017528A New kinds of Science：https://www.wolframscience.com/nks/p1--an-outline-of-basic-ideas/ 4 全球革新指数：https://www.wipo.int/publications/zh/details.jsp?id=4330]]></content>
      <tags>
        <tag>Question</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MatLab常用操作API总结系列]]></title>
    <url>%2F2019%2F01%2F02%2FMatLab%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9CAPI%E6%80%BB%E7%BB%93%E7%B3%BB%E5%88%97%2F</url>
    <content type="text"><![CDATA[总览字符串文件读文件写文件预测回归 predicthttps://ww2.mathworks.cn/help/stats/compactlinearmodel.predict.html idpolyhttps://ww2.mathworks.cn/help/ident/ref/idpoly.html 分类https://ww2.mathworks.cn/help/stats/support-vector-machines-for-binary-classification.html?requestedDomain=zh svmtrain svmclassify 谱图函数 gplothttps://ww2.mathworks.cn/help/matlab/ref/gplot.html sparsehttps://ww2.mathworks.cn/help/matlab/ref/sparse.html?requestedDomain=zh稀疏矩阵 fullhttps://ww2.mathworks.cn/help/matlab/ref/full.html稀疏矩阵转满矩阵 eigs求解特征值参数sa（最小代数特征值，使用Krylov维数子空间法）、sm、sr（最小实特征值）、la、lm、lr不同的参数对应不同的特征值求解方法，对于很多复杂大型矩阵特征值的求解都是用数值解，方法各异。 eig求解特征值 示例示例代码1及效果图：1234567load airfoil.matA = sparse(i,j,1,4253,4253)A = A + A'gplot(A,[x,y])L = lab(A)[v,d] = eigs(L,4,'sa')gplot(A,v(:,[2:4]),'r') 示例代码2及效果图：12345L = lab(W) #求拉普拉斯矩阵[v,d] = eigs(L,5,'sa') #求最小的5个特征值gplot(W,v(:,[2:5]),'-*')#以最小4个特征值对应的特征向量为坐标绘制谱图gplot(W,v(:,[2:4]),'r') #以最小3个特征值对应的特征向量为坐标绘制谱图title('Shanghai POI network')#图形标题 扩展Matlab调用java API]]></content>
      <tags>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[地理空间分析python常用包]]></title>
    <url>%2F2018%2F12%2F28%2F%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90python%E5%B8%B8%E7%94%A8%E5%8C%85%2F</url>
    <content type="text"><![CDATA[0x00 GIS python包汇总 GDAL（https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal）访问处理空间数据的库，非纯净python脚本包，安装途径非常规 Shapely通用几何库 Fiona（https://www.lfd.uci.edu/~gohlke/pythonlibs/#fiona）OGR库的简介访问API pyproj（http://code.google.com/p/pyproj/）对点进行地图投影转换 geopandas（http://geopandas.org/install.html） mapnik 0x01 shapefile基本操作0x02 shapefile高端操作0x03 网络分析进阶概念 网络表示学习知乎网络表示学习概述：https://zhuanlan.zhihu.com/p/32504175Must-read papers on NRL/NE：https://github.com/thunlp/NRLPapers 包汇总 networkx官网：https://networkx.github.io/维基百科：https://en.wikipedia.org/wiki/NetworkX文档：https://networkx.github.io/documentation/latest/ node2vecGithub_aditya-grover:https://github.com/aditya-grover/node2vecGithub_eliorc:https://github.com/eliorc/node2vec机器之心:https://www.jiqizhixin.com/articles/2017-10-28-3 struc2vechttp://jackieanxis.coding.me/2018/01/17/STRUC2VEC/Github：https://github.com/leoribeiro/struc2vecKDD2017:https://www.kdd.org/kdd2017/Youtube_KDD2017：https://www.youtube.com/watch?v=5usgZOTy0YY知乎网友：https://zhuanlan.zhihu.com/p/42559966 openNE（用于网络嵌入的开源库）Github：https://github.com/thunlp/OpenNE gudhi（拓扑数据分析包）]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《女士品茶》读后感]]></title>
    <url>%2F2018%2F12%2F28%2F%E3%80%8A%E5%A5%B3%E5%A3%AB%E5%93%81%E8%8C%B6%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F%2F</url>
    <content type="text"><![CDATA[近几百年来似乎每个世纪都有大变革，从科学与工程的角度来看，20世纪最激动人心的革命似乎就是统计革命。以前从没有仔细思考“概率”究竟意味着什么，是否有必要存在。但现在它确实存在，并且深刻地影响着我们的生活。所谓哲学，就是要发现人们共同的认知背后的基本假设，然后通过研究这个基本假设的合理性来试图改善人们的认知水平以及行为。而认可概率，就像是认同“上帝掷骰子”的基本假设，基于这个假设，要想测度上帝的旨意，就需要学好统计，而非祈求。]]></content>
      <categories>
        <category>随便说说</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Question For 2018-12]]></title>
    <url>%2F2018%2F12%2F21%2FQuestion-For-2018-12%2F</url>
    <content type="text"><![CDATA[0x00 Math网络分析广义逆矩阵有何作用？广义特征问题是对什么问题的抽象？什么是线性可分？归一化的用处？如果数据各个维度的单位不同，或者量级不同，简单的欧式距离就不能衡量数据之间真实的差异，因为不同类型的数据不能简单地用同一个尺度的便准评判。此时可以考虑归一化，使得不同单位的数据也具有可比性。 高斯相似函数对于反映高维数据相似性而言性能如何？为什么说谱聚类的相似函数即使在全局层面上性能不是很好也不太重要？谱聚类中聚类数应该如何选择找到最小的几个特征值（遇到“突然剧增”/最大特征间隙停止） 谱聚类控制邻域的参数选择有原则吗？何为谱特性？矩阵的谱半径对于矩阵分析有何意义？建立层级性的相似度量作为聚类特征，如何建立为好？对于一个图而言最小正特征值、第二特征值、最大非负特征值的含义是?网络的小世界理论是？PageRank中转移矩阵与马尔可夫链中转移矩阵一致吗？极限概率分布描述的是什么？DeepWalk、LINE、Node2Vec、SDNEhttps://blog.csdn.net/u013527419/article/details/76017528 复杂网络https://www.cnblogs.com/maybe2030/p/4665847.html 0x01 OS虚拟内存的作用是？其工作方式如何？0x02 Web滑动窗口协议工作过程如何应对大规模的客户端请求？0x03 DataStructure10亿个数据如何较快地取出最小的十个？0x04 SoftwareArcGIS空间统计工具失效原因：python版本冲突，arcgis采用的是python2.7，电脑中存在其他版本的python且环境隔离没做好时会出现访问冲突。解决办法：将python3从搜索路径中删除，之后重启电脑。理论上这样子应该可以了，但重启ArcGIS时却提示需要重新验证许可。真实原因是某个必要进程被防火墙阻挡了，暂时关闭防火墙启动相关进程就可以成功启动arcgis了，再开启防火墙之后也可以正常运行了。 0x05 GEE对于有的遥感数据集使用边缘检测或计算NDVI看起来没变化的原因？0x06 RSNDVI的由来？]]></content>
      <tags>
        <tag>Question</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高德地图Js API总结]]></title>
    <url>%2F2018%2F12%2F21%2F%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BEJs-API%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 API分类文档https://lbs.amap.com/api/webservice/guide/api/searchhttps://lbs.amap.com/api/webservice/guide/api/search#polygonhttps://lbs.amap.com/api/webservice/guide/api/convert/ 0x01 分类示例 坐标转化https://restapi.amap.com/v3/assistant/coordinate/convert?key=您的key&amp;locations=116.481499,39.990475|116.481499,39.990375&amp;coordsys=gps 多边形搜索https://restapi.amap.com/v3/place/polygon?polygon=116.460988,40.006919|116.48231,40.007381|116.47516,39.99713|116.472596,39.985227|116.45669,39.984989|116.460988,40.006919&amp;keywords=kfc&amp;output=xml&amp;key=&lt;用户的key&gt; 关键字搜索http://restapi.amap.com/v3/place/text?&amp;keywords=%E5%A4%A7%E5%AD%A6&amp;city=%E4%B8%8A%E6%B5%B7&amp;output=json&amp;offset=20&amp;page=1&amp;key=9f99fc570ccaf6abc209780433d9f4c1&amp;extensions=all 0x02 常用python解析文件库 json文件 csv文件 xml文件 0x03 部分代码上海市POI兴趣：地名、坐标、地址、类型、所在区、123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687'''简单高德爬虫示例'''class POIController(object): def __init__(self,key): self.key = key self.keyword = '' self.city = '' self.offset = '' self.page = '' self.extension = 'all' self.url = '' self.json = '' self.file = '' print('-------初始化成功-------') ''' 设置属性：爬取参数 ''' def setproperties(self,city,keyword,offset,page,extension='all'): self.keyword = keyword self.city = city self.offset = offset self.page = page self.extension = extension self.url = 'http://restapi.amap.com/v3/place/text?&amp;keywords='+self.keyword+'&amp;city='+self.city+'&amp;output=json&amp;offset='+str(self.offset)+'&amp;page='+str(self.page)+'&amp;key='+self.key+'&amp;extensions='+self.extension ''' 返回文本 ''' def url2text(self): req = requests.get(self.url) text = json.loads(req.text) return text ''' 返回json ''' def text2json(self,text): self.poi = self.url2text().get('pois') print('poi字典大小：%d'%len(self.poi)) return self.poi ''' 把POI的数据进行整理 ''' def json2plain(self,p): name = p.get('name') type = p.get('type') address = p.get('address') location = p.get('location') result = name + ',' + type + ',' + location + ',' + address + '\n' return result def poi2txt(self,fname='test.txt'): f = open(fname,'w+') for p in self.poi: f.write(self.json2plain(p)) f.close() def poi2txt(self,mpage): self.url = 'http://restapi.amap.com/v3/place/text?&amp;keywords='+self.keyword+'&amp;city='+self.city+'&amp;output=json&amp;offset='+str(self.offset)+'&amp;page='+str(mpage)+'&amp;key='+self.key+'&amp;extensions='+self.extension text = self.url2text() poi = self.text2json(text) for p in poi: self.file.write(self.json2plain(p)) def poi2txtplus(self,pages,fname='poires.txt'): self.file = open(fname,'a+') if(len(pages)&lt;0): print('传入错误') for p in pages: self.poi2txt(p) def poi2file(self, mpage,poitype): self.url = 'http://restapi.amap.com/v3/place/text?&amp;keywords=' + poitype + '&amp;city=' + self.city + '&amp;output=json&amp;offset=' + str( self.offset) + '&amp;page=' + str(mpage) + '&amp;key=' + self.key + '&amp;extensions=' + self.extension text = self.url2text() poi = self.text2json(text) for p in poi: self.file.write(self.json2plain(p)) def poi2txtplus(self, pages, poitype,fname): self.file = open(fname, 'a+') if (len(pages) &lt; 0): print('传入参数错误') for type in poitype: for p in pages: print('爬取内容:%s %s 页码-%d' % (city, type, p)) self.poi2file(p,str(type)) 0x04 别人的文章高德分类代码总结：https://wenku.baidu.com/view/fc0805ed51e2524de518964bcf84b9d528ea2c1f.html获取矩形范围POI：https://www.cnblogs.com/sparrowjack/p/5151477.html根据关键字在城市范围搜索：https://blog.csdn.net/qq_34464926/article/details/79128211]]></content>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google Earth Engine入门]]></title>
    <url>%2F2018%2F12%2F19%2FGoogle-Earth-Engine%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[0x00 任意门https://earthengine.google.com/GEE FAQs：https://earthengine.google.com/faq/GLOBAL-SCALE INSIGHT：https://earthengine.google.com/timelapse/READY-TO-USE DATASETS：https://developers.google.com/earth-engine/datasets/API：https://developers.google.com/earth-engine/#apiCode Editor：https://developers.google.com/earth-engine/playgroundCase Studies：https://earthengine.google.com/case_studies/Github：https://github.com/google/earthengine-api/tree/master/python/examples/py/FeatureCollection 0x01 云平台使用云平台js版网上中文教程入门系列快报：https://kuaibao.qq.com/s/20180613G20Q8100?refer=spiderGEE学习大纲：https://zhuanlan.zhihu.com/p/29000384GEE学习笔记：https://www.douban.com/note/650833160/ 小功能教程GEE生成图例：https://zhuanlan.zhihu.com/p/31186964计算多边形面积：https://www.earthdatascience.org/tutorials/basic-polygon-operations-google-earth-engine/ 网上英文教程Landsat算法https://developers.google.com/earth-engine/landsat 监督学习https://developers.google.com/earth-engine/classification 非监督学习https://developers.google.com/earth-engine/clustering 云平台Python环境环境搭建安装鉴权验证依赖库1pip install pyCrypto 安装earth engine api12pip install google-api-python-clientpip install earthengine-api Fail install pycrypto, install pycryptodome instead.1pip install pycryptodome 初始化账户1python -c “import ee; ee.Initialize()&quot; 运行一下命令，获取验证信息码1earthengine authenticate 0x02 论文汇总森林植被类《2015 Mapping woody vegetation clearing in Queensland, Australia from Landsat imagery using the Google Earth Engine.pdf》 城市用地类《2017 Mapping major land cover dynamics in Beijing using all Landsat images in Google Earth Engine.pdf》《2016 Detecting the Boundaries of Urban Areas in India- A Dataset for Pixel-Based Image Classification in Google Earth Engine.pdf》 0x03 辅助工具高德坐标拾取：https://lbs.amap.com/console/show/picker 0x04 公开数据集遥感图像数据库https://blog.csdn.net/Javahaoshuang3394/article/details/41418569 网站汇总https://blog.csdn.net/ufv59to8/article/details/80193950https://blog.csdn.net/vbskj/article/details/80403055https://blog.csdn.net/haoji007/article/details/80565110 分门别类训练数据集武汉大学深度学习数据集：https://download.csdn.net/download/u010656161/10153410UC Merced Land Use Dataset：http://weegee.vision.ucmerced.edu/datasets/landuse.htmlRoad and Building Detection Datasets：https://www.cs.toronto.edu/~vmnih/data/ DOTA: A Large-scale Dataset for Object Detection in Aerial Images：http://captain.whu.edu.cn/DOTAweb/index.html DeepGlobe卫星图像地表解析(道路提取、建筑物检测、地标分类)挑战赛：http://deepglobe.org/challenge.html 0x05 实战 https://hackmd.io/s/BJQI_VoWE 0x06 代码切片绘制波谱图12345678910111213141516171819202122232425262728293031323334353637383940414243444546// Load and display a Landsat 8 image's reflective bands.//LANDSAT/LC08/C01/T1_TOA/LC08_026047_20140216//LANDSAT/LC08/C01/T1_SRvar start = '2018-01-09';var end = '2019-01-09';var landsat_sr = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR').filterDate(start,end).sort('CLOUD_COVER');var image = landsat_sr.mean().select(['B[1-7]']);var clipjjd = image.clipToCollection(cjjjd);// Map.addLayer(image, &#123;bands: ['B5', 'B4', 'B3'], min: 0, max: 0.5&#125;,'image');Map.addLayer(clipjjd, &#123;bands: ['B4', 'B3', 'B2']&#125;,'cjjjd');Map.centerObject(clipjjd);// Define and display a FeatureCollection of three known locations.var points = ee.FeatureCollection( [ water, vegetation, urban ] );//water.merge(vegetation).merge(urban);Map.addLayer(points,&#123;&#125;,'point');// Define customization options.var options = &#123; title: '长江经济带区域POI波谱图', hAxis: &#123;title: 'Wavelength (micrometers)'&#125;, vAxis: &#123;title: 'Reflectance'&#125;, lineWidth: 1, pointSize: 4, series: &#123; 0: &#123;color: '00FF00'&#125;, // water 1: &#123;color: '0000FF'&#125;, // vegetation 2: &#123;color: 'FF0000'&#125;, // urban&#125;&#125;;// Define a list of Landsat 8 wavelengths for X-axis labels.var wavelengths = [0.44, 0.48, 0.56, 0.65, 0.86, 1.61, 2.2];// Create the chart and set options.var spectraChart = ui.Chart.image.regions( image, points, ee.Reducer.mean(), 30, 'label', wavelengths) .setChartType('LineChart') .setOptions(options);// Display the chart.print(spectraChart);Export.table.toAsset(points,'测试波谱图data');]]></content>
      <categories>
        <category>GIS</category>
      </categories>
      <tags>
        <tag>MachineLearning</tag>
        <tag>RemoteSensing</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树数据结构总结]]></title>
    <url>%2F2018%2F12%2F19%2F%E6%A0%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 树0x01 二叉树二叉树的特点 每个结点最多只有2个子节点 二叉树的创建鉴于在使用二叉树的场景中，往往不知道某个结点之下会有多少层的子树，所以通常采用递归的方式创建二叉树。 先序创建中序创建二叉树的遍历按照树结点的遍历顺序，可分为：前序遍历、中序遍历、后序遍历、层次遍历 前序遍历按照根节点-&gt;左子树-&gt;右子树的顺序进行遍历1//非递归实现前序遍历，使用一个栈来模拟函数调用过程 中序遍历按照左子树-&gt;根节点-&gt;右子树的顺序进行遍历1//非递归实现中序遍历 后序遍历按照左子树-&gt;右子树-&gt;根节点的顺序进行遍历 层次遍历0x02 二叉搜索树二叉搜索树特点根节点的值要大于左子节点的值，小于右子节点的值，在二叉搜索树上搜索某一个值，其实就是二分搜索。最大搜索次数为树的高度。 二叉搜索树实现经典二叉搜索树二叉搜索树变种0x03 哈夫曼树哈夫曼树特点哈夫曼树又称最优二叉树，是一种带权路径长度最短的二叉树。常可用作无损压缩。 每个结点只有0或2各子节点 同一组权值得到的哈夫曼树可能不唯一 权值越大的结点越靠近哈夫曼树的根节点，权值越小的结点越原理哈夫曼树的根节点 一棵有n各叶子结点的哈夫曼树共有2n-1个结点 带权值的结点都是叶子结点，不带权值的结点都有子结点 哈夫曼树构建此处把哈夫曼树构建过程分为2个步骤：数据组织、构建树 数据组织数据组织包括对原始数据的预处理，如原始数据是一段字符串，考虑使用什么数据结构对字符串中的字符及其发生频率进行组织，发生频率越高的字符认为其权重越大，于是对其“特殊照顾”。如使用链表或数组组织每个字符，每个节点的数据结构可如下：123456789101112131415161718192021222324package com.coolcats.tree;/** * 哈夫曼树二叉树节点 * @author CoolCats */public class Node &#123; public Node left,right;//左子节点 public int weight; //右子节点 public String data; // 数 据 public Node() &#123; &#125; public Node(String data,int weight) &#123; this.data = data; this.weight = weight; &#125; public String toString() &#123; return this.data+":"+this.weight; &#125;&#125; 而后对节点列表按照其权重大小进行排序，不失一般性，此处升序排序:12345678910111213141516171819202122232425/** * 列表排序 * * @param list */ private void sortList(ArrayList&lt;Node&gt; list) &#123; Node minNode = null; Node jNode = null; for (int i = 0; i &lt; list.size() - 1; i++) &#123; int min = i; for (int j = i + 1; j &lt; list.size(); j++) &#123; minNode = list.get(min); jNode = list.get(j); if (minNode.weight &gt; jNode.weight) &#123; min = j; &#125; &#125; if (min != i) &#123; Node tmpNode = list.get(i); list.set(i, list.get(min)); list.set(min, tmpNode); &#125; &#125; &#125; 构建树得到了排序后的列表后，就可以构建树了，由于哈夫曼树的特点，小权值的节点尽可能远离根节点、大权值的节点尽可能靠近根节点，并且无法预估根节点到底在什么高度上，所以只能采用自底向上的方式构建哈夫曼树。具体步骤为 输入排序后的列表， 判断列表个数是否大于1，如果是，从中取出最小的两个元素，构造父节点，如果否，跳到4 将父节点添加到列表中，对列表重新排序，回到2 将列表中最后一个元素作为哈夫曼树根节点如此便可得到哈夫曼树 哈夫曼压缩所谓哈夫曼压缩，就是利用哈夫曼树的性质实现对文件的无损压缩。通常来说，数据在计算机中的存储按字节来计算，一个ascii码字符占一个字节，一个汉字字符占2个字节，这种每个字符都通过相同来表达的编码形式称为定长编码。而哈夫曼压缩就是通过变长编码的方式实现对文件的压缩，其思想是根据字符出现的概率来确定编码的长度，出现概率大的字符采用较短的编码来存储，出现概率小的字符采用较长的编码来存储。 哈夫曼压缩实现对于哈夫曼压缩可靠性而言最关键的保证是：任何一个字符的编码前缀都不能是另一个字符的编码。如果将一个节点到其左节点的路径标记为0，到其右节点的路径标记为1，那么，从根节点到每一个叶子节点所得到的哈夫曼编码是唯一的，且任一哈夫曼编码不是其他编码的前缀，满足条件。因此，实现压缩功能只要计算出每个字符的哈夫曼编码即可。在遍历哈夫曼树的同时计算哈夫曼编码的代码如下：12345678910111213141516171819202122/** * 后序遍历的同时标记每个节点的哈夫曼编码 * * @param root * @param code */private void postOrder(Node root, String code) &#123; if (root.left != null) // 左路径标记为0 postOrder(root.left, code + "0"); if (root.right != null) &#123; // 右路径标记为1 postOrder(root.right, code + "1"); &#125; // 输出哈夫曼树叶子节点编码 if (root.left == null &amp;&amp; root.right == null) &#123; System.out.println(root.data + "&lt;&gt;" + code); // 将各个字符的哈夫曼编码存储 map.put(root.data, code); map1.put(code, root.data); &#125;&#125; 于是，在存储一个字符串时，只需要遍历这个字符串，取出每个字符对应的哈夫曼编码，每8位作为一个字节存储到文件中即可实现压缩，但要注意，哈夫曼编码的组合并不一定是8的整数倍，这可以通过“补0”来解决，所以存储压缩文件的时候还要把补0的个数记下，以便解压缩。一个demo版的代码如下：123456789101112131415161718192021222324252627282930313233343536373839/** * 根据给定的路径以及哈夫曼编码将哈夫曼码存进相应的文件中 要存入压缩文件的信息，补了多少个0* （demo版，效率较低）* @param path 压缩文件的路径* @param code 哈夫曼编码 */private void hfcode2file(String path, String code) &#123; int len = code.length(); System.out.println("哈夫曼编码长度：" + len); int comple = 8 - len % 8; if (comple &lt; 8) &#123; for (int i = 0; i &lt; comple; i++) &#123; code = code + "0"; &#125; &#125; OutputStream out = null; DataOutputStream dout = null; File file = new File(path); try &#123; out = new FileOutputStream(file); dout = new DataOutputStream(out); int count = (len + comple) / 8; byte[] b = code.getBytes(); dout.writeInt(comple); dout.write(b); &#125; catch (FileNotFoundException e) &#123; e.printStackTrace(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; try &#123; out.close(); dout.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; System.out.println("压缩文件完成"); &#125;&#125; 解压缩就是根据读取文件的位，每读到一个哈夫曼编码（使用哈希表，判断是否存在对应的key）就返回其对应的字符，一直到文件末尾。12345678910111213141516171819202122232425/** * 解压缩 * @param path * @return */private String file2hfcode(String path) &#123; String code = null; InputStream in = null; DataInputStream din = null; int comple; File file = new File(path); try &#123; in = new FileInputStream(file); din = new DataInputStream(in); comple = din.readInt(); byte[] bb = new byte[1024]; int res = din.read(bb); code = hfcode2String(bb,res,comple); &#125; catch (FileNotFoundException e) &#123; e.printStackTrace(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; return code;&#125; 问题思考 哈夫曼树的压缩效率如何？ 哈夫曼树压缩在什么场景下不适用？ 考虑包含中文等非英文国家字符的文件压缩应该如何实现？字典压缩（LZ77，LZ88，LZW等） 0x04 参考文献哈夫曼编码维基百科：https://zh.wikipedia.org/wiki/%E9%9C%8D%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81LZW编码维基百科：https://zh.wikipedia.org/wiki/LZWLZW压缩算法：https://segmentfault.com/a/1190000011425787]]></content>
      <categories>
        <category>DataStructure</category>
      </categories>
      <tags>
        <tag>DataStructure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中IO流相关知识点总结]]></title>
    <url>%2F2018%2F12%2F08%2FJava%E4%B8%ADIO%E6%B5%81%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 文件与IO流所谓IO流及输入（Input）输出（Output）流，输入指的是数据从外部设备到内部程序的传输过程，输出指的是数据从内部程序到外部设备的传输过程。常见的输入设备有鼠标、键盘等，常见输出设备有显示器、打印机等。 Java根据IO流把文件分为两大类：字符文件和二进制文件。针对不同的文件有不同的功能类。针对字符文件有Reader、Writer；针对二进制文件有字节流、缓冲流、数据流、对象流的操作方式，具体类如下： 文本文件/字符文件 Reader FileReader BufferedReader Writer FileWriter BufferedWriter 二进制文件 InputStream（输入流） FileInputStream BufferedInputStream DataInputStream ObjectInputStream OutputStream（输出流） FileOutputStream BufferedOutputStream DataOutputStream ObjectOutputStream 0x01 字符流示例0x02 字节流示例0x03 性能对比测试0x04 总结Reader和Writer是兼容了unicode的IO流操作类；数据流可用于存储程序中的基本数据类型变量（byte、int、float、char等）；对象流则可以把自定义的对象存储（前提是该对象可序列化），但因为要把整个对象存储，所以占用的空间会比较大，从成本的角度看可能不是很友好。]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java异常处理知识点总结]]></title>
    <url>%2F2018%2F12%2F01%2FJava%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 异常概述异常是会导致程序非正常终止的对象。Java中的异常体系结构为 其中Error为致命的异常（系统内部异常），通常是由JVM抛出的，如OutOfMemoryError、StackOverFlowError等；程序员通常无法解决此类异常，但对于栈溢出这样Error，程序员可以通过优化代码逻辑来规避（不要挑战系统栈空间极限）；如下是递归引发栈溢出的代码示例：123456789public class TestStackOverFlow &#123; public static void main(String[] args) &#123; new TestStackOverFlow().test(); &#125; public void test() &#123; test(); &#125;&#125; Exception是程序设计上的异常，其诱因是程序逻辑设计上的缺陷，可分为IOException和RuntimeException。常见的有NullPointerException、ArrayIndexOutOfBound等。 如要对Java中的异常做一个分类，可分为检查异常和非检查异常。其中非检查异常 0x01 异常处理方式0x02 Debug技巧0x03 更多相关信息http://www.runoob.com/java/java-exceptions.html]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java字符串优化处理分析]]></title>
    <url>%2F2018%2F11%2F27%2FJava%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BC%98%E5%8C%96%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[0x00 问题字符串处理之于软件开发的重要性不用多说，但如何高效地处理字符串，却是很多人没有去考虑过的。通常，字符串对象或其等价对象(char数组)在内存中总是占据最大的空间块，因此，高效处理字符串是提升系统整体性能的一大关键。 思考下面几段代码： 以下三个输出分别会是什么？ 123456String s1 = "abc";String s2 = "abc";String s3 = new String("abc");System.out.println(s1==s2);System.out.println(s1==s3);System.out.println(s1==s3.intern()); 下面三个函数的运行时间谁会更长？ 12345678910111213141516171819202122232425262728static void testNormalPlus() &#123; long start = System.currentTimeMillis(); String res = ""; for (int i = 0; i &lt; 100000; i++) &#123; res = res + ":"; &#125; System.out.println("运行时间：" + (System.currentTimeMillis() - start));&#125;static void testBuilderAppend() &#123; long start = System.currentTimeMillis(); StringBuilder resb = new StringBuilder(); for (int i = 0; i &lt; 100000; i++) &#123; resb.append(":"); &#125; System.out.println("运行时间：" + (System.currentTimeMillis() - start));&#125;static void testBufferAppend() &#123; long start = System.currentTimeMillis(); StringBuffer resb = new StringBuffer(); for (int i = 0; i &lt; 100000; i++) &#123; resb.append(":"); &#125; System.out.println("运行时间：" + (System.currentTimeMillis() - start));&#125; 下面三个函数的情况又是怎样？ 12345678910111213141516171819202122232425262728static void testNormalPlus1() &#123; long start = System.currentTimeMillis(); String res = ""; for (int i = 0; i &lt; 100000; i++) &#123; res = res + i; &#125; System.out.println("运行时间：" + (System.currentTimeMillis() - start));&#125;static void testBuilderAppend1() &#123; long start = System.currentTimeMillis(); StringBuilder resb = new StringBuilder(); for (int i = 0; i &lt; 100000; i++) &#123; resb.append(i); &#125; System.out.println("运行时间：" + (System.currentTimeMillis() - start));&#125;static void testBufferAppend1() &#123; long start = System.currentTimeMillis(); StringBuffer resb = new StringBuffer(); for (int i = 0; i &lt; 100000; i++) &#123; resb.append(i); &#125; System.out.println("运行时间：" + (System.currentTimeMillis() - start));&#125; 0x01 实验工具 javapjavap是jdk自带的反汇编工具，可对class文件中的字节码进行解析，得到当前文件中类的本地变量表、异常表、代码行偏移量映射表、常量池等信息，工具常用参数如下：示例显示类成员、方法的用法（p参数） jd-guijd-gui是图形化Java反编译工具，有C++开发的版本，现也有jar包 eclipse（略） 0x02 分析1. 问题梳理对于问题1，其输出如下：以上输出表明，str1和str2引用了相同的地址，而str3重新开辟了一块内存空间。但str3在常量池中的位置与str1也是一样的。（intern方法返回String对象在常量池中的引用，这个方法是用C实现的） 对于问题2，其输出如下：表明，在通过对字符串常量作累加操作构建超大String时，+运算发的效率远远低于StringBuilder和StringBuffer类的append方法 对于问题3，其输出如下:表明，在通过对字符串变量作累加操作构建超大String时，+运算发的效率远远低于StringBuilder和StringBuffer类的append方法，并且StringBuilder的效率稍微优于StringBuffer 2. 原因分析为什么会发生上面所述的情况？Java中到底是如何实现+、StringBuilder、StringBuffer的？且借助工具分析分析。查看String的源代码可见，String类是被final修饰的，保存字符串内容的char数组也被final修饰。这说明，Java中的String对象具有不变性，即对象一经生成，就不能再对它进行改变，String对象也不会有子类。那么常见的看起来改变了String对象的操作如连接、分割、替换等到底是怎么实现的？看几个方法的实现：可见，以上几个看起来要改变字符串对象的方法实际上都没有改变字符串的对象，而是在需要的时候，返回了一个新的String对象，所以原来的String对象没有被改动，如果不需要了的话会由GC清理。 实际上，在Java中，当两个String对象拥有相同的值时，他们只引用常量池中的同一份拷贝，这样子，当同一个字符串反复出现时可以大幅度节省内存空间。也就是说，两个或多个String对象所在的内存地址可以是不一样的，但其指向的常量池中的实体可以是一样的，而String类中的intern方法就是用于获取String对象在常量池中的引用。 0x03 小结0x04 参考资料《Java程序性能优化》（清华大学出版社，葛一鸣）javap：https://www.jianshu.com/p/6a8997560b05jd-gui：https://www.oschina.net/p/jd-gui深入java String：https://blog.csdn.net/yabay2208/article/details/71548940]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中参数传递机制]]></title>
    <url>%2F2018%2F11%2F26%2FJava%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B8%AD%E7%9A%84%E6%9C%BA%E5%88%B6%2F</url>
    <content type="text"><![CDATA[0x00 Java中的数据类型Java中数据类型主要分两大类：基本数据类型和引用类型。其中，基本数据类型有byte、short、int、long、float、double、char、boolean引用类型有class、interface、abstract class定义的类、接口和抽象类 0x01 值传递与引用传递对于参数传递方法，通常可分为值传递和引用传递 值传递按值传递参数时，是将实参变量的值复制到另一个（临时）存储单元中，如果在这个过程中改变了形参的值，对于实参没有影响。基本数据类型的变量在传递时都是采用值传递 引用传递引用传递实际上传送的是变量所存储的首地址。因形参和实参共用内存中同一地址，所以形参中的值一旦被改变，实参也随之改变。引用类型变量在传递时一般是按照引用传递。 0x02 String的特殊性String是java.lang包中的一个不可更改的类，属于引用数据类型，但其在传递时具有特殊性。如下面代码123456789String str1 = new String("ABC");String str2 = str1;System.out.println("改变str2前");System.out.println("str1:"+str1);System.out.println("str2:"+str2);str2 = "HAHA";System.out.println("改变str2后");System.out.println("str1:"+str1);System.out.println("str2:"+str2); 如果在上面那段代码中str1是按照引用传递给str2，那么直觉上在改变了str2之后，str1的值也应该是HAHA，而实际上，输出的结果为：改变了str2后，str1并没有因此改变，看起来像不是引用传递产生的结果，那么会是值传递吗？再往下看：1234567String str1 = "Ha";String str2 = new String("Ha");if (str1 == str2) &#123; System.out.println("相等");&#125; else &#123; System.out.println("不相等");&#125; 以上输出的结果为不相等、相等，可见在进行str1==str2的比较时，并不是按照字符串的值进行比较的，当使用equals函数进行字符串比较时，才是对值进行比较。所以String类型的变量在进行运算时到底是取引用还是取值，还要看具体的情况。 0x03 附录String类中equals方法的源代码123456789101112131415161718192021public boolean equals(Object anObject) &#123; if (this == anObject) &#123; return true; &#125; if (anObject instanceof String) &#123; String anotherString = (String)anObject; int n = value.length; if (n == anotherString.value.length) &#123; char v1[] = value; char v2[] = anotherString.value; int i = 0; while (n-- != 0) &#123; if (v1[i] != v2[i]) return false; i++; &#125; return true; &#125; &#125; return false;&#125;]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序算法总结系列]]></title>
    <url>%2F2018%2F11%2F25%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E7%B3%BB%E5%88%97%2F</url>
    <content type="text"><![CDATA[0x00 排序问题概述0x00 快速排序采用递归调用对元素进行排序，算法步骤如下： 如果数组中仅有一个元素或者没有元素需要排序，则返回 任选数组中的一个元素作为枢纽（通常选择数组最左边的元素），把数组分成两部分，一部分的元素数值均小于枢纽值，另一部分的元素值大于枢纽值 对两部分数组递归调用该算法]]></content>
      <categories>
        <category>DataStructure</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>DataStructure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyGIS程序结构分析]]></title>
    <url>%2F2018%2F11%2F25%2FMyGIS%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[0x00 MyGIS功能介绍 地理坐标可视化读入WKT格式存储的点实体、线实体、面实体坐标信息，通过仿射变换将经纬度换算为屏幕坐标，并实现地图的放大、缩小和平移功能。 图层管理功能可开启或关闭某图层的显示与否 新建空间实体要素类自己绘制点、线、面，并将其坐标信息保存成相应的文件，可再次打开 0x01 软件架构 geom实现了OGC标准下的点、线串、线环、多边形 map ui 0x02 功能解析 地理坐标可视化 图层管理一个文件对应一种空间实体，一个图层关联一个文件 新建空间实体要素类 0x03 QGIS架构图0x04 难点总结当时写这个程序时]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TCP三次握手与四次挥手总结]]></title>
    <url>%2F2018%2F11%2F24%2FTCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 TCP协议简介TCP是运输成中面向连接的可靠运输协议。所谓面向连接，指的是使用TCP的两个应用进程必须在它们可交换数据之前建立一个连接（TCP连接），也就是所谓的“握手”。TCP依赖于差错检测、重传、累计确认、定时器以及用于序号和确认号的首部字段。 0x01 TCP与UDP的区别UDP是一种无连接的运输协议，RFC768定义的UDP只是做了运输协议所能做的最少工作。除了复用/分解功能以及少量的差错检测以外几乎没有对ip增加别的东西。UDP不能提供可靠数据传输服务，但这不代表TCP对于开发应用程序而言总是首选。TCP模型有一个拥塞控制机制，以便当源和目标主机间的一条或多条链路变得极度拥塞时来遏制运输层TCP发送方；并且，直到目的主机收到报文并加以确定，TCP会继续重新发送数据报文。而对于实时应用而言，通常要求最小的发送速率，不希望过分地延迟报文段的传送，且能容忍一些数据丢失，因此TCP服务模型就不太适合于此类应用的需要。总结起来，UDP的特点是： - 关于何时、发送什么数据的应用层控制更为精细 - 无需连接建立 TCP在开始数据传输之前要经过三次握手，而UDP不需要任何准备就可以进行数据传输，因此UDP不会引入建立连接的时延 - 无连接状态 TCP需要在端系统中维护连接状态。此连接状态包括接收和发送缓存、拥塞控制参数以及序号与确认号的参数。 - 分组首部开销小 每个TCP报文段都有20字节的首部开销，而UDP仅有8个字节的开销。 0x02 TCP头部当前为TCP头部定义了8个字段，它们中的一个或多个可被同时启用。 CWR拥塞窗口减（发送方降低它的发送速率） ECEECN回显（发送方接收到了一个更早的拥塞通告） URG紧急（紧急指针字段有效） ACK确认（确认号字段有效————连接建立以后一般都是启用状态） PSH推送（接收方应该尽快给应用程序传送这个数据） RST重置连接（连接取消，经常是因为错误） SYN用于初始化一个连接的同步序列号 FIN该报文段的发送方已经结束向对方发送数据 0x03 三次握手和四次挥手概括基于TCP协议的两个应用进程在进行数据传输之前要先建立连接，这个过程就是所谓的“三次握手”；当连接成功建立之后进行数据传输，再之后就是关闭连接，这时就需要“四次挥手”。 0x04 三次握手过程分析为了建立一个TCP连接，两个进程之间需要完成以下步骤： 主动开启者发送一个SYN报文段，并指明自己想要连接的端口号和它的客户端初始序列号 服务器服务器发送自己的SYN报文段进行响应，并包含了它的初始序列号；此外，为了确认客户端的SYN，服务器将其包含的ISN数值加1作为返回的ACK数值 客户端为了确认服务端的SYN，客户端将ISN的数值加1后作为返回的ACK数值。 通过发送以上3个报文段就可以完成一个TCP连接的建立。三次握手的目的不仅在于让通信双方了解一个连接正在建立，还在于利用数据包的选项来承载特殊的信息。 0x05 四次挥手过程分析“四次挥手”是关闭TCP连接的过程。连接的任何一方都可以发起关闭操作。TCP协议规定通过发送一个FIN段来发起关闭操作，只有当连接双方都完成关闭操作后，才构成一个完整关闭。 0x06 TCP连接建立、数据传输、连接关闭图例 0x07 为什么是三次握手四次挥手？0x08 问题 一个Web页面请求的过程 负载均衡器的实现为？ 参考资料《计算机网络》《TCP/IP协议》]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见设计模式总结（以Java为例）]]></title>
    <url>%2F2018%2F11%2F24%2F%E5%B8%B8%E8%A7%81%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93%EF%BC%88%E4%BB%A5Java%E4%B8%BA%E4%BE%8B%EF%BC%89%2F</url>
    <content type="text"><![CDATA[0x00 设计模式概念0x00 设计模式总览0x00 工厂模式0x00 抽象工厂模式0x00 单例模式0x00 MVC模式MVC模式即Model-View-Controller（模型-视图-控制器）模式。这种模式用于应用程序的分层开发。 参考文档菜鸟教程：http://www.runoob.com/design-pattern/design-pattern-tutorial.html《Java程序性能优化》]]></content>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[空间分析之聚类方法总结]]></title>
    <url>%2F2018%2F11%2F24%2F%E7%A9%BA%E9%97%B4%E5%88%86%E6%9E%90%E4%B9%8B%E8%81%9A%E7%B1%BB%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 聚类概况有句经典的老话叫“物以类聚，人以群分”，这其实描述的就是聚类。聚类起源于分类学，但又与分类有所不同，分类常常是事先准备好的标签，按照事物的性质特征为其分配相应的标签。而聚类则不然，事先不需要准备标签，而是提供一定的方法或条件，让相似的事物自发聚在一起成为一类。正如志同道合的人通常会聚在一起，不是因为别人为其贴上的标签或强制的凑合，而是在其思想交流活动中双方被互相吸引自然聚集。所以，不论数据科学上聚类作为一种方法被正式提出的时间，自然界中聚类的现象便早已存在，而现在，聚类已成为最广泛适用的探索性数据分析技巧之一，其应用领域横跨统计学、计算机科学、生物科学、社会科学、心理学等学科。事实上，在所有需要处理经验数据的科学上，人们都希望以识别数据中“类似行为”的群体来获得对数据的第一印象。 0x01 聚类方法概述 基于划分的聚类方法划分聚类的核心思想在于：给定聚类数k，不断地迭代优化某个划分准则，直到将整个数据集收敛地划分为k个类簇。示例：Kmeans 基于密度的聚类方法基于密度的聚类方法适用于认为类簇是被低密度区域分割的高密度对象区域。示例：DBSCAN 基于层次的聚类方法层次聚类方法的主要思想是把空间实体分为==构成一棵聚类树，通过反复分裂和聚合操作来获得满足一定要求的空间聚类结果。示例：WARD 基于图论的聚类方法 基于模型的聚类方法认为数据集由混合概率分布组成，每种概率分布代表一个类簇示例：EM算法 基于格网的方法 0x02 聚类趋势分析通常我们对数据进行分析，希望是能够直击要害，有的放矢，而不是东一榔头西一棒槌的不明确自己真正的目标，其中对于聚类而言，我们不希望总是陷入顽劣的结果当中。于是，在决定是否要聚类、采用何种聚类方式之前，先对数据进行聚类趋势探索是一种很不错的选择，它让我们提前对数据的整体趋势有了先验的印象，这有利于我们在后面对聚类结果进行解释。 常用的聚类趋势探索方法有： 空间自相关分析 其它分析 0x03 聚类性能评价聚类性能评价，即通过某种度量方式来评估聚类结果的好坏。我们理想中的聚类结果应该要达到“簇间相似性小，簇内相似性大”的效果，那么聚类性能评价也是围绕着这样一个指示来进行的。 通常来说，聚类性能的度量有两种，一种是外部指标（external index），一种是内部指标（internal index）.其中外部指标是把聚类结果与某个参考模型进行比较，内部指标是直接考察聚类结果而不利用已有的外部参考模型。 外部指标评价法 Jaccard系数（简称JC） FM指数（简称FMI） Purity F-measure 内部指标评价法 CH指标 DB指数（简称DBI）对于环形聚类评测较差。 Dunn指数（简称DI） SD指数基于簇的平均离散度和簇的总分离度进行定义。 相对评价法采用不同参数多次聚类，选择其中最好的一个聚类 0x04 KMeans详细分析KMeans是经典的基于划分的聚类方法，在1955年被第一次正式提出。其步骤为：随机选择k各聚类中心，对于剩余实体按照距离最近原则分配给各聚类中心，而后更新聚类中心，重复迭代此操作直到最大迭代次数或继续迭代变化小于某个阈值。 其中，最为关键的两个地方就是距离最近以及更新聚类中心。以什么作为距离的度量呢？要知道距离有欧式距离、曼哈顿距离、汉明距离、余弦距离、KL距离等，针对不同的问题适用的距离就不一样。同样，聚类中心的更新方法也不是唯一固定的，KMeans中最为经典的就是以到类簇中所有点的均值点作为新的聚类中心，但这样子新聚类中心的确定受离群点的影响可能过大，所以后面又有人作出来改进：选择到其余各点距离之和最小的点作为新的聚类中心，这种方法能确保新的聚类中心是已知点之一（实际上这个点就相当于中位数），不至于使得聚类中心被显著离群的异常点拉离类簇整体。 使用KMeans聚类法需要面临的一个关键问题是，聚类数k应该如何选取？如果是对数据具有先验的知识，那么问题不大；如果事先对数据不够了解，那么就需要对数据进行探索分析。2、3维的情况自不必说，将数据可视化便可以直观地判断，倘若不能直观地看出应有的类簇数目或者维数过高无法可视化，那么就可以借助另外的方法来探索合适的聚类数。比较常用的方法有肘部法则。 实际问题 0x05 谱聚类详细分析谱聚类已经成为最流行的现代聚类算法之一，它容易实现，可用标准的线性代数工具求解，在效果上经常超越传统的聚类算法如KMeans。初见谱聚类，总觉得她有点神秘，尽管能看到她很奏效，但却很难窥见其内涵所在。要理解谱聚类的思想，需要弄清楚图拉普拉斯算子以及其基本性质。接下来将给出几种最常见的谱聚类算法，并从用不同方法推导之。最后，将讨论不同谱聚类算法的优缺点。 数学上的东西 相似图（similarity graphs） 特征值与特征空间 规范化矩阵 图拉普拉斯矩阵（graph Laplacians） 谱聚类思想为什么谱聚类奏效方法 图切 随机游走 摄动理论 实际问题 扩展0x06 node2vec算法详细分析https://hackmd.io/s/r1NiHFeM41234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768''' this program is copied from Stanford open source program''' def main(args): ''' Pipeline for representational learning for all nodes in a graph. ''' nx_G = read_graph() G = node2vec.Graph(nx_G, args.directed, args.p, args.q) G.preprocess_transition_probs() walks = G.simulate_walks(args.num_walks, args.walk_length) learn_embeddings(walks) def preprocess_transition_probs(self): ''' Preprocessing of transition probabilities for guiding the random walks. ''' G = self.G is_directed = self.is_directed alias_nodes = &#123;&#125; for node in G.nodes(): unnormalized_probs = [G[node][nbr]['weight'] for nbr in sorted(G.neighbors(node))] norm_const = sum(unnormalized_probs) normalized_probs = [float(u_prob)/norm_const for u_prob in unnormalized_probs] alias_nodes[node] = alias_setup(normalized_probs) alias_edges = &#123;&#125; triads = &#123;&#125; if is_directed: for edge in G.edges(): alias_edges[edge] = self.get_alias_edge(edge[0], edge[1]) else: for edge in G.edges(): alias_edges[edge] = self.get_alias_edge(edge[0], edge[1]) alias_edges[(edge[1], edge[0])] = self.get_alias_edge(edge[1], edge[0]) self.alias_nodes = alias_nodes self.alias_edges = alias_edges return def simulate_walks(self, num_walks, walk_length): ''' Repeatedly simulate random walks from each node. ''' G = self.G walks = [] nodes = list(G.nodes()) print('Walk iteration:') for walk_iter in range(num_walks): print str(walk_iter+1), '/', str(num_walks) random.shuffle(nodes) for node in nodes: walks.append(self.node2vec_walk(walk_length=walk_length, start_node=node)) return walks def learn_embeddings(walks): ''' Learn embeddings by optimizing the Skipgram objective using SGD. ''' walks = [map(str, walk) for walk in walks] model = Word2Vec(walks, size=args.dimensions, window=args.window_size, min_count=0, sg=1, workers=args.workers, iter=args.iter) model.wv.save_word2vec_format(args.output) return 0x07 EM算法详细分析0x08 各种距离矩阵适用情况 欧式距离 归一化欧式距离 相关系数距离 余弦距离 汉明距离 KL散度 0x09 聚类是一种艺术还是一门科学0x10 FAQs 拉普拉斯矩阵存在小于0的特征值原因？数据精度问题，运算后python和matlab均以极小的值代替0 特征值为0或者说特征值最小的几个值对应的几个点或实体（the first k eigvector）可以理解为类簇的边界吗？ 谱聚类中拉普拉斯矩阵的含义是？ 由于高维数据难以可视化的原因，多数情况下对于高维数据进行谱聚类的结果的评价是否只能通过某些评价指数来评价？ 矩阵的规范化解决了什么问题？对于谱聚类拉普拉斯矩阵的规范化解决了什么问题？ 如何探测谱聚类的聚类数？最大eigengap。 如何评价对高维数据的聚类结果？ 各种距离适用于什么情况？ 各种聚类评价指标分别适用于什么情况？ 数据的相似性从不同角度看有不同的认知，如何建立一个层级性的聚类相似性度量指标？ 0x11 参考资料 谱聚类谱聚类：《Spectral Clustering a Tutorial》刘建平Pinard博客：https://www.cnblogs.com/pinard/p/6221564.html（实际上是部分翻译了《Spectral Clustering a Tutorial》，但缺少对拉普拉斯矩阵的讨论，不过是中文所以可能看起来比较方便？） Birch论文：https://webdocs.cs.ualberta.ca/~zaiane/courses/cmput695-00/papers/birch.pdf刘建平Pinard博客：https://www.cnblogs.com/pinard/p/6179132.html知乎网友_Birch：https://zhuanlan.zhihu.com/p/22458092Birch_PPT：https://pdfs.semanticscholar.org/2364/b2c611b09c4758d4059219017157a57cf3cd.pdf 聚类有效性评价Matlab提供了评价聚类的方法evalclusters，可通过参数DaviesBouldin/gap/CalinskiHarabasz/silhouette等按照不同的指标进行聚类评价。论文：《Internal versus External cluster validationindexes》漫谈Clustering：http://blog.pluskid.org/?p=407知乎网友：https://zhuanlan.zhihu.com/p/38668500 F-measure博客：https://blog.argcv.com/articles/1036.c S_dbw（据说该方法的鲁棒性算是众多评价方法中最高的）原论文：https://pdfs.semanticscholar.org/dc44/df745fbf5794066557e52074d127b31248b2.pdf Davies–Bouldin_index维基百科：https://en.wikipedia.org/wiki/Davies%E2%80%93Bouldin_index sklearn.metric APIhttps://scikit-learn.org/stable/modules/classes.html 特征值论文：《Eigenvalues of graphs》CSDN网友博客_特征值和特征向量的几何和物理意义：https://blog.csdn.net/dongtinghong/article/details/14216139 其他论文：《Data Clustering 50 Years Beyond K-means》百度百科高维数据：https://baike.baidu.com/item/%E9%AB%98%E7%BB%B4%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/3314852?fr=aladdin百度百科高维数据聚类分析：https://baike.baidu.com/item/%E9%AB%98%E7%BB%B4%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/3358628维基百科正交矩阵：https://zh.wikipedia.org/wiki/%E6%AD%A3%E4%BA%A4%E7%9F%A9%E9%98%B5维基百科特征值和特征向量：https://zh.wikipedia.org/wiki/%E7%89%B9%E5%BE%81%E5%80%BC%E5%92%8C%E7%89%B9%E5%BE%81%E5%90%91%E9%87%8F维基百科谱定理：https://zh.wikipedia.org/wiki/%E8%B0%B1%E5%AE%9A%E7%90%86维基百科图谱理论：https://en.wikipedia.org/wiki/Graph_theoryhttps://en.wikipedia.org/wiki/Spectral_graph_theory空间数据挖掘十大算法：https://wizardforcel.gitbooks.io/dm-algo-top10/content/k-means.html POI辅助站点腾讯位置大数据：https://heat.qq.com/document.php]]></content>
      <categories>
        <category>MachineLearning</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>GIS</tag>
        <tag>MachineLearning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java关键字相关知识点总结]]></title>
    <url>%2F2018%2F11%2F23%2FJava%E5%85%B3%E9%94%AE%E5%AD%97%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 概念首先区分两个概念：关键字和保留字。关键字指事先定义的，用来表示一种数据类型或者程序结构的对于编译器有特殊意义的“字符串”。而保留字则是预留的关键字，即现在还没有用到，但以后可能会作为关键字被使用。所以，认识关键字与保留字的一个基本的作用，起码就在于为变量命名时不至于与关键字冲突、或者与“未来的关键字”冲突（如果使用了关键字、保留字作为变量命名，比较智能的IDE是会报错的，但如果用记事本或者在线刷题那就不一定有这么好的福利了）。当然，要真正使程序高效、健壮，那就要深刻认识各个关键字的内在含义。 0x01 关键字总览目前而言，Java的关键字有50个，还有一些保留字。其中保留字包括：goto、const，这是C++中的关键字。而关键字可大致分为9类。清单如下： 包相关（2个）：import、package 访问控制相关（3个）：public、protected、private 类、接口、抽象类、对象相关（6个）：class、interface、abstract、implements、extends、new 数据类型相关（9个）：void、short、int、long、float、double、byte、char、boolean、null 异常处理相关（5个）：try、catch、finally、throw、throws 程序控制结构相关（13个）：if、else、switch、case、break、default、for、continue、while、do、return、instanceof 修饰类、方法、属性、变量相关（7个）：static、final、native、synchronized、transient、volatile、strictfp 变量引用相关（2个）：super、this 其他（2个）：assert、enum 0x02 包相关类似于C++中的命名空间，java提供了包机制用于区分不同组织、个人所编写的类，有效防止命名冲突，方便共享java程序。 package关键字声明编译单元属于某个类库。如果使用package语句，它必须是文件中除了注释以外的第一行语句。 import关键字导入包。 0x03 访问控制相关对于java而言，访问控制权限可分为：public、protected、默认的、private，上述四种访问权限的大小排序是从大到小的，其中默认访问控制权限没有关键字。 public接口访问权限 protected继承访问权限 private私有的 0x04类、接口、抽象类、对象相关 class定义类的关键字 interface定义接口的关键字。 abstract class定义抽象类的关键字 extends继承类或接口的关键字。类继承类，接口继承接口 implements实现接口的关键字。一个类实现了某个接口就必须要实现该接口下的所有方法。 new实例化对象。java完全采用了动态分配配内存的方式，即使用new关键字来动态创建对象实例，当对象不再被使用时，由垃圾回收器（GC）自动销毁对象，释放其占用的内存空间。 null表示空对象。 0x04 数据类型相关 void空返回类型，用于修饰函数。 byte字节类型，占8 bit。因java中byte类型默认是带符号的，所以其范围为-2^7~2^7-1，即-128~127。直接对两个byte类型的变量进行相加，其会自动转型为int，要对其进行强制转型。 short短整型，占16 bit。范围-2^15~2^15-1。即Short.MIN_VALUE~Short.MAX_VALUE。 int整型，占32 bit。范围-2^31~2^31-1。 long长整型，占64 bit。范围-2^63~2^63-1。尽管long的范围已经比较大了，但要求如斐波那契数列数值时，还是很容易失效，比如要求斐波那契数列第一百个数，就超出了long类型所能表示的范围，此时考虑使用大整数，java中提供了BigInteger类型。 float浮点型，占32 bit。 double双精度型，占64 bit。java中double和float都是以科学计数法的方式进行表示。 char字符型，16 bit。 boolean布尔类型，取值true or false。 0x05 异常处理相关 try捕获异常。 包含可能发生异常的语句块。 catch处理异常。包含对异常的处理，一般用于提示开发者代码中不对劲的地方。 finally指定不管是否发生异常都要执行的语句块。 throw抛出异常对象。 throws声明一个方法可能会抛出某种异常。（抛给调用该方法的地方） 0x06 程序控制结构相关if、else、switch、case、break、default、for、continue、while、do、return、instanceof 0x07 修饰类、方法、属性、变量相关 finalfinal表示最终的，其用于修饰的对象都不可更改。final可修饰的内容包括： 类 用final修饰的类不可被继承。 普通方法 用final修饰ide普通方法不可被重写。（构造方法本身就不可被重写） 属性、变量、常量、形参 不可被改变。当final修饰基本类型时，参数值在方法体中不可被改变；修饰引用类型时，参数变量所引用的对象也不可改变。 static一般来说，在创建类时，就是在描述那个类ide对象的外观和行为，在使用new创建对象之前，实际上并没有获得任何对象，只有当执行new之后，对象的数据存储空间才被分配，才可以被外界所调用。但如果希望特定的域不与类的任何对象关联在一起，即不创建对象也能够调用该方法，就可以考虑使用static关键字来修饰特定的域。当使用static关键字声明某个属性或方法时，就意味着这个域或者方法不会与包含它的那个类的任何对象实例关联在一起。用static修饰的域或者变量存储在静态存储区域，在类被创建时优先被加载到内存中。static可以修饰的内容包括 属性 常量 内部类 普通方法 要注意，static不能修饰构造方法。 代码块 用static修饰的代码块优先与构造方法执行 native用于扩展java程序的功能，告知JVM该方法在外部定义，一般配合。java在运行速度上比C++要慢，对访问操作系统底层的支持也不够好，因此可使用native声明某些方法是由其他语言实现的（如C++）。 volatile数据同步。 synchronized针对代码块的同步锁 transient瞬时的。 strictfp可用于类、接口或方法。使用strictfp关键字声明一个方法时，该方法中所有的float和double表达式都严格遵守FP-strict的限制，符合IEEE-754规范。 0x09 变量引用相关 super用于表示基类对象。 this用于表示当前对象。 0x10 其他关键字 assert断言，在代码中捕捉一些假设，看我们的假设是否成立，如果假设不成立，即断言中的布尔表达式为false，则会停止运行程序，抛出AssertionError错误（前提是要先支持断言），断言也可看作是更高级的异常捕获，主要在于它引入了程序猿的先验。Eclipse、MyEclipse中默认关闭断言，可在偏好设置中修改VM参数进行开启。 enum枚举。 0x11 问题 内部类 GC需要解决的问题：（1） 哪些对象需要被回收？（2） 何时回收这些对象？（3） 如何回收这些对象？]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性表总结]]></title>
    <url>%2F2018%2F11%2F13%2F%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%83%E4%B9%A0%E6%80%BB%E7%BB%93%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[0x00 线性表线性表是数据结构中最基本最简单的结构之一，其中的元素是一对一的对应关系。根据数据存储的方式特点，线性表基本可分为数组和链表两种。其中数组元素在内存空间的存储区域连续，链表元素在内存空间的存储区域非连续。对于线性表，常见的操作有添加元素、删除元素、插入元素、查找元素；对于以上操作，采用不同的数据结构实现就有不同的实现方式。对于数组而言，查找元素和添加元素相对简单，而插入和删除则需要移动大量元素，效率相对较低。对于链表而言，插入和删除元素相对简单，而查找和添加元素较之数组复杂（如果使用辅助节点记录下链表之尾，添加元素的时间复杂度也能下降，空间换时间罢了） 0x01 链表实现下面以Java为例实现一个链表。链表节点由数据域、引用域组成。链表的常见类型有 单链表 双向链表 循环链表 单链表考虑到应用链表数据结构的数据类型未知，所以应使用泛型实现链表，代码如下：1234567891011121314151617package com.linear;/** * 链表结点类 * @author CoolCats * @param &lt;E&gt; 泛型 */public class Node&lt;E&gt; &#123; public E e; //值 public Node&lt;E&gt; next;//下一个结点 public Node() &#123; &#125; public Node(E e) &#123; this.e = e; &#125;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149package com.linear;import com.dsinterface.LinkedInterface;/** * 实现链表基本操作 * @author CoolCats * * @param &lt;E&gt; */public class Linked&lt;E&gt; implements LinkedInterface&lt;E&gt; &#123; private Node&lt;E&gt; root;// 头结点 private Node&lt;E&gt; tail;// 尾节点 private int size;// 计算链表长度 public Linked() &#123; root = new Node&lt;&gt;(); &#125; /** * 添加结点 */ @Override public void add(E e) &#123;// Node node = root;//获取根节点：链表的起点 if (root.next == null) &#123; // 如果链表为空，则增加一个节点 Node&lt;E&gt; node = new Node&lt;&gt;(e); root.next = node; tail = node;// tail.next = node; &#125; else &#123; // 链表不为空，则往后增加 Node&lt;E&gt; node = tail;// 通过尾指针索引到最后一个节点 node.next = new Node&lt;&gt;(e);// 添加指针 tail = node.next;// tail.next = node; &#125; size++; &#125; /** * 移除链表中的元素 */ @Override public E remove(int index) &#123; // 处理边界情况 if (index &lt; 0 || index &gt; size - 1) &#123; System.out.println("越界错误"); return null; &#125; E e = null; if (index == size - 1) &#123; // 移除的是最后一个节点 Node&lt;E&gt; node = getNode(size - 1);// 获取倒数第二个节点// Node&lt;E&gt; removeNode = tail; e = node.next.e; node.next = null; tail = node; &#125; else if (index == 0) &#123; // 移除的是第一个节点 Node&lt;E&gt; node = root.next;// 获取倒数第一个节点 root.next = node.next; e = node.e; node.next = null; &#125; else &#123; Node&lt;E&gt; node = getNode(index - 1);// 获取倒数第二个节点 Node&lt;E&gt; removeNode = node.next; node.next = node.next.next; e = removeNode.e; removeNode.next = null; &#125; size--; return e; &#125; /** * 按索引取出链表中的节点 */ public Node&lt;E&gt; getNode(int index) &#123; Node&lt;E&gt; node = root; // 判断边界情况 if (index &lt; 0 || index &gt; size()) &#123; System.out.println("越界"); return null; &#125; for (int i = 0; i &lt;= index; i++) &#123; node = node.next; &#125; return node; &#125; /** * 按索引取出链表中的值 */ @Override public E get(int index) &#123; Node&lt;E&gt; node = root.next; // 判断边界情况 if (index &lt; 0 || index &gt; size()-1) &#123; System.out.println("越界"); return null; &#125; for (int i = 0; i &lt;index; i++) &#123; node = node.next; &#125; return node.e; &#125; @Override public int size() &#123; return size; &#125; @Override public void insert(E e, int index) &#123; // 边界判断 if (index &lt; 0 || index &gt; size - 1) &#123; System.out.println("越界"); return; &#125; if (index == 0) &#123; Node&lt;E&gt; node = new Node&lt;&gt;(e); node.next = root.next; root.next = node; &#125; else if (index == size - 1) &#123; // 插入到末尾 add(e); &#125; else &#123; // 插入到中间 Node&lt;E&gt; lastNode = getNode(index - 1);// 获取index-1索引处的节点 Node&lt;E&gt; node = new Node&lt;&gt;(e); node.next = lastNode.next.next; lastNode.next = node; &#125; size++; &#125; @Override public void update(E e, int index) &#123; &#125; &#125; 0x02 链表操作链表反转12345678910111213141516/** * 单链表反转。接住了两个辅助节点preNode、nextNode */public void reverse() &#123; Node&lt;E&gt; node = root.next;//取出第一个节点 Node&lt;E&gt; preNode = null; //存储前一个节点 Node&lt;E&gt; nextNode = null; //存储下一个节点 while(node!=null) &#123; nextNode = node.next; node.next = preNode; preNode = node; node = nextNode; &#125; tail = root.next; root.next = preNode;&#125; 0x03 总结]]></content>
      <tags>
        <tag>DataStructure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性表总结]]></title>
    <url>%2F2018%2F11%2F13%2F%E7%BA%BF%E6%80%A7%E8%A1%A8%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 线性表线性表是数据结构中最基本最简单的结构之一，其中的元素是一对一的对应关系。根据数据存储的方式特点，线性表基本可分为数组和链表两种。其中数组元素在内存空间的存储区域连续，链表元素在内存空间的存储区域非连续。对于线性表，常见的操作有添加元素、删除元素、插入元素、查找元素；对于以上操作，采用不同的数据结构实现就有不同的实现方式。对于数组而言，查找元素和添加元素相对简单，而插入和删除则需要移动大量元素，效率相对较低。对于链表而言，插入和删除元素相对简单，而查找和添加元素较之数组复杂（如果使用辅助节点记录下链表之尾，添加元素的时间复杂度也能下降，空间换时间罢了） 0x01 链表实现下面以Java为例实现一个链表。链表节点由数据域、引用域组成。链表的常见类型有 单链表 双向链表 循环链表 单链表考虑到应用链表数据结构的数据类型未知，所以应使用泛型实现链表，代码如下：1234567891011121314151617package com.linear;/** * 链表结点类 * @author CoolCats * @param &lt;E&gt; 泛型 */public class Node&lt;E&gt; &#123; public E e; //值 public Node&lt;E&gt; next;//下一个结点 public Node() &#123; &#125; public Node(E e) &#123; this.e = e; &#125;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149package com.linear;import com.dsinterface.LinkedInterface;/** * 实现链表基本操作 * @author CoolCats * * @param &lt;E&gt; */public class Linked&lt;E&gt; implements LinkedInterface&lt;E&gt; &#123; private Node&lt;E&gt; root;// 头结点 private Node&lt;E&gt; tail;// 尾节点 private int size;// 计算链表长度 public Linked() &#123; root = new Node&lt;&gt;(); &#125; /** * 添加结点 */ @Override public void add(E e) &#123;// Node node = root;//获取根节点：链表的起点 if (root.next == null) &#123; // 如果链表为空，则增加一个节点 Node&lt;E&gt; node = new Node&lt;&gt;(e); root.next = node; tail = node;// tail.next = node; &#125; else &#123; // 链表不为空，则往后增加 Node&lt;E&gt; node = tail;// 通过尾指针索引到最后一个节点 node.next = new Node&lt;&gt;(e);// 添加指针 tail = node.next;// tail.next = node; &#125; size++; &#125; /** * 移除链表中的元素 */ @Override public E remove(int index) &#123; // 处理边界情况 if (index &lt; 0 || index &gt; size - 1) &#123; System.out.println("越界错误"); return null; &#125; E e = null; if (index == size - 1) &#123; // 移除的是最后一个节点 Node&lt;E&gt; node = getNode(size - 1);// 获取倒数第二个节点// Node&lt;E&gt; removeNode = tail; e = node.next.e; node.next = null; tail = node; &#125; else if (index == 0) &#123; // 移除的是第一个节点 Node&lt;E&gt; node = root.next;// 获取倒数第一个节点 root.next = node.next; e = node.e; node.next = null; &#125; else &#123; Node&lt;E&gt; node = getNode(index - 1);// 获取倒数第二个节点 Node&lt;E&gt; removeNode = node.next; node.next = node.next.next; e = removeNode.e; removeNode.next = null; &#125; size--; return e; &#125; /** * 按索引取出链表中的节点 */ public Node&lt;E&gt; getNode(int index) &#123; Node&lt;E&gt; node = root; // 判断边界情况 if (index &lt; 0 || index &gt; size()) &#123; System.out.println("越界"); return null; &#125; for (int i = 0; i &lt;= index; i++) &#123; node = node.next; &#125; return node; &#125; /** * 按索引取出链表中的值 */ @Override public E get(int index) &#123; Node&lt;E&gt; node = root.next; // 判断边界情况 if (index &lt; 0 || index &gt; size()-1) &#123; System.out.println("越界"); return null; &#125; for (int i = 0; i &lt;index; i++) &#123; node = node.next; &#125; return node.e; &#125; @Override public int size() &#123; return size; &#125; @Override public void insert(E e, int index) &#123; // 边界判断 if (index &lt; 0 || index &gt; size - 1) &#123; System.out.println("越界"); return; &#125; if (index == 0) &#123; Node&lt;E&gt; node = new Node&lt;&gt;(e); node.next = root.next; root.next = node; &#125; else if (index == size - 1) &#123; // 插入到末尾 add(e); &#125; else &#123; // 插入到中间 Node&lt;E&gt; lastNode = getNode(index - 1);// 获取index-1索引处的节点 Node&lt;E&gt; node = new Node&lt;&gt;(e); node.next = lastNode.next.next; lastNode.next = node; &#125; size++; &#125; @Override public void update(E e, int index) &#123; &#125; &#125; 0x02 链表操作链表反转12345678910111213141516/** * 单链表反转。接住了两个辅助节点preNode、nextNode */public void reverse() &#123; Node&lt;E&gt; node = root.next;//取出第一个节点 Node&lt;E&gt; preNode = null; //存储前一个节点 Node&lt;E&gt; nextNode = null; //存储下一个节点 while(node!=null) &#123; nextNode = node.next; node.next = preNode; preNode = node; node = nextNode; &#125; tail = root.next; root.next = preNode;&#125; 0x03 总结]]></content>
      <tags>
        <tag>DataStructure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五子棋系列（一）]]></title>
    <url>%2F2018%2F10%2F02%2F%E4%BA%94%E5%AD%90%E6%A3%8B%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[0x00 整体思路寫一個簡單的五子棋，基本的思路如下： 绘制棋盘 准备棋子 完成落子逻辑 判断输赢用面向对象的思想来看，可以准备一个类来管理棋盘和棋子的绘制等、一个类负责UI、一个类负责处理事件（鼠标事件、按钮事件等）。具体功能的安排并不唯一，主要看你是如何看待五子棋游戏中的“对象”。上一个基础效果图： 0x01 所需知识以java为例编写程序，则所需知识包括 swing窗体及元素组件JFrame类：构建游戏窗体JButton类：构建按钮组件，承载如悔棋、更换模式等事件 事件监听机制主要搞清楚三个问题： 事件源对象是谁？即是哪个对象将要触发事件 事件监听方法是啥？一般来说事件有鼠标事件、Action事件、键盘事件等。不同的事件其监听方法不同，要在addActionListener、addMouseListener等监听方法中选择正确的方法。 事件处理类是？事件监听方法所接的参数实现了事件接口中抽象方法的类对象。 绘图与重绘使用Graphics对象对游戏对象进行绘制，并且要在刷新时重绘相应的元素。需要理解paint()方法。因屏幕为液晶屏，所以屏幕上所显示的界面：包括操作系统本身的桌面、各类应用程序的界面等，无一不是逐像素绘制出来的。对于java而言，默认的paint方法就用于绘制各种ui控件，当移动、放大、缩小窗口时，paint方法都会进行重绘，以实现我们看到的窗体变化的神奇效果，而如果是自己绘制棋盘、棋子等，默认的paint方法是不会对其进行重绘的，除非重写paint方法，把要重绘的内容保存在内存中或者记录在文件中，待刷新时则会重绘。正如在画图程序中绘制几何图形，如果不将所绘制的数据（坐标、属性等）保存在内存/文件中，一刷新或一退出就没了。但要实现几何要素的存储，又是个数据结构的问题，后期补充。 一点数学逻辑一点点数学逻辑在绘制棋盘棋子、判断输赢时会用到 0x02 人人对战五子棋项目分析 绘制棋盘棋盘是网格，定义好行、列数和格网间隔，即可用两个for循环绘制出五子棋盘。 绘制棋子绘制棋子可使用图片，也可通过迭代绘制的方式绘制出具有立体感的图像。立体感的物體其實只是人的一種立體感覺，通過颜色、线型等的變化组合即生成一幅具有立體感的圖片，計算機中可通过迭代的方式改变坐标值及不同坐標值処的顔色等屬性創造出具有立體感的東西。下圖展示了一種立體棋子的畫法每一次的迭代都更改画笔的颜色，同时不停改变圆的圆心以及半径，重复绘制了五十个圆，得出的黑子便具有了立体感。 落子判断落子判断所要实现的目标是，当玩家点击棋盘上某个交叉点附近的某个点时，要能够把棋子落在适当的交叉点上。实现思路有1）设置一个误差值，遍历棋盘格子，定位出棋子所应落在的交叉点，并在其中绘制棋子，不过此方法的复杂度太高，每一次落子都要进行几百次的计算，效率过低。2）设置一个误差值，当用户点击棋盘上某个点时，计算该点坐标与棋盘起始点的差值，这个差值在与棋盘的宽度作比，即可得到大致的行列坐标，对这一过程中得到的坐标小数位作判断确定真正的行列坐标应该是进一还是退一，从而绘制出棋子。当然，还需要考虑到用户可能会在棋盘外的范围点击，处理这一情况，以免出现落子到棋盘外的”尴尬局“。一种处理方法可以是这样的 输赢判断游戏，一般都会有个输赢，对于五子棋而言，如果不算上认输操作，那么从第五个回合开始，就每一步都可能会出现赢家，所以，从第五回合开始，应该每下一步棋就对棋局做一个判断，看胜者是否已经出现。要判断输赢，只需要看在四个方向上判断是否有五颗连续相同花色的棋子，如果有，则决出胜方。因此，可考虑用一个二维数组存储棋子的位置，判断连续棋子得问题就转化成对二维数组进行操作问题。大体思路如下: 0x03 AI下法所谓AI对战，其实也就是一个用一个算法去寻找一个“最佳”的落子点，当然这个最佳取决于算法的优劣，正如人下棋，能考虑得越全面，所找出的最佳落子点就越高质量。当然，这还需要考虑时间上的限制，如果为了考虑全面而导致下一步棋要思考几天，那这样的棋手也是失败的，这样的算法的实用意义微乎其微。所以，AI算法的核心在于，构造一个算法，在可接受的时间容差内能找出相对优质的落子点（起码不会犯很明显的错误，该堵的眠四活三都要堵上），至于AI能有多智能，就要看算法有多优秀。 权值法首先以权值法来实现一个最简单的AI棋手。权值法之名为“权值”，不难想象，就是要在棋盘中空的位置中找到一个权值最大的点并在其中落子，这个权值最大的点即是在这个算法体系下所认为的最佳落子点。于是乎，这就涉及到权值的计算方法。要如何计算棋盘上各点的权值会比较好？对于策略型棋类游戏而言，棋形是一个很重要的概念，不管是中国象棋、围棋、国际象棋还是五子棋，棋局中一方的棋形可以表征该方的棋子效率。所以，可以考虑以棋形来计算权值。而五子棋在那么多棋类游戏中算是简单的了，先接受一些基本的棋形概念（附部分图）： 活一能够形成活二的单子 眠一 活二 眠二 活三可形成活四 眠三 活四两端点均可形成的五子连珠 眠四一边可形成的五子连珠，另一边被封堵 注意，以上棋形都要针对每一行、列、斜向来综合考虑，也就是说棋盘上一个位置点受不同方向上棋形的不同，最终会得到权值的叠加，而权值法要做的就是找出权值最大的点，在该处下子。然后，问题就来了：如何为每种棋形确定一个合适的权值？一个感性的认识是，对方威胁性大的棋形附件点要赋予高权值（如果你认为高权值的点是该下的点的话），比如说对方有活三快要形成活四了，这一着算是致命棋了，所以活三这种棋形要赋予高权值，保证AI棋手遇到这种情形时要及时封堵。但是，如果说当前棋局中对手最大威胁的棋形是活三，而自己在此之前已经形成了活三，那么就可以不去堵对方的棋，直接给对手致命一击———形成活四将军。这可以通过调整两方棋形的权值来完成。简单来说，想让AI棋手具有何种下棋风格，是通过权值的调整来决定的，同样，权值的合理与否也决定了AI棋手的”智商“。 0x04 经验总结 Debug过程中遇到的一些坑 画笔对象的坑在处理画笔对象的过程，一度遇到”绘不出来“的情况，报的错误是空指针型的，但代码中确实有获取画笔对象这样的代码实现，为何就获取不到画笔对象呢？程序是忠实的，代码怎么写他就怎么运行。后面发现，错误的原因在于获取画笔对象的代码写到了窗体.setVisible(true)这一行代码前面去了，而这样写获取不到画笔对象的原因在于：画笔对象还没有被创建！画笔对象的创建是在程序窗体被绘制的过程中或者说是要绘制窗体的时候，这个过程隐藏在背后的”黑盒子里“，但是确实是这么个顺序，所以在绘制出窗体前获取到的画笔对象当然就是空的对象了。]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
        <tag>GAME</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基础知识持续总结篇]]></title>
    <url>%2F2018%2F10%2F01%2FLinux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%8C%81%E7%BB%AD%E6%80%BB%E7%BB%93%E7%AF%87%2F</url>
    <content type="text"><![CDATA[0x00 Linux规则与安装基本命令和使用技巧 图形界面的使用与切换 基础命令与常用技巧 在线求助 文本编辑器nano 0x01 Linux文件、目录与磁盘格式文件权限与目录配置 查看文件属性与权限 改变文件属性与权限 目录权限与文件权限的区别 改变目录权限读权限r：4；写权限w：2；执行权限x：1 555 666 777任何人都可读可写可执行 Linux文件种类 目录配置 目录树 Linux文件与目录管理0x02 shell与shell编程vim编辑器bash学习0x03 Linux使用者管理用户添加新用户账号useradd -c comment -d directory -g usergroup -G additionalgroup -s shellfile -u userid 删除用户账号userdel 修改用户账号用户组添加删除组 添加组groupadd常用参数有-g（指定用户组标识号） 删除已有用户组groupdel 查看组信息用户组所以信息存放在/etc/group文件中car /etc/group 添加组成员 添加单个用户 批量添加用户 删除组成员组权限管理0x04 Linux系统管理员多用户在线用户管理 查看当前在线用户w/whousers打印输出登录服务器的用户名称 查看用户行为w USERNAME 查看所使用的登陆名称whoami 0x05 安装演示Install the ubuntugis on ubuntu18.04prepare123456adduser gisusergpasswd -a gisuser sudosudo add-apt-repository ppa:ubuntugis/ppasudo lsb_release -asudo sh -c &apos;echo &quot;deb http://apt.postgresql.org/pub/repos/apt bionic-pgdg main&quot; &gt;&gt; /etc/apt/sources.list&apos;wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add - truly install123sudo apt install postgresql-10sudo apt install postgresql-10-postgis-2.4sudo apt install postgresql-10-postgis-scripts install pgRoute1sudo apt install postgresql-10-pgrouting however, I met the error “role gisuser doesn’t exists” when running psql.1sudo -u postgres psql Install GUI for Linux OSInstall vnc4server1apt-get install vnc4server Install xfce41apt-get install xfce4 Configure the vncserver4vi ~/.vnc/xstartup1234567891011121314151617#!/bin/sh # Uncomment the following two lines for normal desktop:# unset SESSION_MANAGER# exec /etc/X11/xinit/xinitrc[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresourcesxsetroot -solid greyvncconfig -iconic &amp;x-terminal-emulator -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP Desktop&quot; &amp;#x-window-manager &amp;session-manage &amp; xfdesktop &amp; xfce4-panel &amp;xfce4-menu-plugin &amp;xfsettingsd &amp;xfconfd &amp;xfwm4 &amp; create a .sh file1vncserver :1 then run the command to start vnc by default1update-rc.d vnc.sh defaults Testto check the vncserver status1ps -ef | grep vnc ####If you want to connect vncserver via original user but not root user, use your user to config vncserveradd password12vncpasswd//and then set your password change the config file, and restart your vncserver Debug If you can’t connect, maybe the aliyun conf should be change.However, the GUI on my PC looks very ugly and performs bad, but on iPad it looks quite well. Sometimes, you may encounter that the remote desktop could not be connected, complaining that ‘Too many security’ or other.The simple solution to these question could be: connect your server via ssh(with specified user that you want to login in via vnc), then connect the server via vnc. kill the vncserver ,and then restart it. The commands are as following:12vncserver -kill :1vncserver :1 If you want to use the original user to login but not root. Install gnomejust install the core part of gnome1apt-get install --no-install-recommends ubuntu-desktop gnome-panel gnome-settings-daemon metacity nautilus gnome-terminal -y Configure the VirtualhostEdit /etc/hostshosts file can help PC decode the domain and ip faster, by mapping spercified domain to some ip address.vi /etc/hosts1127.0.0.1 localhost Tutorialshttps://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04install xfce4 on ECS ubuntu:https://blog.csdn.net/dk_0228/article/details/54571867 ResourcesVNC Connect:https://www.realvnc.com/en/connect/download/viewer/X-manager:https://www.netsarang.com/zh/all-downloads/ Configure the shadowsocks proxyInstall the pip and setuptoolson Ubuntu, you can run the following command1apt-get install pip python-setuptools on CentOS, the command should be1yum install python-setuptools &amp;&amp; easy_install pip Install shadowsocks via pip1pip install shadowsocks create the config file and configure it.12touch /etc/shadowsocks.jsonvi /etc/shadowsocks.json the configuration content should be something like this:1234567891011&#123; &quot;server&quot;:&quot;your_ip&quot;, &quot;port_password&quot;:&#123; &quot;your_port1&quot;:&quot;your_password1&quot;, &quot;your_port2&quot;:&quot;your_password2&quot;, &quot;your_port3&quot;:&quot;your_password3&quot; &#125; &quot;timeout&quot;:&quot;600&quot;, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;:false&#125; Start the ssserver1ssserver -c /etc/shadowsocks.json -d start 0x06 工具使用演示unzip the .zip file1unzip -o XXX.ZIP -d EXTRACT_PATH 0x07 Vim搜索替换 /word在光标之下查找字符串 ?word在光标之上查找字符串 n重复前一个搜寻动作 N反向进行前一个搜索动作]]></content>
      <categories>
        <category>OS</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OOP要点总结]]></title>
    <url>%2F2018%2F09%2F26%2FOOP%E8%A6%81%E7%82%B9%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[0x00 类和对象 概念理解 类与对象的关系 对象指的是具体的某一件事物，如某一个苹果、某一部手机、某一本书等等，而类则是由具有共同属性的不同对象抽象而成的一个统称，手机、水果、书都可以算是一个类，他们不是具体的事物，而只是属性的集合体，如果把动物考虑在内，那么还可以算行为的集合体。所以全面一点来说，类就是具有相似属性和行为的对象的抽象概括，它具有“不具体、抽象”的特征。 程序中的类与对象 与现实相呼应，程序中的类会具有如下特征： 属性属性根据对象的特征来抽象。比如在几何对象模型中，最基本的属性有点的坐标、几何对象类型等。 方法（行为）方法也是根据对象的特征来抽象，可分为普通方法和构造方法。 普通方法 普通方法根据对象的功能、用途进行封装 构造方法 构造方法的功用在于实例化对象，并完成一些初始化的工作。实例化对象的格式为:类名 对象名 = new 类名(参数值,…参数值) 而程序中的对象则是实例化的类，即是已经分配了物理内存的玩意儿（new出来的）。 0x01 封装 封装基本概念 面向对象最重要的特性之一就是封装。把对象的一些属性、方法封装到类中，不仅可以方便地实现代码重用，还可以按照按照开发者的想法隐藏函数的具体实现细节，只开放相应的接口。 重要的概念有： 访问修饰符要义 public 随便调用、继承 protected 子类可继承，其他类不可调用 private 子类也不可继承 default 同一个包内可访问，相当于受限的public 0x02 继承 继承基本概念 继承是实现代码重用及扩展的有力武器。子类可以从父类中继承到非private的属性和方法，并可以重写某些方法属性，以应对具体的需求。 重载与重写的区别 重载（overload） 特征方法名一致，参数类型、参数个数、参数顺序至少有一个不一致 调用根据所给参数判断调用的是哪个方法 适用场景处理事情的种类不同，但处理的流程大致类似。比如对浮点数组成数组进行排序和对具有相同结构的整型数据组成的数组进行排序的处理逻辑是一模一样的或很相像，但在计算机程序中却不能很好地整合（忽略泛型的情况下）时，可使用重载。方法举例打(game)，打(call)，打(QQ电话，语音电话)。（栗子可能不是很好） 重写（overwrite） 特征必须存在与有继承关系的子类中，由子类重写父类的方法。要求方法名一致，参数一致，返回值类型一致。但内部实现不同，而且重写的方法的访问修饰符可以大于或等于父类的访问修饰符。 特殊条件构造方法不能重写；private修饰的方法不能重写；final修饰的方法不能重写 使用场景 父类方法不满足子类的需求时，需要重写。所谓长江后浪推前浪，不同辈的人对同一件事有不同的做法。 自动转型 0x03 接口 接口与类的区别 接口不能实例化 接口没有构造方法 接口中的方法必须为抽象方法 接口可以实现多继承 接口的作用 丰富继承关系 构建项目框架 注意事项 实现了接口的类要实现接口的所有抽象方法（tips：如果是MouseListener、MouseMotionListener，可以用另外的方法，即继承MouseAdapter类，并重写其中的相关事件处理方法即可，这样可以使得主要代码文件更清晰） 0x04 多态]]></content>
      <categories>
        <category>OOP</category>
      </categories>
      <tags>
        <tag>OOP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sklearn文本分类测试]]></title>
    <url>%2F2018%2F09%2F23%2Fsklearn%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[0x01 文本挖掘 搜索和信息检索（搜索引擎、关键字检索…） 文本聚类 文本分类 Web挖掘 信息抽取 自然语言处理（NLP） 概念提取 0x02 文本分类步骤 分词对于一篇文章，首先作分词，为之后通过词义以及词与词的逻辑衔接判断语义情绪作铺垫。在这个过程中，英文相对而言更好处理，可用空格处理，得到文章的标记向量。而中文文本则比较困难，现在通常是基于统计语言模型（SLM）作中文分词。知名软件工具如下 NLPIR汉语分词系统可在线分析，可下载 庖丁解牛分词器基于Lucene，开源 文本表示（文本向量化） 绝对词频以词在文本中出现的频率表示文本 相对词频归一化的词频。主要运用TF-IDF公式计算 分类标记将向量化后的文本与分类标签进行联系映射，常见算法如下 Rocchio 朴素贝叶斯算法 K-近邻算法（KNN） 支持向量机算法（SVM） 决策树算法 神经网络算法 and so on 0x03 sklearn中的文本分类测试 训练样本来源：http://qwone.com/~jason/20Newsgroups/下载链接：https://ndownloader.figshare.com/files/5975967 使用sklearn.datasets的fetch_20newsgroups模块可自动获取文本数据，脚本位置： 结果 0x04 总结 sklearn cheetsheet 文本分类方法优劣粗比较从以上结果看，贝叶斯方法和SVM的分类效果较好。 （待补充） 多项式朴素贝叶斯源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103class MultinomialNB(BaseDiscreteNB): """ Naive Bayes classifier for multinomial models The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification). The multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work. Read more in the :ref:`User Guide &lt;multinomial_naive_bayes&gt;`. Parameters ---------- alpha : float, optional (default=1.0) Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing). fit_prior : boolean, optional (default=True) Whether to learn class prior probabilities or not. If false, a uniform prior will be used. class_prior : array-like, size (n_classes,), optional (default=None) Prior probabilities of the classes. If specified the priors are not adjusted according to the data. Attributes ---------- class_log_prior_ : array, shape (n_classes, ) Smoothed empirical log probability for each class. intercept_ : property Mirrors ``class_log_prior_`` for interpreting MultinomialNB as a linear model. feature_log_prob_ : array, shape (n_classes, n_features) Empirical log probability of features given a class, ``P(x_i|y)``. coef_ : property Mirrors ``feature_log_prob_`` for interpreting MultinomialNB as a linear model. class_count_ : array, shape (n_classes,) Number of samples encountered for each class during fitting. This value is weighted by the sample weight when provided. feature_count_ : array, shape (n_classes, n_features) Number of samples encountered for each (class, feature) during fitting. This value is weighted by the sample weight when provided. Examples -------- &gt;&gt;&gt; import numpy as np &gt;&gt;&gt; X = np.random.randint(5, size=(6, 100)) &gt;&gt;&gt; y = np.array([1, 2, 3, 4, 5, 6]) &gt;&gt;&gt; from sklearn.naive_bayes import MultinomialNB &gt;&gt;&gt; clf = MultinomialNB() &gt;&gt;&gt; clf.fit(X, y) MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True) &gt;&gt;&gt; print(clf.predict(X[2:3])) [3] Notes ----- For the rationale behind the names `coef_` and `intercept_`, i.e. naive Bayes as a linear classifier, see J. Rennie et al. (2003), Tackling the poor assumptions of naive Bayes text classifiers, ICML. References ---------- C.D. Manning, P. Raghavan and H. Schuetze (2008). Introduction to Information Retrieval. Cambridge University Press, pp. 234-265. http://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html """ def __init__(self, alpha=1.0, fit_prior=True, class_prior=None): self.alpha = alpha self.fit_prior = fit_prior self.class_prior = class_prior def _count(self, X, Y): """Count and smooth feature occurrences.""" if np.any((X.data if issparse(X) else X) &lt; 0): raise ValueError("Input X must be non-negative") self.feature_count_ += safe_sparse_dot(Y.T, X) self.class_count_ += Y.sum(axis=0) def _update_feature_log_prob(self, alpha): """Apply smoothing to raw counts and recompute log probabilities""" smoothed_fc = self.feature_count_ + alpha smoothed_cc = smoothed_fc.sum(axis=1) self.feature_log_prob_ = (np.log(smoothed_fc) - np.log(smoothed_cc.reshape(-1, 1))) def _joint_log_likelihood(self, X): """Calculate the posterior log probability of the samples X""" check_is_fitted(self, "classes_") X = check_array(X, accept_sparse='csr') return (safe_sparse_dot(X, self.feature_log_prob_.T) + self.class_log_prior_) 0x05 参考文档高扬：《白话大数据与机器学习》斯坦福贝叶斯文本分类：https://nlp.stanford.edu/IR-book/html/htmledition/text-classification-and-naive-bayes-1.htmlsklearn类库]]></content>
      <categories>
        <category>MachineLearning</category>
      </categories>
      <tags>
        <tag>MachineLearning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Data Science BookMarks]]></title>
    <url>%2F2018%2F09%2F22%2FData-Science%2F</url>
    <content type="text"><![CDATA[平台斯坦福网络分析平台（SNAP）：http://snap.stanford.edu/index.html 各种分布之间的关系：http://www.math.wm.edu/~leemis/chart/UDR/UDR.html 数据集 网络分析复杂网络：人际关系网、科学家协会网、流行病传播网、神经元网、基因调控网、蛋白质交互网、电话网、因特网、万维网斯坦福大学公开数据集：http://snap.stanford.edu/data/复旦大学公开数据集：http://gdm.fudan.edu.cn/GDMWiki/Wiki.jsp?page=Network%20DataSetNewman：http://www-personal.umich.edu/~mejn/netdata/各数据集网站集合：https://hankin2015.github.io/2018/01/30/20180130DataSet/http://networkrepository.com/networks.php Twiiter数据-github版：https://github.com/shaypal5/awesome-twitter-data Twitter数据：https://www.trackmyhashtag.com/historical-twitter-data 图像分割伯克利：https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/ 信息安全标注的Tor数据：https://www.unb.ca/cic/datasets/tor.html标注的Vpn数据：https://www.unb.ca/cic/datasets/vpn.html 地图数据 中国古代矢量地图数据Point：https://sites.fas.harvard.edu/~chgis/data/chgis/v6/ 古代矢量地图Polygon：https://dataverse.harvard.edu/file.xhtml?persistentId=doi:10.7910/DVN/PDGOZ0/LUNGDO&amp;version=1.1 教材初等数学三角函数：https://www.khanacademy.org/math/geometry/hs-geo-trig/hs-geo-trig-ratios-intro/v/basic-trigonometry 机器学习PRML 强化学习Deep Q Learning：https://hackernoon.com/learning-policies-for-learning-policies-meta-reinforcement-learning-rl%C2%B2-in-tensorflow-b15b592a2ddf 深度学习Deep Learning and Convolutional neural networks：https://medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721 论文网络分析教程Newman：http://www-personal.umich.edu/~mejn/ 中文论文复杂网络聚类方法（吉林大学）：http://or.nsfc.gov.cn/bitstream/00001903-5/88182/1/1000002136429.pdf复杂网络及其应用：http://blog.tangzhixiong.com/post-0084-complex-network-notes.html 英文论文node2vec：https://arxiv.org/pdf/1607.00653.pdfDeepWalk：https://blog.csdn.net/u013527419/article/details/76017528复杂网络Matlab教程：http://www.levmuchnik.net/Content/Networks/NetworkPackageTutorial.htmlThe structure of scientific collaboration networks：https://arxiv.org/pdf/cond-mat/0007214.pdf 知乎https://zhuanlan.zhihu.com/p/35705787 可视化工具Tableau：https://en.wikipedia.org/wiki/Tableau_SoftwareEChart:https://vis.baidu.com/chartusage/stackedarea/ ；https://echarts.baidu.com/api.html#echartsInstancehighcharts：https://www.highcharts.com/demo/polar-wind-rose ;https://www.highcharts.com.cn/demo/highcharts#heatmap-treemapinfogram:https://infogram.com/app/#/welcomePlotly：https://plot.ly/r/#basic-chartsCodepen:https://codepen.io/pen知乎可视化工具推荐：https://www.zhihu.com/question/19929609Gephi：https://gephi.org/pajek：http://vlado.fmf.uni-lj.si/pub/networks/pajek/NodeXL：https://www.smrfoundation.org/nodexl/installation/Graphviz：gudhi：scikit-tda： 代码复杂网络Matlab代码：http://www.levmuchnik.net/ 深度学习caffe：https://github.com/BVLC/caffe/tree/windows 最优传输OTPOT：https://github.com/rflamary/POThttps://optimaltransport.github.io/resources/ 对抗网络生成对抗样本 A Step-by-Step Guide to Synthesizing Adversarial Exampleshttps://www.anishathalye.com/2017/07/25/synthesizing-adversarial-examples/?spm=a2c4e.11153940.blogcont149583.28.4ab360c0Wy2zX6&amp;tdsourcetag=s_pctim_aiomsg Introducing the Unrestricted Adversarial Examples Challengehttps://ai.googleblog.com/2018/09/introducing-unrestricted-adversarial.html?tdsourcetag=s_pctim_aiomsg GAN CycleGAN：https://junyanz.github.io/CycleGAN/]]></content>
      <categories>
        <category>Data_Science_BookMarks</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>BookMark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Bandit Wargame WriteUp]]></title>
    <url>%2F2018%2F09%2F20%2FBandit-Wargame-WriteUp%2F</url>
    <content type="text"><![CDATA[0x00 基本命令目录切换与列举 cd用于切换目录，change directory。~代表/home；.代表当前目录；..代表上级目录； ls用于列举目录，默认列举当前目录，后接路径可列举指定路径的文件及目录。默认情况下，不会列举出隐藏文件，如果希望列举隐藏文件，可接-a参数 ll列举得比ls更详细，默认会列举出目录下所有文件得所有信息，包括隐藏文件 mkdir chmod 文件信息查看 cat读取并标准打印文件内容。需要注意一些特殊文件。如文件名为-时。如果直接cat -，则得不不到预期的结果。因为-符号(dashed file)在shell读入的时候，并没有被解析成文件名，如果希望打开名为-的文件，可以指定相对路径或绝对路径，保证-被作为文件解析如果希望读入的文件名包含空格，如space fname。使用cat space fname也不能得到预期结果，因为默认情况下这会被解析成读取并打印名为space和fname两个文件的内容。解决办法可以为 file探测给定文件的类型。示例 du df 参考链接：https://www.google.com/search?q=dashed+filenamehttp://tldp.org/LDP/abs/html/special-chars.html 0x01 网络部分 ssh已知ssh私钥的情况下，连接远程主机方法：-i参数后接私钥文件路径-t参数可以指定所要使用的终端 telnet openssl 0x02 有趣的东西 setuidhttps://en.wikipedia.org/wiki/Setuid]]></content>
      <categories>
        <category>OS</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安恒杯周周练第17期国家网络宣传周特别版writeup]]></title>
    <url>%2F2018%2F09%2F17%2F%E5%AE%89%E6%81%92%E6%9D%AF%E5%91%A8%E5%91%A8%E7%BB%83%E7%AC%AC17%E6%9C%9F%E5%9B%BD%E5%AE%B6%E7%BD%91%E7%BB%9C%E5%AE%A3%E4%BC%A0%E5%91%A8%E7%89%B9%E5%88%AB%E7%89%88writeup%2F</url>
    <content type="text"><![CDATA[题目一题干 介绍文字学习网络安全，从一道CTF开始！——某公司的网站遭受到黑客攻击，存放在Apache配置文件中的重要信息被黑客盗取了。公司员工为了验证成因，使用明鉴Web应用弱点扫描器扫描网站并导出漏洞报告，你能通过分析漏洞报告得出黑客可能是采用哪种漏洞盗取重要信息的么？被盗取的重要信息是什么？ 渗透测试docx文档 靶机101.71.29.5:10000 解题过程审阅渗透测试文档，大致了解此网站存在的漏洞包括SQL注入、XSS、路径遍历、框架注入。由于泄露的信息是apache配置文件信息，猜测黑客更有可能是通过路径遍历或XSS完成信息盗取。 SQL注入测试注入类型为联合注入、时间盲注、布尔盲注，可注入数据库ctf中似乎并没有有价值的信息 路径遍历测试从渗透测试文档和SQLmap测试结果看服务器类型为CentOS，默认Apache安装目录为弱点url为http://172.16.80.11/index.php?act=about&amp;file=test.txt ; 使用./test.txt和/etc/hosts、/etc/httpd/conf/httpd.conf测试，发现确实可以获得信息其中 http://101.71.29.5:10000/index.php?act=about&amp;file=/etc/httpd/conf/httpd.conf 路径下获取到的阿帕che配置文件中含有flag，至此题目解决 XSS注入 框架注入 总结题目二题干 介绍这是一题关于order的注入，很简单的哦！来试一下吧！ 靶机101.71.29.5:10001 解题过程 手动测试题目明说了order注入，所以先试试desc或asc。尝试http://101.71.29.5:10001/?button=submit&amp;order=id%20desc，发现SQL语句得到执行即此处可注入。参考MySQL关于order by的文档https://dev.mysql.com/doc/refman/5.7/en/order-by-optimization.html对于order参数，分别给予rand(true)和rand(false)的赋值观察结果赋予表达式测试至此，思路清晰，尝试使用DVWA盲注那套手法，布尔型即可测试出结果 python测试 sqlmap测试 总结python测试：http://localhost:8889/labLhaihai的wp：https://hackmd.io/s/Sy95lTn_m#?tdsourcetag=s_pctim_aiomsgWeb快速反弹POST请求：https://ciphersaw.me/2017/12/16/%E8%AF%A6%E8%A7%A3%20CTF%20Web%20%E4%B8%AD%E7%9A%84%E5%BF%AB%E9%80%9F%E5%8F%8D%E5%BC%B9%20POST%20%E8%AF%B7%E6%B1%82/]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Applied GIS and Spatial Analysis]]></title>
    <url>%2F2018%2F09%2F05%2FApplied-GIS-and-Spatial-Analysis%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[Web安全持续总结篇]]></title>
    <url>%2F2018%2F08%2F30%2FWeb%E5%AE%89%E5%85%A8%E6%8C%81%E7%BB%AD%E6%80%BB%E7%BB%93%E7%AF%87%2F</url>
    <content type="text"><![CDATA[0x00 Web基础知识概述1. HTTP协议1.1HTTP历史1.2HTTP消息1.3HTTP状态码状态码用于描述客户端向服务端发送请求时的返回结果 1xx （信息性状态码） 2xx （成功状态码） 3xx （重定向状态码） 4xx （客户端错误状态码） 5xx （服务端错误状态码） 1.4学习资料《图解HTTP》《TCP/IP详解》借助代理软件分析HTTP请求 2. 计算机网络层次结构2.1应用层2.2表示层2.3会话层2.4传输层2.5网络层1）IP协议TTL：用于定义数据包的生存周期，一旦TTL==0，则该数据包会被丢弃数据包分片 2.6链路层2.7物理层3. Web编程语言3.1前端 html css js 入门资料w3cschool在线教程，后期框架官方文档jquery 3.2后端 php主流后端脚本语言，弱类型、面向对象，入门快。学习资料：PHP和MYSQL web开发、犀牛书，phpStudy（方便研究各个版本的PHP特点差异） asp java python go js 4. FAQs0x01 Web安全基础1. Web安全概述网络安全法：http://www.npc.gov.cn/npc/xinwen/2016-11/07/content_2001605.htm 2. 输入处理与安全性3. 输出处理与安全性4. SQL调用与安全性5. 文件操作与安全性文件操作包括文件包含、文件读取、文件删除、文件下载和文件上传，这几种文件操作的漏洞都有一定的相似点，但每种漏洞都有各自的漏洞函数以及利用方式 6. 系统命令调用与安全性7. 路由安全学习资料：图解HTTP协议、计算机网络(网络基础理论、要慢慢啃)、白帽子讲Web安全（介绍理念、经验）、Web应用安全权威指南（从开发者角度介绍Web安全，以及安全应用的构建）、黑客攻防…web篇、SQL注入攻击与防御（干货、比较全面地介绍SQl注入以及一优秀开源工具和商业软件，作者还同时是burpsuite的开发者）、XSS攻击与防御（邱xx写的，好像是吴瀚清的手下？）、PHP web应用代码审计、TCP/IP详解等等重要的还有关注i春秋、Freebuf等信安极客网站 0x02 渗透测试基本工具渗透测试基本工具主要分操作系统，软件，脚本。通常使用kali系统，windows下也可使用PentestBox（集成多款渗透测试工具，支持自己定制）或者安装APP版kali（在Windows商店，无图形界面也就几百兆吧，有bash环境和kali下的大部分工具，安装要关防火墙defender，也可安装GUI通过远程桌面连接whatever），自己写的脚本（复杂爆破，绕过防火墙等等）。下面依次应用层往下介绍一些经典工具。 1. Burpsuite综合渗透测试工具，主要功能模块有Proxy、Intruder、Scanner、Repeater等。一般可用于 信息收集 网络代理 密码爆破 编码转换 Scanner组合Target常用于信息收集，Proxy用作网络代理，默认监听端口为8080，可安装证书到手机从而实现手机端网络代理，并监听https的流量。 2. SQLmapsqlmap是一款针对数据库的安全测试工具以及管理工具，其功能主要分为四个模块： 判断是否有可注入的参数； 判断可用的注入技术； 识别数据库的类型 进行数据库的管理。 其支持的注入技术包括：基于布尔的注入、基于时间的注入、基于报错的注入、联合查询、内联查询。对环境的要求为python2.7。 2.1常用参数 -u该参数后为要测试的url，示例python sqlmap.py -u “http://www.emmmmm.com&quot; –data该参数用于指定POST方法要传递的参数，示例python sqlmap.py -u “http://www.emmmmm.com&quot; –data=”param1=A&amp;param2=B” –cookie该参数用于要带cookie访问网站的情况，示例python sqlmap.py -u “http://www.emmmmm.com&quot; –cookie=”cookie1=XXXXX;cookie2=XXXXXX” –current-user指定该参数将测试能否爆出数据库当前用户名 –current-db指定该参数将测试当前数据库名 –dbs该参数爆出当前用户所能访问的所有数据库名 -D指定数据库名 –tables指定数据库名后要爆的表名 -T –columns -C –dump 2.2本地数据库管理示例：sqlmap -d “mysql://username:password@hostname:port/database” –sql-shell注意：执行以上命令要求安装pymysql模块，成功执行后即可进入数据库的shell管理模式 2.3高级参数2.4源代码目录结构3. Wireshark1.1 学习资料1） https://wiki.wireshark.org/2） https://www.wireshark.org/docs 1.2 基本功能介绍1） 主界面 2） 基本使用技巧 快捷键 主菜单 4. CKnife5. 御剑0x03 安全漏洞及利用方法分析1.SQL注入1.1漏洞成因编写操作数据库代码时，直接将外部可控参数与SQL语句拼接在一起，且没有经过有效的过滤。（服务器端的实现未将数据与代码逻辑分离，或对用户提交的参数过滤不严格，导致SQL语句结构的改变，执行非开发者本意的操作。） 1.2漏洞危害数据泄露（用户个人隐私、敏感信息），服务器植入后门 1.3利用方法针对不同的漏洞代码情况和运行情况，通常把SQL注入分为普通注入、布尔盲注、时间盲注、报错注入、宽字节注入、二次注入等。1） 普通注入2） 布尔盲注3） 时间盲注4） 报错注入5） 宽字节注入6） 二次注入7） 堆注入 1.4防范措施1）使用gpc/rutime魔术引号2）使用安全的过滤函数和类 使用addslashes函数，过滤单引号、双引号、反斜杠、空字符（NULL），不过要在确认GPC没有开启的时候采用，而且要注意，此函数接受的参数必须时string类型 使用mysql_[real_]escape_string。mysql_escape_string mysql_real_eacape_string都会过滤\x00,\n,\r,\,’,”,\xla。两个函数的区别在于，后者接受一个连接句柄并根据当前字符集转义字符串 使用intval函数，将变量转换成int类型，针对int类型的期望参数。 参考OWSAP安全专家开发的SQL注入过滤类3）PDO prepare预编译 类似.NET的SqlParameter和java的prepareStatement。使用PDO模式执行SQL语句，不过要注意先使用ATTR_EMULATE_PREPARES来禁用PHP本地模拟prepare(利用函数setAttribute)4）从数据库自身来说，应尽量使用最小权限原则，避免高权限用户直接连接数据库，如果有多个应用同时使用同一个数据库，也应该为不同应用分配不同的账户 2.XSS注入2.1漏洞成因网页的部分显示内容依据外界输入值发生变化，而处理输出HTML的程序存在问题，未作有效的校检，则会滋生XSS漏洞 2.2漏洞危害 获取客户端信息（如用户浏览历史、真实ip、开放端口） Cookie信息被窃取，用户身份被冒名顶替 攻击者获得用户的权限恶意使用Web应用的功能 篡改网页（如恶意刷广告、劫持用户到恶意网站，实施钓鱼攻击窃取用户信息） 控制受害者机器向其他网站发动攻击XSS蠕虫 2.3XSS分类 反射型XSS直接通过外部输入恶意代码，在浏览器输出时触发 存储型XSS将恶意代码上传或存储到漏洞服务器中，一般是出现在帖子评论、留言功能处，数据库中的恶意代码一旦被输出，访问该页面（评论页面、留言页面…）的用户，如果系统存在安全隐患，都会受其影响。严重性很高，可借此发动DDoS DOM型XSS基于DOM文档对象模型的XSS，js可以通过DOM动态地修改页面的内容，且不依赖服务器端的数据，如果DOM接受的参数未经有效地过滤，则会滋生DOM-based XSS 2.3XSS攻击 利用&lt;&gt;标签注射html、js 利用html标签属性值执行xss 利用javascript:[code]伪协议绕过XSS过滤器 空格回车Tab绕过 对标签属性值进行转码处理 利用css执行跨站脚本利用css执行XSS比较隐秘，但css在各浏览器之间不能通用，甚至同意浏览器的不同版本都不能通用，因此限制较多 大小写绕过 双写绕过 拆分法跨站引入一个字符串变量，将payload拆分成多份，一步一步拼接成完整payload，实现xss。该方法适用于没有过滤&lt;&gt;等标签，但对字符长度有限制的情况 2.4防御XSS攻击 使用XSS Filter 定制过滤策略 注意Web安全编码规范 防御DOM based Anti_XSS 安装NoScript 使用WAF 3.文件上传3.1 漏洞成因对文件上传功能，未对上传文件的大小和单次或连续上传次数作限定，此时如恶意用户连续发起多次巨大文件上传则会造成拒绝服务攻击。在用户客户端存在漏洞的情况下，恶意用户上传的恶意文件如果被访问，则可能造成JS执行或者病毒传播。对于对文件类型限定不严格或将上传文件保存到公开目录中，恶意用户可上传脚本并在服务器端执行 3.2 攻击类型 恶意用户上传恶意脚本并执行 DoS攻击 诱使用户下载恶意文件 越权下载文件 3.3 漏洞危害拒绝服务攻击、造成数据篡改、隐私泄露、网站挂马等危害 3.4 攻击方法 修改扩展名，尝试大小写绕过、0x00截断、双写绕过、特殊扩展名(php3|php5|…)等措施试图绕过对扩展名的校验 修改MIME类型，试图绕过对MIME类型的校验 上传脚本文件时，修改文件头为图片的文件头 在图片上挂马 3.5 防御措施1）对上传文件的扩展名，采用白名单的机制过滤2）同时检校上传文件的MIME类型3）对文件头乃至文件内容作检校4）将上传目录设置权限为不可执行目录（在linux系统中，撤销上传目录的x权限）5）配置php.ini、httpd.conf等配置文件，限制上传文件的容量、次数、限制请求正文的容量，不使用文件上传功能时，在php.ini中将file_uploads配置项设置为off，禁止用户上传.htaccess文件改变局部目录的配置项6）使用随机数加salt修改上传后的文件名7）文件服务器与主干服务器分离并单独设置文件服务器的域名，由于同源策略的关系会限制XSS利用8）不要把文件保存在公开目录中，读取时采用脚本 4. 访问控制5. CSRF5.1 漏洞成因5.2 漏洞危害5.3 攻击手法5.4 防御措施 使用POST方法代替GET 检验HTTP referer 使用Token值 使用验证码 6. 文件包含6.1 漏洞成因6.2 漏洞危害6.3 攻击手法6.4 防御措施7. 命令注入域名劫持 0x04 渗透测试流程学习资料：kali渗透测试的艺术，XXXX魔鬼训练营，SQLlab 0x05 网站推荐usenixsecurity：https://www.usenix.org/conference/usenixsecurity19恶意软件分析大全集：https://github.com/rshipp/awesome-malware-analysis/blob/master/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90%E5%A4%A7%E5%90%88%E9%9B%86.md]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Summary</tag>
        <tag>Web</tag>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo命令及帮助手册]]></title>
    <url>%2F2018%2F01%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Custom UseAdd counterhttps://notes.doublemine.me/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud Code themehttps://github.com/chriskempson/tomorrow-theme]]></content>
  </entry>
</search>
